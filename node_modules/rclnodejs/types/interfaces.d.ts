/* eslint-disable camelcase */
/* eslint-disable max-len */
// DO NOT EDIT
// This file is generated by the rostsd_gen script

declare module 'rclnodejs' {
  namespace action_msgs {
    namespace msg {
      export interface GoalInfo {
        goal_id: unique_identifier_msgs.msg.UUID;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface GoalInfoConstructor {
        new(other?: GoalInfo): GoalInfo;
      }
      export interface GoalStatus {
        goal_info: action_msgs.msg.GoalInfo;
        status: number;
      }
      export interface GoalStatusConstructor {
        readonly STATUS_UNKNOWN: number;
        readonly STATUS_ACCEPTED: number;
        readonly STATUS_EXECUTING: number;
        readonly STATUS_CANCELING: number;
        readonly STATUS_SUCCEEDED: number;
        readonly STATUS_CANCELED: number;
        readonly STATUS_ABORTED: number;
        new(other?: GoalStatus): GoalStatus;
      }
      export interface GoalStatusArray {
        status_list: action_msgs.msg.GoalStatus[];
      }
      export interface GoalStatusArrayConstructor {
        new(other?: GoalStatusArray): GoalStatusArray;
      }
    }
    namespace srv {
      export interface CancelGoalConstructor extends ROSService {
        readonly Request: CancelGoal_RequestConstructor;
        readonly Response: CancelGoal_ResponseConstructor;
      }
      export interface CancelGoal_Request {
        goal_info: action_msgs.msg.GoalInfo;
      }
      export interface CancelGoal_RequestConstructor {
        new(other?: CancelGoal_Request): CancelGoal_Request;
      }
      export interface CancelGoal_Response {
        return_code: number;
        goals_canceling: action_msgs.msg.GoalInfo[];
      }
      export interface CancelGoal_ResponseConstructor {
        readonly ERROR_NONE: number;
        readonly ERROR_REJECTED: number;
        readonly ERROR_UNKNOWN_GOAL_ID: number;
        readonly ERROR_GOAL_TERMINATED: number;
        new(other?: CancelGoal_Response): CancelGoal_Response;
      }
    }
  }

  namespace action_tutorials_interfaces {
    namespace action {
      export interface FibonacciConstructor {
        readonly Goal: Fibonacci_GoalConstructor;
        readonly Result: Fibonacci_ResultConstructor;
        readonly Feedback: Fibonacci_FeedbackConstructor;
      }
      export interface Fibonacci_Feedback {
        partial_sequence: number[] | Int32Array;
      }
      export interface Fibonacci_FeedbackConstructor {
        new(other?: Fibonacci_Feedback): Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: action_tutorials_interfaces.action.Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessageConstructor {
        new(other?: Fibonacci_FeedbackMessage): Fibonacci_FeedbackMessage;
      }
      export interface Fibonacci_GetResultConstructor extends ROSService {
        readonly Request: Fibonacci_GetResult_RequestConstructor;
        readonly Response: Fibonacci_GetResult_ResponseConstructor;
      }
      export interface Fibonacci_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Fibonacci_GetResult_RequestConstructor {
        new(other?: Fibonacci_GetResult_Request): Fibonacci_GetResult_Request;
      }
      export interface Fibonacci_GetResult_Response {
        status: number;
        result: action_tutorials_interfaces.action.Fibonacci_Result;
      }
      export interface Fibonacci_GetResult_ResponseConstructor {
        new(other?: Fibonacci_GetResult_Response): Fibonacci_GetResult_Response;
      }
      export interface Fibonacci_Goal {
        order: number;
      }
      export interface Fibonacci_GoalConstructor {
        new(other?: Fibonacci_Goal): Fibonacci_Goal;
      }
      export interface Fibonacci_Result {
        sequence: number[] | Int32Array;
      }
      export interface Fibonacci_ResultConstructor {
        new(other?: Fibonacci_Result): Fibonacci_Result;
      }
      export interface Fibonacci_SendGoalConstructor extends ROSService {
        readonly Request: Fibonacci_SendGoal_RequestConstructor;
        readonly Response: Fibonacci_SendGoal_ResponseConstructor;
      }
      export interface Fibonacci_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: action_tutorials_interfaces.action.Fibonacci_Goal;
      }
      export interface Fibonacci_SendGoal_RequestConstructor {
        new(other?: Fibonacci_SendGoal_Request): Fibonacci_SendGoal_Request;
      }
      export interface Fibonacci_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Fibonacci_SendGoal_ResponseConstructor {
        new(other?: Fibonacci_SendGoal_Response): Fibonacci_SendGoal_Response;
      }
    }
  }

  namespace actionlib_msgs {
    namespace msg {
      export interface GoalID {
        stamp: builtin_interfaces.msg.Time;
        id: string;
      }
      export interface GoalIDConstructor {
        new(other?: GoalID): GoalID;
      }
      export interface GoalStatus {
        goal_id: actionlib_msgs.msg.GoalID;
        status: number;
        text: string;
      }
      export interface GoalStatusConstructor {
        readonly PENDING: number;
        readonly ACTIVE: number;
        readonly PREEMPTED: number;
        readonly SUCCEEDED: number;
        readonly ABORTED: number;
        readonly REJECTED: number;
        readonly PREEMPTING: number;
        readonly RECALLING: number;
        readonly RECALLED: number;
        readonly LOST: number;
        new(other?: GoalStatus): GoalStatus;
      }
      export interface GoalStatusArray {
        header: std_msgs.msg.Header;
        status_list: actionlib_msgs.msg.GoalStatus[];
      }
      export interface GoalStatusArrayConstructor {
        new(other?: GoalStatusArray): GoalStatusArray;
      }
    }
  }

  namespace builtin_interfaces {
    namespace msg {
      export interface Duration {
        sec: number;
        nanosec: number;
      }
      export interface DurationConstructor {
        new(other?: Duration): Duration;
      }
      export interface Time {
        sec: number;
        nanosec: number;
      }
      export interface TimeConstructor {
        new(other?: Time): Time;
      }
    }
  }

  namespace composition_interfaces {
    namespace srv {
      export interface ListNodesConstructor extends ROSService {
        readonly Request: ListNodes_RequestConstructor;
        readonly Response: ListNodes_ResponseConstructor;
      }
      export interface ListNodes_Request {
      }
      export interface ListNodes_RequestConstructor {
        new(other?: ListNodes_Request): ListNodes_Request;
      }
      export interface ListNodes_Response {
        full_node_names: string[];
        unique_ids: number[];
      }
      export interface ListNodes_ResponseConstructor {
        new(other?: ListNodes_Response): ListNodes_Response;
      }
      export interface LoadNodeConstructor extends ROSService {
        readonly Request: LoadNode_RequestConstructor;
        readonly Response: LoadNode_ResponseConstructor;
      }
      export interface LoadNode_Request {
        package_name: string;
        plugin_name: string;
        node_name: string;
        node_namespace: string;
        log_level: number;
        remap_rules: string[];
        parameters: rcl_interfaces.msg.Parameter[];
        extra_arguments: rcl_interfaces.msg.Parameter[];
      }
      export interface LoadNode_RequestConstructor {
        new(other?: LoadNode_Request): LoadNode_Request;
      }
      export interface LoadNode_Response {
        success: boolean;
        error_message: string;
        full_node_name: string;
        unique_id: number;
      }
      export interface LoadNode_ResponseConstructor {
        new(other?: LoadNode_Response): LoadNode_Response;
      }
      export interface UnloadNodeConstructor extends ROSService {
        readonly Request: UnloadNode_RequestConstructor;
        readonly Response: UnloadNode_ResponseConstructor;
      }
      export interface UnloadNode_Request {
        unique_id: number;
      }
      export interface UnloadNode_RequestConstructor {
        new(other?: UnloadNode_Request): UnloadNode_Request;
      }
      export interface UnloadNode_Response {
        success: boolean;
        error_message: string;
      }
      export interface UnloadNode_ResponseConstructor {
        new(other?: UnloadNode_Response): UnloadNode_Response;
      }
    }
  }

  namespace diagnostic_msgs {
    namespace msg {
      export interface DiagnosticArray {
        header: std_msgs.msg.Header;
        status: diagnostic_msgs.msg.DiagnosticStatus[];
      }
      export interface DiagnosticArrayConstructor {
        new(other?: DiagnosticArray): DiagnosticArray;
      }
      export interface DiagnosticStatus {
        level: number;
        name: string;
        message: string;
        hardware_id: string;
        values: diagnostic_msgs.msg.KeyValue[];
      }
      export interface DiagnosticStatusConstructor {
        readonly OK: number;
        readonly WARN: number;
        readonly ERROR: number;
        readonly STALE: number;
        new(other?: DiagnosticStatus): DiagnosticStatus;
      }
      export interface KeyValue {
        key: string;
        value: string;
      }
      export interface KeyValueConstructor {
        new(other?: KeyValue): KeyValue;
      }
    }
    namespace srv {
      export interface AddDiagnosticsConstructor extends ROSService {
        readonly Request: AddDiagnostics_RequestConstructor;
        readonly Response: AddDiagnostics_ResponseConstructor;
      }
      export interface AddDiagnostics_Request {
        load_namespace: string;
      }
      export interface AddDiagnostics_RequestConstructor {
        new(other?: AddDiagnostics_Request): AddDiagnostics_Request;
      }
      export interface AddDiagnostics_Response {
        success: boolean;
        message: string;
      }
      export interface AddDiagnostics_ResponseConstructor {
        new(other?: AddDiagnostics_Response): AddDiagnostics_Response;
      }
      export interface SelfTestConstructor extends ROSService {
        readonly Request: SelfTest_RequestConstructor;
        readonly Response: SelfTest_ResponseConstructor;
      }
      export interface SelfTest_Request {
      }
      export interface SelfTest_RequestConstructor {
        new(other?: SelfTest_Request): SelfTest_Request;
      }
      export interface SelfTest_Response {
        id: string;
        passed: number;
        status: diagnostic_msgs.msg.DiagnosticStatus[];
      }
      export interface SelfTest_ResponseConstructor {
        new(other?: SelfTest_Response): SelfTest_Response;
      }
    }
  }

  namespace example_interfaces {
    namespace action {
      export interface FibonacciConstructor {
        readonly Goal: Fibonacci_GoalConstructor;
        readonly Result: Fibonacci_ResultConstructor;
        readonly Feedback: Fibonacci_FeedbackConstructor;
      }
      export interface Fibonacci_Feedback {
        sequence: number[] | Int32Array;
      }
      export interface Fibonacci_FeedbackConstructor {
        new(other?: Fibonacci_Feedback): Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: example_interfaces.action.Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessageConstructor {
        new(other?: Fibonacci_FeedbackMessage): Fibonacci_FeedbackMessage;
      }
      export interface Fibonacci_GetResultConstructor extends ROSService {
        readonly Request: Fibonacci_GetResult_RequestConstructor;
        readonly Response: Fibonacci_GetResult_ResponseConstructor;
      }
      export interface Fibonacci_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Fibonacci_GetResult_RequestConstructor {
        new(other?: Fibonacci_GetResult_Request): Fibonacci_GetResult_Request;
      }
      export interface Fibonacci_GetResult_Response {
        status: number;
        result: example_interfaces.action.Fibonacci_Result;
      }
      export interface Fibonacci_GetResult_ResponseConstructor {
        new(other?: Fibonacci_GetResult_Response): Fibonacci_GetResult_Response;
      }
      export interface Fibonacci_Goal {
        order: number;
      }
      export interface Fibonacci_GoalConstructor {
        new(other?: Fibonacci_Goal): Fibonacci_Goal;
      }
      export interface Fibonacci_Result {
        sequence: number[] | Int32Array;
      }
      export interface Fibonacci_ResultConstructor {
        new(other?: Fibonacci_Result): Fibonacci_Result;
      }
      export interface Fibonacci_SendGoalConstructor extends ROSService {
        readonly Request: Fibonacci_SendGoal_RequestConstructor;
        readonly Response: Fibonacci_SendGoal_ResponseConstructor;
      }
      export interface Fibonacci_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: example_interfaces.action.Fibonacci_Goal;
      }
      export interface Fibonacci_SendGoal_RequestConstructor {
        new(other?: Fibonacci_SendGoal_Request): Fibonacci_SendGoal_Request;
      }
      export interface Fibonacci_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Fibonacci_SendGoal_ResponseConstructor {
        new(other?: Fibonacci_SendGoal_Response): Fibonacci_SendGoal_Response;
      }
    }
    namespace msg {
      export interface Bool {
        data: boolean;
      }
      export interface BoolConstructor {
        new(other?: Bool): Bool;
      }
      export interface Byte {
        data: number;
      }
      export interface ByteConstructor {
        new(other?: Byte): Byte;
      }
      export interface ByteMultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface ByteMultiArrayConstructor {
        new(other?: ByteMultiArray): ByteMultiArray;
      }
      export interface Char {
        data: number;
      }
      export interface CharConstructor {
        new(other?: Char): Char;
      }
      export interface Empty {
      }
      export interface EmptyConstructor {
        new(other?: Empty): Empty;
      }
      export interface Float32 {
        data: number;
      }
      export interface Float32Constructor {
        new(other?: Float32): Float32;
      }
      export interface Float32MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Float32Array;
      }
      export interface Float32MultiArrayConstructor {
        new(other?: Float32MultiArray): Float32MultiArray;
      }
      export interface Float64 {
        data: number;
      }
      export interface Float64Constructor {
        new(other?: Float64): Float64;
      }
      export interface Float64MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Float64Array;
      }
      export interface Float64MultiArrayConstructor {
        new(other?: Float64MultiArray): Float64MultiArray;
      }
      export interface Int16 {
        data: number;
      }
      export interface Int16Constructor {
        new(other?: Int16): Int16;
      }
      export interface Int16MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Int16Array;
      }
      export interface Int16MultiArrayConstructor {
        new(other?: Int16MultiArray): Int16MultiArray;
      }
      export interface Int32 {
        data: number;
      }
      export interface Int32Constructor {
        new(other?: Int32): Int32;
      }
      export interface Int32MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Int32Array;
      }
      export interface Int32MultiArrayConstructor {
        new(other?: Int32MultiArray): Int32MultiArray;
      }
      export interface Int64 {
        data: number;
      }
      export interface Int64Constructor {
        new(other?: Int64): Int64;
      }
      export interface Int64MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[];
      }
      export interface Int64MultiArrayConstructor {
        new(other?: Int64MultiArray): Int64MultiArray;
      }
      export interface Int8 {
        data: number;
      }
      export interface Int8Constructor {
        new(other?: Int8): Int8;
      }
      export interface Int8MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Int8Array;
      }
      export interface Int8MultiArrayConstructor {
        new(other?: Int8MultiArray): Int8MultiArray;
      }
      export interface MultiArrayDimension {
        label: string;
        size: number;
        stride: number;
      }
      export interface MultiArrayDimensionConstructor {
        new(other?: MultiArrayDimension): MultiArrayDimension;
      }
      export interface MultiArrayLayout {
        dim: example_interfaces.msg.MultiArrayDimension[];
        data_offset: number;
      }
      export interface MultiArrayLayoutConstructor {
        new(other?: MultiArrayLayout): MultiArrayLayout;
      }
      export interface String {
        data: string;
      }
      export interface StringConstructor {
        new(other?: String): String;
      }
      export interface UInt16 {
        data: number;
      }
      export interface UInt16Constructor {
        new(other?: UInt16): UInt16;
      }
      export interface UInt16MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Uint16Array;
      }
      export interface UInt16MultiArrayConstructor {
        new(other?: UInt16MultiArray): UInt16MultiArray;
      }
      export interface UInt32 {
        data: number;
      }
      export interface UInt32Constructor {
        new(other?: UInt32): UInt32;
      }
      export interface UInt32MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Uint32Array;
      }
      export interface UInt32MultiArrayConstructor {
        new(other?: UInt32MultiArray): UInt32MultiArray;
      }
      export interface UInt64 {
        data: number;
      }
      export interface UInt64Constructor {
        new(other?: UInt64): UInt64;
      }
      export interface UInt64MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[];
      }
      export interface UInt64MultiArrayConstructor {
        new(other?: UInt64MultiArray): UInt64MultiArray;
      }
      export interface UInt8 {
        data: number;
      }
      export interface UInt8Constructor {
        new(other?: UInt8): UInt8;
      }
      export interface UInt8MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface UInt8MultiArrayConstructor {
        new(other?: UInt8MultiArray): UInt8MultiArray;
      }
      export interface WString {
        data: string;
      }
      export interface WStringConstructor {
        new(other?: WString): WString;
      }
    }
    namespace srv {
      export interface AddTwoIntsConstructor extends ROSService {
        readonly Request: AddTwoInts_RequestConstructor;
        readonly Response: AddTwoInts_ResponseConstructor;
      }
      export interface AddTwoInts_Request {
        a: number;
        b: number;
      }
      export interface AddTwoInts_RequestConstructor {
        new(other?: AddTwoInts_Request): AddTwoInts_Request;
      }
      export interface AddTwoInts_Response {
        sum: number;
      }
      export interface AddTwoInts_ResponseConstructor {
        new(other?: AddTwoInts_Response): AddTwoInts_Response;
      }
      export interface SetBoolConstructor extends ROSService {
        readonly Request: SetBool_RequestConstructor;
        readonly Response: SetBool_ResponseConstructor;
      }
      export interface SetBool_Request {
        data: boolean;
      }
      export interface SetBool_RequestConstructor {
        new(other?: SetBool_Request): SetBool_Request;
      }
      export interface SetBool_Response {
        success: boolean;
        message: string;
      }
      export interface SetBool_ResponseConstructor {
        new(other?: SetBool_Response): SetBool_Response;
      }
      export interface TriggerConstructor extends ROSService {
        readonly Request: Trigger_RequestConstructor;
        readonly Response: Trigger_ResponseConstructor;
      }
      export interface Trigger_Request {
      }
      export interface Trigger_RequestConstructor {
        new(other?: Trigger_Request): Trigger_Request;
      }
      export interface Trigger_Response {
        success: boolean;
        message: string;
      }
      export interface Trigger_ResponseConstructor {
        new(other?: Trigger_Response): Trigger_Response;
      }
    }
  }

  namespace gazebo_msgs {
    namespace msg {
      export interface ContactState {
        info: string;
        collision1_name: string;
        collision2_name: string;
        wrenches: geometry_msgs.msg.Wrench[];
        total_wrench: geometry_msgs.msg.Wrench;
        contact_positions: geometry_msgs.msg.Vector3[];
        contact_normals: geometry_msgs.msg.Vector3[];
        depths: number[] | Float64Array;
      }
      export interface ContactStateConstructor {
        new(other?: ContactState): ContactState;
      }
      export interface ContactsState {
        header: std_msgs.msg.Header;
        states: gazebo_msgs.msg.ContactState[];
      }
      export interface ContactsStateConstructor {
        new(other?: ContactsState): ContactsState;
      }
      export interface EntityState {
        name: string;
        pose: geometry_msgs.msg.Pose;
        twist: geometry_msgs.msg.Twist;
        reference_frame: string;
      }
      export interface EntityStateConstructor {
        new(other?: EntityState): EntityState;
      }
      export interface LinkState {
        link_name: string;
        pose: geometry_msgs.msg.Pose;
        twist: geometry_msgs.msg.Twist;
        reference_frame: string;
      }
      export interface LinkStateConstructor {
        new(other?: LinkState): LinkState;
      }
      export interface LinkStates {
        name: string[];
        pose: geometry_msgs.msg.Pose[];
        twist: geometry_msgs.msg.Twist[];
      }
      export interface LinkStatesConstructor {
        new(other?: LinkStates): LinkStates;
      }
      export interface ModelState {
        model_name: string;
        pose: geometry_msgs.msg.Pose;
        twist: geometry_msgs.msg.Twist;
        reference_frame: string;
      }
      export interface ModelStateConstructor {
        new(other?: ModelState): ModelState;
      }
      export interface ModelStates {
        name: string[];
        pose: geometry_msgs.msg.Pose[];
        twist: geometry_msgs.msg.Twist[];
      }
      export interface ModelStatesConstructor {
        new(other?: ModelStates): ModelStates;
      }
      export interface ODEJointProperties {
        damping: number[] | Float64Array;
        hi_stop: number[] | Float64Array;
        lo_stop: number[] | Float64Array;
        erp: number[] | Float64Array;
        cfm: number[] | Float64Array;
        stop_erp: number[] | Float64Array;
        stop_cfm: number[] | Float64Array;
        fudge_factor: number[] | Float64Array;
        fmax: number[] | Float64Array;
        vel: number[] | Float64Array;
      }
      export interface ODEJointPropertiesConstructor {
        new(other?: ODEJointProperties): ODEJointProperties;
      }
      export interface ODEPhysics {
        auto_disable_bodies: boolean;
        sor_pgs_precon_iters: number;
        sor_pgs_iters: number;
        sor_pgs_w: number;
        sor_pgs_rms_error_tol: number;
        contact_surface_layer: number;
        contact_max_correcting_vel: number;
        cfm: number;
        erp: number;
        max_contacts: number;
      }
      export interface ODEPhysicsConstructor {
        new(other?: ODEPhysics): ODEPhysics;
      }
      export interface PerformanceMetrics {
        header: std_msgs.msg.Header;
        real_time_factor: number;
        sensors: gazebo_msgs.msg.SensorPerformanceMetric[];
      }
      export interface PerformanceMetricsConstructor {
        new(other?: PerformanceMetrics): PerformanceMetrics;
      }
      export interface SensorPerformanceMetric {
        name: string;
        sim_update_rate: number;
        real_update_rate: number;
        fps: number;
      }
      export interface SensorPerformanceMetricConstructor {
        new(other?: SensorPerformanceMetric): SensorPerformanceMetric;
      }
      export interface WorldState {
        header: std_msgs.msg.Header;
        name: string[];
        pose: geometry_msgs.msg.Pose[];
        twist: geometry_msgs.msg.Twist[];
        wrench: geometry_msgs.msg.Wrench[];
      }
      export interface WorldStateConstructor {
        new(other?: WorldState): WorldState;
      }
    }
    namespace srv {
      export interface ApplyBodyWrenchConstructor extends ROSService {
        readonly Request: ApplyBodyWrench_RequestConstructor;
        readonly Response: ApplyBodyWrench_ResponseConstructor;
      }
      export interface ApplyBodyWrench_Request {
        body_name: string;
        reference_frame: string;
        reference_point: geometry_msgs.msg.Point;
        wrench: geometry_msgs.msg.Wrench;
        start_time: builtin_interfaces.msg.Time;
        duration: builtin_interfaces.msg.Duration;
      }
      export interface ApplyBodyWrench_RequestConstructor {
        new(other?: ApplyBodyWrench_Request): ApplyBodyWrench_Request;
      }
      export interface ApplyBodyWrench_Response {
        success: boolean;
        status_message: string;
      }
      export interface ApplyBodyWrench_ResponseConstructor {
        new(other?: ApplyBodyWrench_Response): ApplyBodyWrench_Response;
      }
      export interface ApplyJointEffortConstructor extends ROSService {
        readonly Request: ApplyJointEffort_RequestConstructor;
        readonly Response: ApplyJointEffort_ResponseConstructor;
      }
      export interface ApplyJointEffort_Request {
        joint_name: string;
        effort: number;
        start_time: builtin_interfaces.msg.Time;
        duration: builtin_interfaces.msg.Duration;
      }
      export interface ApplyJointEffort_RequestConstructor {
        new(other?: ApplyJointEffort_Request): ApplyJointEffort_Request;
      }
      export interface ApplyJointEffort_Response {
        success: boolean;
        status_message: string;
      }
      export interface ApplyJointEffort_ResponseConstructor {
        new(other?: ApplyJointEffort_Response): ApplyJointEffort_Response;
      }
      export interface ApplyLinkWrenchConstructor extends ROSService {
        readonly Request: ApplyLinkWrench_RequestConstructor;
        readonly Response: ApplyLinkWrench_ResponseConstructor;
      }
      export interface ApplyLinkWrench_Request {
        link_name: string;
        reference_frame: string;
        reference_point: geometry_msgs.msg.Point;
        wrench: geometry_msgs.msg.Wrench;
        start_time: builtin_interfaces.msg.Time;
        duration: builtin_interfaces.msg.Duration;
      }
      export interface ApplyLinkWrench_RequestConstructor {
        new(other?: ApplyLinkWrench_Request): ApplyLinkWrench_Request;
      }
      export interface ApplyLinkWrench_Response {
        success: boolean;
        status_message: string;
      }
      export interface ApplyLinkWrench_ResponseConstructor {
        new(other?: ApplyLinkWrench_Response): ApplyLinkWrench_Response;
      }
      export interface BodyRequestConstructor extends ROSService {
        readonly Request: BodyRequest_RequestConstructor;
        readonly Response: BodyRequest_ResponseConstructor;
      }
      export interface BodyRequest_Request {
        body_name: string;
      }
      export interface BodyRequest_RequestConstructor {
        new(other?: BodyRequest_Request): BodyRequest_Request;
      }
      export interface BodyRequest_Response {
      }
      export interface BodyRequest_ResponseConstructor {
        new(other?: BodyRequest_Response): BodyRequest_Response;
      }
      export interface DeleteEntityConstructor extends ROSService {
        readonly Request: DeleteEntity_RequestConstructor;
        readonly Response: DeleteEntity_ResponseConstructor;
      }
      export interface DeleteEntity_Request {
        name: string;
      }
      export interface DeleteEntity_RequestConstructor {
        new(other?: DeleteEntity_Request): DeleteEntity_Request;
      }
      export interface DeleteEntity_Response {
        success: boolean;
        status_message: string;
      }
      export interface DeleteEntity_ResponseConstructor {
        new(other?: DeleteEntity_Response): DeleteEntity_Response;
      }
      export interface DeleteLightConstructor extends ROSService {
        readonly Request: DeleteLight_RequestConstructor;
        readonly Response: DeleteLight_ResponseConstructor;
      }
      export interface DeleteLight_Request {
        light_name: string;
      }
      export interface DeleteLight_RequestConstructor {
        new(other?: DeleteLight_Request): DeleteLight_Request;
      }
      export interface DeleteLight_Response {
        success: boolean;
        status_message: string;
      }
      export interface DeleteLight_ResponseConstructor {
        new(other?: DeleteLight_Response): DeleteLight_Response;
      }
      export interface DeleteModelConstructor extends ROSService {
        readonly Request: DeleteModel_RequestConstructor;
        readonly Response: DeleteModel_ResponseConstructor;
      }
      export interface DeleteModel_Request {
        model_name: string;
      }
      export interface DeleteModel_RequestConstructor {
        new(other?: DeleteModel_Request): DeleteModel_Request;
      }
      export interface DeleteModel_Response {
        success: boolean;
        status_message: string;
      }
      export interface DeleteModel_ResponseConstructor {
        new(other?: DeleteModel_Response): DeleteModel_Response;
      }
      export interface GetEntityStateConstructor extends ROSService {
        readonly Request: GetEntityState_RequestConstructor;
        readonly Response: GetEntityState_ResponseConstructor;
      }
      export interface GetEntityState_Request {
        name: string;
        reference_frame: string;
      }
      export interface GetEntityState_RequestConstructor {
        new(other?: GetEntityState_Request): GetEntityState_Request;
      }
      export interface GetEntityState_Response {
        header: std_msgs.msg.Header;
        state: gazebo_msgs.msg.EntityState;
        success: boolean;
      }
      export interface GetEntityState_ResponseConstructor {
        new(other?: GetEntityState_Response): GetEntityState_Response;
      }
      export interface GetJointPropertiesConstructor extends ROSService {
        readonly Request: GetJointProperties_RequestConstructor;
        readonly Response: GetJointProperties_ResponseConstructor;
      }
      export interface GetJointProperties_Request {
        joint_name: string;
      }
      export interface GetJointProperties_RequestConstructor {
        new(other?: GetJointProperties_Request): GetJointProperties_Request;
      }
      export interface GetJointProperties_Response {
        type: number;
        damping: number[] | Float64Array;
        position: number[] | Float64Array;
        rate: number[] | Float64Array;
        success: boolean;
        status_message: string;
      }
      export interface GetJointProperties_ResponseConstructor {
        readonly REVOLUTE: number;
        readonly CONTINUOUS: number;
        readonly PRISMATIC: number;
        readonly FIXED: number;
        readonly BALL: number;
        readonly UNIVERSAL: number;
        new(other?: GetJointProperties_Response): GetJointProperties_Response;
      }
      export interface GetLightPropertiesConstructor extends ROSService {
        readonly Request: GetLightProperties_RequestConstructor;
        readonly Response: GetLightProperties_ResponseConstructor;
      }
      export interface GetLightProperties_Request {
        light_name: string;
      }
      export interface GetLightProperties_RequestConstructor {
        new(other?: GetLightProperties_Request): GetLightProperties_Request;
      }
      export interface GetLightProperties_Response {
        diffuse: std_msgs.msg.ColorRGBA;
        attenuation_constant: number;
        attenuation_linear: number;
        attenuation_quadratic: number;
        success: boolean;
        status_message: string;
      }
      export interface GetLightProperties_ResponseConstructor {
        new(other?: GetLightProperties_Response): GetLightProperties_Response;
      }
      export interface GetLinkPropertiesConstructor extends ROSService {
        readonly Request: GetLinkProperties_RequestConstructor;
        readonly Response: GetLinkProperties_ResponseConstructor;
      }
      export interface GetLinkProperties_Request {
        link_name: string;
      }
      export interface GetLinkProperties_RequestConstructor {
        new(other?: GetLinkProperties_Request): GetLinkProperties_Request;
      }
      export interface GetLinkProperties_Response {
        com: geometry_msgs.msg.Pose;
        gravity_mode: boolean;
        mass: number;
        ixx: number;
        ixy: number;
        ixz: number;
        iyy: number;
        iyz: number;
        izz: number;
        success: boolean;
        status_message: string;
      }
      export interface GetLinkProperties_ResponseConstructor {
        new(other?: GetLinkProperties_Response): GetLinkProperties_Response;
      }
      export interface GetLinkStateConstructor extends ROSService {
        readonly Request: GetLinkState_RequestConstructor;
        readonly Response: GetLinkState_ResponseConstructor;
      }
      export interface GetLinkState_Request {
        link_name: string;
        reference_frame: string;
      }
      export interface GetLinkState_RequestConstructor {
        new(other?: GetLinkState_Request): GetLinkState_Request;
      }
      export interface GetLinkState_Response {
        link_state: gazebo_msgs.msg.LinkState;
        success: boolean;
        status_message: string;
      }
      export interface GetLinkState_ResponseConstructor {
        new(other?: GetLinkState_Response): GetLinkState_Response;
      }
      export interface GetModelListConstructor extends ROSService {
        readonly Request: GetModelList_RequestConstructor;
        readonly Response: GetModelList_ResponseConstructor;
      }
      export interface GetModelList_Request {
      }
      export interface GetModelList_RequestConstructor {
        new(other?: GetModelList_Request): GetModelList_Request;
      }
      export interface GetModelList_Response {
        header: std_msgs.msg.Header;
        model_names: string[];
        success: boolean;
      }
      export interface GetModelList_ResponseConstructor {
        new(other?: GetModelList_Response): GetModelList_Response;
      }
      export interface GetModelPropertiesConstructor extends ROSService {
        readonly Request: GetModelProperties_RequestConstructor;
        readonly Response: GetModelProperties_ResponseConstructor;
      }
      export interface GetModelProperties_Request {
        model_name: string;
      }
      export interface GetModelProperties_RequestConstructor {
        new(other?: GetModelProperties_Request): GetModelProperties_Request;
      }
      export interface GetModelProperties_Response {
        parent_model_name: string;
        canonical_body_name: string;
        body_names: string[];
        geom_names: string[];
        joint_names: string[];
        child_model_names: string[];
        is_static: boolean;
        success: boolean;
        status_message: string;
      }
      export interface GetModelProperties_ResponseConstructor {
        new(other?: GetModelProperties_Response): GetModelProperties_Response;
      }
      export interface GetModelStateConstructor extends ROSService {
        readonly Request: GetModelState_RequestConstructor;
        readonly Response: GetModelState_ResponseConstructor;
      }
      export interface GetModelState_Request {
        model_name: string;
        relative_entity_name: string;
      }
      export interface GetModelState_RequestConstructor {
        new(other?: GetModelState_Request): GetModelState_Request;
      }
      export interface GetModelState_Response {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
        twist: geometry_msgs.msg.Twist;
        success: boolean;
        status_message: string;
      }
      export interface GetModelState_ResponseConstructor {
        new(other?: GetModelState_Response): GetModelState_Response;
      }
      export interface GetPhysicsPropertiesConstructor extends ROSService {
        readonly Request: GetPhysicsProperties_RequestConstructor;
        readonly Response: GetPhysicsProperties_ResponseConstructor;
      }
      export interface GetPhysicsProperties_Request {
      }
      export interface GetPhysicsProperties_RequestConstructor {
        new(other?: GetPhysicsProperties_Request): GetPhysicsProperties_Request;
      }
      export interface GetPhysicsProperties_Response {
        time_step: number;
        pause: boolean;
        max_update_rate: number;
        gravity: geometry_msgs.msg.Vector3;
        ode_config: gazebo_msgs.msg.ODEPhysics;
        success: boolean;
        status_message: string;
      }
      export interface GetPhysicsProperties_ResponseConstructor {
        new(other?: GetPhysicsProperties_Response): GetPhysicsProperties_Response;
      }
      export interface GetWorldPropertiesConstructor extends ROSService {
        readonly Request: GetWorldProperties_RequestConstructor;
        readonly Response: GetWorldProperties_ResponseConstructor;
      }
      export interface GetWorldProperties_Request {
      }
      export interface GetWorldProperties_RequestConstructor {
        new(other?: GetWorldProperties_Request): GetWorldProperties_Request;
      }
      export interface GetWorldProperties_Response {
        sim_time: number;
        model_names: string[];
        rendering_enabled: boolean;
        success: boolean;
        status_message: string;
      }
      export interface GetWorldProperties_ResponseConstructor {
        new(other?: GetWorldProperties_Response): GetWorldProperties_Response;
      }
      export interface JointRequestConstructor extends ROSService {
        readonly Request: JointRequest_RequestConstructor;
        readonly Response: JointRequest_ResponseConstructor;
      }
      export interface JointRequest_Request {
        joint_name: string;
      }
      export interface JointRequest_RequestConstructor {
        new(other?: JointRequest_Request): JointRequest_Request;
      }
      export interface JointRequest_Response {
      }
      export interface JointRequest_ResponseConstructor {
        new(other?: JointRequest_Response): JointRequest_Response;
      }
      export interface LinkRequestConstructor extends ROSService {
        readonly Request: LinkRequest_RequestConstructor;
        readonly Response: LinkRequest_ResponseConstructor;
      }
      export interface LinkRequest_Request {
        link_name: string;
      }
      export interface LinkRequest_RequestConstructor {
        new(other?: LinkRequest_Request): LinkRequest_Request;
      }
      export interface LinkRequest_Response {
      }
      export interface LinkRequest_ResponseConstructor {
        new(other?: LinkRequest_Response): LinkRequest_Response;
      }
      export interface SetEntityStateConstructor extends ROSService {
        readonly Request: SetEntityState_RequestConstructor;
        readonly Response: SetEntityState_ResponseConstructor;
      }
      export interface SetEntityState_Request {
        state: gazebo_msgs.msg.EntityState;
      }
      export interface SetEntityState_RequestConstructor {
        new(other?: SetEntityState_Request): SetEntityState_Request;
      }
      export interface SetEntityState_Response {
        success: boolean;
      }
      export interface SetEntityState_ResponseConstructor {
        new(other?: SetEntityState_Response): SetEntityState_Response;
      }
      export interface SetJointPropertiesConstructor extends ROSService {
        readonly Request: SetJointProperties_RequestConstructor;
        readonly Response: SetJointProperties_ResponseConstructor;
      }
      export interface SetJointProperties_Request {
        joint_name: string;
        ode_joint_config: gazebo_msgs.msg.ODEJointProperties;
      }
      export interface SetJointProperties_RequestConstructor {
        new(other?: SetJointProperties_Request): SetJointProperties_Request;
      }
      export interface SetJointProperties_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetJointProperties_ResponseConstructor {
        new(other?: SetJointProperties_Response): SetJointProperties_Response;
      }
      export interface SetJointTrajectoryConstructor extends ROSService {
        readonly Request: SetJointTrajectory_RequestConstructor;
        readonly Response: SetJointTrajectory_ResponseConstructor;
      }
      export interface SetJointTrajectory_Request {
        model_name: string;
        joint_trajectory: trajectory_msgs.msg.JointTrajectory;
        model_pose: geometry_msgs.msg.Pose;
        set_model_pose: boolean;
        disable_physics_updates: boolean;
      }
      export interface SetJointTrajectory_RequestConstructor {
        new(other?: SetJointTrajectory_Request): SetJointTrajectory_Request;
      }
      export interface SetJointTrajectory_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetJointTrajectory_ResponseConstructor {
        new(other?: SetJointTrajectory_Response): SetJointTrajectory_Response;
      }
      export interface SetLightPropertiesConstructor extends ROSService {
        readonly Request: SetLightProperties_RequestConstructor;
        readonly Response: SetLightProperties_ResponseConstructor;
      }
      export interface SetLightProperties_Request {
        light_name: string;
        diffuse: std_msgs.msg.ColorRGBA;
        attenuation_constant: number;
        attenuation_linear: number;
        attenuation_quadratic: number;
      }
      export interface SetLightProperties_RequestConstructor {
        new(other?: SetLightProperties_Request): SetLightProperties_Request;
      }
      export interface SetLightProperties_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetLightProperties_ResponseConstructor {
        new(other?: SetLightProperties_Response): SetLightProperties_Response;
      }
      export interface SetLinkPropertiesConstructor extends ROSService {
        readonly Request: SetLinkProperties_RequestConstructor;
        readonly Response: SetLinkProperties_ResponseConstructor;
      }
      export interface SetLinkProperties_Request {
        link_name: string;
        com: geometry_msgs.msg.Pose;
        gravity_mode: boolean;
        mass: number;
        ixx: number;
        ixy: number;
        ixz: number;
        iyy: number;
        iyz: number;
        izz: number;
      }
      export interface SetLinkProperties_RequestConstructor {
        new(other?: SetLinkProperties_Request): SetLinkProperties_Request;
      }
      export interface SetLinkProperties_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetLinkProperties_ResponseConstructor {
        new(other?: SetLinkProperties_Response): SetLinkProperties_Response;
      }
      export interface SetLinkStateConstructor extends ROSService {
        readonly Request: SetLinkState_RequestConstructor;
        readonly Response: SetLinkState_ResponseConstructor;
      }
      export interface SetLinkState_Request {
        link_state: gazebo_msgs.msg.LinkState;
      }
      export interface SetLinkState_RequestConstructor {
        new(other?: SetLinkState_Request): SetLinkState_Request;
      }
      export interface SetLinkState_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetLinkState_ResponseConstructor {
        new(other?: SetLinkState_Response): SetLinkState_Response;
      }
      export interface SetModelConfigurationConstructor extends ROSService {
        readonly Request: SetModelConfiguration_RequestConstructor;
        readonly Response: SetModelConfiguration_ResponseConstructor;
      }
      export interface SetModelConfiguration_Request {
        model_name: string;
        urdf_param_name: string;
        joint_names: string[];
        joint_positions: number[] | Float64Array;
      }
      export interface SetModelConfiguration_RequestConstructor {
        new(other?: SetModelConfiguration_Request): SetModelConfiguration_Request;
      }
      export interface SetModelConfiguration_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetModelConfiguration_ResponseConstructor {
        new(other?: SetModelConfiguration_Response): SetModelConfiguration_Response;
      }
      export interface SetModelStateConstructor extends ROSService {
        readonly Request: SetModelState_RequestConstructor;
        readonly Response: SetModelState_ResponseConstructor;
      }
      export interface SetModelState_Request {
        model_state: gazebo_msgs.msg.ModelState;
      }
      export interface SetModelState_RequestConstructor {
        new(other?: SetModelState_Request): SetModelState_Request;
      }
      export interface SetModelState_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetModelState_ResponseConstructor {
        new(other?: SetModelState_Response): SetModelState_Response;
      }
      export interface SetPhysicsPropertiesConstructor extends ROSService {
        readonly Request: SetPhysicsProperties_RequestConstructor;
        readonly Response: SetPhysicsProperties_ResponseConstructor;
      }
      export interface SetPhysicsProperties_Request {
        time_step: number;
        max_update_rate: number;
        gravity: geometry_msgs.msg.Vector3;
        ode_config: gazebo_msgs.msg.ODEPhysics;
      }
      export interface SetPhysicsProperties_RequestConstructor {
        new(other?: SetPhysicsProperties_Request): SetPhysicsProperties_Request;
      }
      export interface SetPhysicsProperties_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetPhysicsProperties_ResponseConstructor {
        new(other?: SetPhysicsProperties_Response): SetPhysicsProperties_Response;
      }
      export interface SpawnEntityConstructor extends ROSService {
        readonly Request: SpawnEntity_RequestConstructor;
        readonly Response: SpawnEntity_ResponseConstructor;
      }
      export interface SpawnEntity_Request {
        name: string;
        xml: string;
        robot_namespace: string;
        initial_pose: geometry_msgs.msg.Pose;
        reference_frame: string;
      }
      export interface SpawnEntity_RequestConstructor {
        new(other?: SpawnEntity_Request): SpawnEntity_Request;
      }
      export interface SpawnEntity_Response {
        success: boolean;
        status_message: string;
      }
      export interface SpawnEntity_ResponseConstructor {
        new(other?: SpawnEntity_Response): SpawnEntity_Response;
      }
      export interface SpawnModelConstructor extends ROSService {
        readonly Request: SpawnModel_RequestConstructor;
        readonly Response: SpawnModel_ResponseConstructor;
      }
      export interface SpawnModel_Request {
        model_name: string;
        model_xml: string;
        robot_namespace: string;
        initial_pose: geometry_msgs.msg.Pose;
        reference_frame: string;
      }
      export interface SpawnModel_RequestConstructor {
        new(other?: SpawnModel_Request): SpawnModel_Request;
      }
      export interface SpawnModel_Response {
        success: boolean;
        status_message: string;
      }
      export interface SpawnModel_ResponseConstructor {
        new(other?: SpawnModel_Response): SpawnModel_Response;
      }
    }
  }

  namespace geometry_msgs {
    namespace msg {
      export interface Accel {
        linear: geometry_msgs.msg.Vector3;
        angular: geometry_msgs.msg.Vector3;
      }
      export interface AccelConstructor {
        new(other?: Accel): Accel;
      }
      export interface AccelStamped {
        header: std_msgs.msg.Header;
        accel: geometry_msgs.msg.Accel;
      }
      export interface AccelStampedConstructor {
        new(other?: AccelStamped): AccelStamped;
      }
      export interface AccelWithCovariance {
        accel: geometry_msgs.msg.Accel;
        covariance: number[] | Float64Array;
      }
      export interface AccelWithCovarianceConstructor {
        new(other?: AccelWithCovariance): AccelWithCovariance;
      }
      export interface AccelWithCovarianceStamped {
        header: std_msgs.msg.Header;
        accel: geometry_msgs.msg.AccelWithCovariance;
      }
      export interface AccelWithCovarianceStampedConstructor {
        new(other?: AccelWithCovarianceStamped): AccelWithCovarianceStamped;
      }
      export interface Inertia {
        m: number;
        com: geometry_msgs.msg.Vector3;
        ixx: number;
        ixy: number;
        ixz: number;
        iyy: number;
        iyz: number;
        izz: number;
      }
      export interface InertiaConstructor {
        new(other?: Inertia): Inertia;
      }
      export interface InertiaStamped {
        header: std_msgs.msg.Header;
        inertia: geometry_msgs.msg.Inertia;
      }
      export interface InertiaStampedConstructor {
        new(other?: InertiaStamped): InertiaStamped;
      }
      export interface Point {
        x: number;
        y: number;
        z: number;
      }
      export interface PointConstructor {
        new(other?: Point): Point;
      }
      export interface Point32 {
        x: number;
        y: number;
        z: number;
      }
      export interface Point32Constructor {
        new(other?: Point32): Point32;
      }
      export interface PointStamped {
        header: std_msgs.msg.Header;
        point: geometry_msgs.msg.Point;
      }
      export interface PointStampedConstructor {
        new(other?: PointStamped): PointStamped;
      }
      export interface Polygon {
        points: geometry_msgs.msg.Point32[];
      }
      export interface PolygonConstructor {
        new(other?: Polygon): Polygon;
      }
      export interface PolygonStamped {
        header: std_msgs.msg.Header;
        polygon: geometry_msgs.msg.Polygon;
      }
      export interface PolygonStampedConstructor {
        new(other?: PolygonStamped): PolygonStamped;
      }
      export interface Pose {
        position: geometry_msgs.msg.Point;
        orientation: geometry_msgs.msg.Quaternion;
      }
      export interface PoseConstructor {
        new(other?: Pose): Pose;
      }
      export interface Pose2D {
        x: number;
        y: number;
        theta: number;
      }
      export interface Pose2DConstructor {
        new(other?: Pose2D): Pose2D;
      }
      export interface PoseArray {
        header: std_msgs.msg.Header;
        poses: geometry_msgs.msg.Pose[];
      }
      export interface PoseArrayConstructor {
        new(other?: PoseArray): PoseArray;
      }
      export interface PoseStamped {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
      }
      export interface PoseStampedConstructor {
        new(other?: PoseStamped): PoseStamped;
      }
      export interface PoseWithCovariance {
        pose: geometry_msgs.msg.Pose;
        covariance: number[] | Float64Array;
      }
      export interface PoseWithCovarianceConstructor {
        new(other?: PoseWithCovariance): PoseWithCovariance;
      }
      export interface PoseWithCovarianceStamped {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.PoseWithCovariance;
      }
      export interface PoseWithCovarianceStampedConstructor {
        new(other?: PoseWithCovarianceStamped): PoseWithCovarianceStamped;
      }
      export interface Quaternion {
        x: number;
        y: number;
        z: number;
        w: number;
      }
      export interface QuaternionConstructor {
        new(other?: Quaternion): Quaternion;
      }
      export interface QuaternionStamped {
        header: std_msgs.msg.Header;
        quaternion: geometry_msgs.msg.Quaternion;
      }
      export interface QuaternionStampedConstructor {
        new(other?: QuaternionStamped): QuaternionStamped;
      }
      export interface Transform {
        translation: geometry_msgs.msg.Vector3;
        rotation: geometry_msgs.msg.Quaternion;
      }
      export interface TransformConstructor {
        new(other?: Transform): Transform;
      }
      export interface TransformStamped {
        header: std_msgs.msg.Header;
        child_frame_id: string;
        transform: geometry_msgs.msg.Transform;
      }
      export interface TransformStampedConstructor {
        new(other?: TransformStamped): TransformStamped;
      }
      export interface Twist {
        linear: geometry_msgs.msg.Vector3;
        angular: geometry_msgs.msg.Vector3;
      }
      export interface TwistConstructor {
        new(other?: Twist): Twist;
      }
      export interface TwistStamped {
        header: std_msgs.msg.Header;
        twist: geometry_msgs.msg.Twist;
      }
      export interface TwistStampedConstructor {
        new(other?: TwistStamped): TwistStamped;
      }
      export interface TwistWithCovariance {
        twist: geometry_msgs.msg.Twist;
        covariance: number[] | Float64Array;
      }
      export interface TwistWithCovarianceConstructor {
        new(other?: TwistWithCovariance): TwistWithCovariance;
      }
      export interface TwistWithCovarianceStamped {
        header: std_msgs.msg.Header;
        twist: geometry_msgs.msg.TwistWithCovariance;
      }
      export interface TwistWithCovarianceStampedConstructor {
        new(other?: TwistWithCovarianceStamped): TwistWithCovarianceStamped;
      }
      export interface Vector3 {
        x: number;
        y: number;
        z: number;
      }
      export interface Vector3Constructor {
        new(other?: Vector3): Vector3;
      }
      export interface Vector3Stamped {
        header: std_msgs.msg.Header;
        vector: geometry_msgs.msg.Vector3;
      }
      export interface Vector3StampedConstructor {
        new(other?: Vector3Stamped): Vector3Stamped;
      }
      export interface Wrench {
        force: geometry_msgs.msg.Vector3;
        torque: geometry_msgs.msg.Vector3;
      }
      export interface WrenchConstructor {
        new(other?: Wrench): Wrench;
      }
      export interface WrenchStamped {
        header: std_msgs.msg.Header;
        wrench: geometry_msgs.msg.Wrench;
      }
      export interface WrenchStampedConstructor {
        new(other?: WrenchStamped): WrenchStamped;
      }
    }
  }

  namespace libstatistics_collector {
    namespace msg {
      export interface DummyMessage {
        header: std_msgs.msg.Header;
      }
      export interface DummyMessageConstructor {
        new(other?: DummyMessage): DummyMessage;
      }
    }
  }

  namespace lifecycle_msgs {
    namespace msg {
      export interface State {
        id: number;
        label: string;
      }
      export interface StateConstructor {
        readonly PRIMARY_STATE_UNKNOWN: number;
        readonly PRIMARY_STATE_UNCONFIGURED: number;
        readonly PRIMARY_STATE_INACTIVE: number;
        readonly PRIMARY_STATE_ACTIVE: number;
        readonly PRIMARY_STATE_FINALIZED: number;
        readonly TRANSITION_STATE_CONFIGURING: number;
        readonly TRANSITION_STATE_CLEANINGUP: number;
        readonly TRANSITION_STATE_SHUTTINGDOWN: number;
        readonly TRANSITION_STATE_ACTIVATING: number;
        readonly TRANSITION_STATE_DEACTIVATING: number;
        readonly TRANSITION_STATE_ERRORPROCESSING: number;
        new(other?: State): State;
      }
      export interface Transition {
        id: number;
        label: string;
      }
      export interface TransitionConstructor {
        readonly TRANSITION_CREATE: number;
        readonly TRANSITION_CONFIGURE: number;
        readonly TRANSITION_CLEANUP: number;
        readonly TRANSITION_ACTIVATE: number;
        readonly TRANSITION_DEACTIVATE: number;
        readonly TRANSITION_UNCONFIGURED_SHUTDOWN: number;
        readonly TRANSITION_INACTIVE_SHUTDOWN: number;
        readonly TRANSITION_ACTIVE_SHUTDOWN: number;
        readonly TRANSITION_DESTROY: number;
        readonly TRANSITION_ON_CONFIGURE_SUCCESS: number;
        readonly TRANSITION_ON_CONFIGURE_FAILURE: number;
        readonly TRANSITION_ON_CONFIGURE_ERROR: number;
        readonly TRANSITION_ON_CLEANUP_SUCCESS: number;
        readonly TRANSITION_ON_CLEANUP_FAILURE: number;
        readonly TRANSITION_ON_CLEANUP_ERROR: number;
        readonly TRANSITION_ON_ACTIVATE_SUCCESS: number;
        readonly TRANSITION_ON_ACTIVATE_FAILURE: number;
        readonly TRANSITION_ON_ACTIVATE_ERROR: number;
        readonly TRANSITION_ON_DEACTIVATE_SUCCESS: number;
        readonly TRANSITION_ON_DEACTIVATE_FAILURE: number;
        readonly TRANSITION_ON_DEACTIVATE_ERROR: number;
        readonly TRANSITION_ON_SHUTDOWN_SUCCESS: number;
        readonly TRANSITION_ON_SHUTDOWN_FAILURE: number;
        readonly TRANSITION_ON_SHUTDOWN_ERROR: number;
        readonly TRANSITION_ON_ERROR_SUCCESS: number;
        readonly TRANSITION_ON_ERROR_FAILURE: number;
        readonly TRANSITION_ON_ERROR_ERROR: number;
        readonly TRANSITION_CALLBACK_SUCCESS: number;
        readonly TRANSITION_CALLBACK_FAILURE: number;
        readonly TRANSITION_CALLBACK_ERROR: number;
        new(other?: Transition): Transition;
      }
      export interface TransitionDescription {
        transition: lifecycle_msgs.msg.Transition;
        start_state: lifecycle_msgs.msg.State;
        goal_state: lifecycle_msgs.msg.State;
      }
      export interface TransitionDescriptionConstructor {
        new(other?: TransitionDescription): TransitionDescription;
      }
      export interface TransitionEvent {
        timestamp: number;
        transition: lifecycle_msgs.msg.Transition;
        start_state: lifecycle_msgs.msg.State;
        goal_state: lifecycle_msgs.msg.State;
      }
      export interface TransitionEventConstructor {
        new(other?: TransitionEvent): TransitionEvent;
      }
    }
    namespace srv {
      export interface ChangeStateConstructor extends ROSService {
        readonly Request: ChangeState_RequestConstructor;
        readonly Response: ChangeState_ResponseConstructor;
      }
      export interface ChangeState_Request {
        transition: lifecycle_msgs.msg.Transition;
      }
      export interface ChangeState_RequestConstructor {
        new(other?: ChangeState_Request): ChangeState_Request;
      }
      export interface ChangeState_Response {
        success: boolean;
      }
      export interface ChangeState_ResponseConstructor {
        new(other?: ChangeState_Response): ChangeState_Response;
      }
      export interface GetAvailableStatesConstructor extends ROSService {
        readonly Request: GetAvailableStates_RequestConstructor;
        readonly Response: GetAvailableStates_ResponseConstructor;
      }
      export interface GetAvailableStates_Request {
      }
      export interface GetAvailableStates_RequestConstructor {
        new(other?: GetAvailableStates_Request): GetAvailableStates_Request;
      }
      export interface GetAvailableStates_Response {
        available_states: lifecycle_msgs.msg.State[];
      }
      export interface GetAvailableStates_ResponseConstructor {
        new(other?: GetAvailableStates_Response): GetAvailableStates_Response;
      }
      export interface GetAvailableTransitionsConstructor extends ROSService {
        readonly Request: GetAvailableTransitions_RequestConstructor;
        readonly Response: GetAvailableTransitions_ResponseConstructor;
      }
      export interface GetAvailableTransitions_Request {
      }
      export interface GetAvailableTransitions_RequestConstructor {
        new(other?: GetAvailableTransitions_Request): GetAvailableTransitions_Request;
      }
      export interface GetAvailableTransitions_Response {
        available_transitions: lifecycle_msgs.msg.TransitionDescription[];
      }
      export interface GetAvailableTransitions_ResponseConstructor {
        new(other?: GetAvailableTransitions_Response): GetAvailableTransitions_Response;
      }
      export interface GetStateConstructor extends ROSService {
        readonly Request: GetState_RequestConstructor;
        readonly Response: GetState_ResponseConstructor;
      }
      export interface GetState_Request {
      }
      export interface GetState_RequestConstructor {
        new(other?: GetState_Request): GetState_Request;
      }
      export interface GetState_Response {
        current_state: lifecycle_msgs.msg.State;
      }
      export interface GetState_ResponseConstructor {
        new(other?: GetState_Response): GetState_Response;
      }
    }
  }

  namespace logging_demo {
    namespace srv {
      export interface ConfigLoggerConstructor extends ROSService {
        readonly Request: ConfigLogger_RequestConstructor;
        readonly Response: ConfigLogger_ResponseConstructor;
      }
      export interface ConfigLogger_Request {
        logger_name: string;
        level: string;
      }
      export interface ConfigLogger_RequestConstructor {
        new(other?: ConfigLogger_Request): ConfigLogger_Request;
      }
      export interface ConfigLogger_Response {
        success: boolean;
      }
      export interface ConfigLogger_ResponseConstructor {
        new(other?: ConfigLogger_Response): ConfigLogger_Response;
      }
    }
  }

  namespace map_msgs {
    namespace msg {
      export interface OccupancyGridUpdate {
        header: std_msgs.msg.Header;
        x: number;
        y: number;
        width: number;
        height: number;
        data: number[] | Int8Array;
      }
      export interface OccupancyGridUpdateConstructor {
        new(other?: OccupancyGridUpdate): OccupancyGridUpdate;
      }
      export interface PointCloud2Update {
        header: std_msgs.msg.Header;
        type: number;
        points: sensor_msgs.msg.PointCloud2;
      }
      export interface PointCloud2UpdateConstructor {
        readonly ADD: number;
        readonly DELETE: number;
        new(other?: PointCloud2Update): PointCloud2Update;
      }
      export interface ProjectedMap {
        map: nav_msgs.msg.OccupancyGrid;
        min_z: number;
        max_z: number;
      }
      export interface ProjectedMapConstructor {
        new(other?: ProjectedMap): ProjectedMap;
      }
      export interface ProjectedMapInfo {
        frame_id: string;
        x: number;
        y: number;
        width: number;
        height: number;
        min_z: number;
        max_z: number;
      }
      export interface ProjectedMapInfoConstructor {
        new(other?: ProjectedMapInfo): ProjectedMapInfo;
      }
    }
    namespace srv {
      export interface GetMapROIConstructor extends ROSService {
        readonly Request: GetMapROI_RequestConstructor;
        readonly Response: GetMapROI_ResponseConstructor;
      }
      export interface GetMapROI_Request {
        x: number;
        y: number;
        l_x: number;
        l_y: number;
      }
      export interface GetMapROI_RequestConstructor {
        new(other?: GetMapROI_Request): GetMapROI_Request;
      }
      export interface GetMapROI_Response {
        sub_map: nav_msgs.msg.OccupancyGrid;
      }
      export interface GetMapROI_ResponseConstructor {
        new(other?: GetMapROI_Response): GetMapROI_Response;
      }
      export interface GetPointMapConstructor extends ROSService {
        readonly Request: GetPointMap_RequestConstructor;
        readonly Response: GetPointMap_ResponseConstructor;
      }
      export interface GetPointMapROIConstructor extends ROSService {
        readonly Request: GetPointMapROI_RequestConstructor;
        readonly Response: GetPointMapROI_ResponseConstructor;
      }
      export interface GetPointMapROI_Request {
        x: number;
        y: number;
        z: number;
        r: number;
        l_x: number;
        l_y: number;
        l_z: number;
      }
      export interface GetPointMapROI_RequestConstructor {
        new(other?: GetPointMapROI_Request): GetPointMapROI_Request;
      }
      export interface GetPointMapROI_Response {
        sub_map: sensor_msgs.msg.PointCloud2;
      }
      export interface GetPointMapROI_ResponseConstructor {
        new(other?: GetPointMapROI_Response): GetPointMapROI_Response;
      }
      export interface GetPointMap_Request {
      }
      export interface GetPointMap_RequestConstructor {
        new(other?: GetPointMap_Request): GetPointMap_Request;
      }
      export interface GetPointMap_Response {
        map: sensor_msgs.msg.PointCloud2;
      }
      export interface GetPointMap_ResponseConstructor {
        new(other?: GetPointMap_Response): GetPointMap_Response;
      }
      export interface ProjectedMapsInfoConstructor extends ROSService {
        readonly Request: ProjectedMapsInfo_RequestConstructor;
        readonly Response: ProjectedMapsInfo_ResponseConstructor;
      }
      export interface ProjectedMapsInfo_Request {
        projected_maps_info: map_msgs.msg.ProjectedMapInfo[];
      }
      export interface ProjectedMapsInfo_RequestConstructor {
        new(other?: ProjectedMapsInfo_Request): ProjectedMapsInfo_Request;
      }
      export interface ProjectedMapsInfo_Response {
      }
      export interface ProjectedMapsInfo_ResponseConstructor {
        new(other?: ProjectedMapsInfo_Response): ProjectedMapsInfo_Response;
      }
      export interface SaveMapConstructor extends ROSService {
        readonly Request: SaveMap_RequestConstructor;
        readonly Response: SaveMap_ResponseConstructor;
      }
      export interface SaveMap_Request {
        filename: std_msgs.msg.String;
      }
      export interface SaveMap_RequestConstructor {
        new(other?: SaveMap_Request): SaveMap_Request;
      }
      export interface SaveMap_Response {
      }
      export interface SaveMap_ResponseConstructor {
        new(other?: SaveMap_Response): SaveMap_Response;
      }
      export interface SetMapProjectionsConstructor extends ROSService {
        readonly Request: SetMapProjections_RequestConstructor;
        readonly Response: SetMapProjections_ResponseConstructor;
      }
      export interface SetMapProjections_Request {
      }
      export interface SetMapProjections_RequestConstructor {
        new(other?: SetMapProjections_Request): SetMapProjections_Request;
      }
      export interface SetMapProjections_Response {
        projected_maps_info: map_msgs.msg.ProjectedMapInfo[];
      }
      export interface SetMapProjections_ResponseConstructor {
        new(other?: SetMapProjections_Response): SetMapProjections_Response;
      }
    }
  }

  namespace nav_msgs {
    namespace msg {
      export interface GridCells {
        header: std_msgs.msg.Header;
        cell_width: number;
        cell_height: number;
        cells: geometry_msgs.msg.Point[];
      }
      export interface GridCellsConstructor {
        new(other?: GridCells): GridCells;
      }
      export interface MapMetaData {
        map_load_time: builtin_interfaces.msg.Time;
        resolution: number;
        width: number;
        height: number;
        origin: geometry_msgs.msg.Pose;
      }
      export interface MapMetaDataConstructor {
        new(other?: MapMetaData): MapMetaData;
      }
      export interface OccupancyGrid {
        header: std_msgs.msg.Header;
        info: nav_msgs.msg.MapMetaData;
        data: number[] | Int8Array;
      }
      export interface OccupancyGridConstructor {
        new(other?: OccupancyGrid): OccupancyGrid;
      }
      export interface Odometry {
        header: std_msgs.msg.Header;
        child_frame_id: string;
        pose: geometry_msgs.msg.PoseWithCovariance;
        twist: geometry_msgs.msg.TwistWithCovariance;
      }
      export interface OdometryConstructor {
        new(other?: Odometry): Odometry;
      }
      export interface Path {
        header: std_msgs.msg.Header;
        poses: geometry_msgs.msg.PoseStamped[];
      }
      export interface PathConstructor {
        new(other?: Path): Path;
      }
    }
    namespace srv {
      export interface GetMapConstructor extends ROSService {
        readonly Request: GetMap_RequestConstructor;
        readonly Response: GetMap_ResponseConstructor;
      }
      export interface GetMap_Request {
      }
      export interface GetMap_RequestConstructor {
        new(other?: GetMap_Request): GetMap_Request;
      }
      export interface GetMap_Response {
        map: nav_msgs.msg.OccupancyGrid;
      }
      export interface GetMap_ResponseConstructor {
        new(other?: GetMap_Response): GetMap_Response;
      }
      export interface GetPlanConstructor extends ROSService {
        readonly Request: GetPlan_RequestConstructor;
        readonly Response: GetPlan_ResponseConstructor;
      }
      export interface GetPlan_Request {
        start: geometry_msgs.msg.PoseStamped;
        goal: geometry_msgs.msg.PoseStamped;
        tolerance: number;
      }
      export interface GetPlan_RequestConstructor {
        new(other?: GetPlan_Request): GetPlan_Request;
      }
      export interface GetPlan_Response {
        plan: nav_msgs.msg.Path;
      }
      export interface GetPlan_ResponseConstructor {
        new(other?: GetPlan_Response): GetPlan_Response;
      }
      export interface SetMapConstructor extends ROSService {
        readonly Request: SetMap_RequestConstructor;
        readonly Response: SetMap_ResponseConstructor;
      }
      export interface SetMap_Request {
        map: nav_msgs.msg.OccupancyGrid;
        initial_pose: geometry_msgs.msg.PoseWithCovarianceStamped;
      }
      export interface SetMap_RequestConstructor {
        new(other?: SetMap_Request): SetMap_Request;
      }
      export interface SetMap_Response {
        success: boolean;
      }
      export interface SetMap_ResponseConstructor {
        new(other?: SetMap_Response): SetMap_Response;
      }
    }
  }

  namespace pcl_msgs {
    namespace msg {
      export interface ModelCoefficients {
        header: std_msgs.msg.Header;
        values: number[] | Float32Array;
      }
      export interface ModelCoefficientsConstructor {
        new(other?: ModelCoefficients): ModelCoefficients;
      }
      export interface PointIndices {
        header: std_msgs.msg.Header;
        indices: number[] | Int32Array;
      }
      export interface PointIndicesConstructor {
        new(other?: PointIndices): PointIndices;
      }
      export interface PolygonMesh {
        header: std_msgs.msg.Header;
        cloud: sensor_msgs.msg.PointCloud2;
        polygons: pcl_msgs.msg.Vertices[];
      }
      export interface PolygonMeshConstructor {
        new(other?: PolygonMesh): PolygonMesh;
      }
      export interface Vertices {
        vertices: number[] | Uint32Array;
      }
      export interface VerticesConstructor {
        new(other?: Vertices): Vertices;
      }
    }
    namespace srv {
      export interface UpdateFilenameConstructor extends ROSService {
        readonly Request: UpdateFilename_RequestConstructor;
        readonly Response: UpdateFilename_ResponseConstructor;
      }
      export interface UpdateFilename_Request {
        filename: string;
      }
      export interface UpdateFilename_RequestConstructor {
        new(other?: UpdateFilename_Request): UpdateFilename_Request;
      }
      export interface UpdateFilename_Response {
        success: boolean;
      }
      export interface UpdateFilename_ResponseConstructor {
        new(other?: UpdateFilename_Response): UpdateFilename_Response;
      }
    }
  }

  namespace pendulum_msgs {
    namespace msg {
      export interface JointCommand {
        position: number;
      }
      export interface JointCommandConstructor {
        new(other?: JointCommand): JointCommand;
      }
      export interface JointState {
        position: number;
        velocity: number;
        effort: number;
      }
      export interface JointStateConstructor {
        new(other?: JointState): JointState;
      }
      export interface RttestResults {
        stamp: builtin_interfaces.msg.Time;
        command: pendulum_msgs.msg.JointCommand;
        state: pendulum_msgs.msg.JointState;
        cur_latency: number;
        mean_latency: number;
        min_latency: number;
        max_latency: number;
        minor_pagefaults: number;
        major_pagefaults: number;
      }
      export interface RttestResultsConstructor {
        new(other?: RttestResults): RttestResults;
      }
    }
  }

  namespace rcl_interfaces {
    namespace msg {
      export interface FloatingPointRange {
        from_value: number;
        to_value: number;
        step: number;
      }
      export interface FloatingPointRangeConstructor {
        new(other?: FloatingPointRange): FloatingPointRange;
      }
      export interface IntegerRange {
        from_value: number;
        to_value: number;
        step: number;
      }
      export interface IntegerRangeConstructor {
        new(other?: IntegerRange): IntegerRange;
      }
      export interface ListParametersResult {
        names: string[];
        prefixes: string[];
      }
      export interface ListParametersResultConstructor {
        new(other?: ListParametersResult): ListParametersResult;
      }
      export interface Log {
        stamp: builtin_interfaces.msg.Time;
        level: number;
        name: string;
        msg: string;
        file: string;
        function: string;
        line: number;
      }
      export interface LogConstructor {
        readonly DEBUG: number;
        readonly INFO: number;
        readonly WARN: number;
        readonly ERROR: number;
        readonly FATAL: number;
        new(other?: Log): Log;
      }
      export interface Parameter {
        name: string;
        value: rcl_interfaces.msg.ParameterValue;
      }
      export interface ParameterConstructor {
        new(other?: Parameter): Parameter;
      }
      export interface ParameterDescriptor {
        name: string;
        type: number;
        description: string;
        additional_constraints: string;
        read_only: boolean;
        floating_point_range: rcl_interfaces.msg.FloatingPointRange[];
        integer_range: rcl_interfaces.msg.IntegerRange[];
      }
      export interface ParameterDescriptorConstructor {
        new(other?: ParameterDescriptor): ParameterDescriptor;
      }
      export interface ParameterEvent {
        stamp: builtin_interfaces.msg.Time;
        node: string;
        new_parameters: rcl_interfaces.msg.Parameter[];
        changed_parameters: rcl_interfaces.msg.Parameter[];
        deleted_parameters: rcl_interfaces.msg.Parameter[];
      }
      export interface ParameterEventConstructor {
        new(other?: ParameterEvent): ParameterEvent;
      }
      export interface ParameterEventDescriptors {
        new_parameters: rcl_interfaces.msg.ParameterDescriptor[];
        changed_parameters: rcl_interfaces.msg.ParameterDescriptor[];
        deleted_parameters: rcl_interfaces.msg.ParameterDescriptor[];
      }
      export interface ParameterEventDescriptorsConstructor {
        new(other?: ParameterEventDescriptors): ParameterEventDescriptors;
      }
      export interface ParameterType {
      }
      export interface ParameterTypeConstructor {
        readonly PARAMETER_NOT_SET: number;
        readonly PARAMETER_BOOL: number;
        readonly PARAMETER_INTEGER: number;
        readonly PARAMETER_DOUBLE: number;
        readonly PARAMETER_STRING: number;
        readonly PARAMETER_BYTE_ARRAY: number;
        readonly PARAMETER_BOOL_ARRAY: number;
        readonly PARAMETER_INTEGER_ARRAY: number;
        readonly PARAMETER_DOUBLE_ARRAY: number;
        readonly PARAMETER_STRING_ARRAY: number;
        new(other?: ParameterType): ParameterType;
      }
      export interface ParameterValue {
        type: number;
        bool_value: boolean;
        integer_value: number;
        double_value: number;
        string_value: string;
        byte_array_value: number[] | Uint8Array;
        bool_array_value: boolean[];
        integer_array_value: number[];
        double_array_value: number[] | Float64Array;
        string_array_value: string[];
      }
      export interface ParameterValueConstructor {
        new(other?: ParameterValue): ParameterValue;
      }
      export interface SetParametersResult {
        successful: boolean;
        reason: string;
      }
      export interface SetParametersResultConstructor {
        new(other?: SetParametersResult): SetParametersResult;
      }
    }
    namespace srv {
      export interface DescribeParametersConstructor extends ROSService {
        readonly Request: DescribeParameters_RequestConstructor;
        readonly Response: DescribeParameters_ResponseConstructor;
      }
      export interface DescribeParameters_Request {
        names: string[];
      }
      export interface DescribeParameters_RequestConstructor {
        new(other?: DescribeParameters_Request): DescribeParameters_Request;
      }
      export interface DescribeParameters_Response {
        descriptors: rcl_interfaces.msg.ParameterDescriptor[];
      }
      export interface DescribeParameters_ResponseConstructor {
        new(other?: DescribeParameters_Response): DescribeParameters_Response;
      }
      export interface GetParameterTypesConstructor extends ROSService {
        readonly Request: GetParameterTypes_RequestConstructor;
        readonly Response: GetParameterTypes_ResponseConstructor;
      }
      export interface GetParameterTypes_Request {
        names: string[];
      }
      export interface GetParameterTypes_RequestConstructor {
        new(other?: GetParameterTypes_Request): GetParameterTypes_Request;
      }
      export interface GetParameterTypes_Response {
        types: number[] | Uint8Array;
      }
      export interface GetParameterTypes_ResponseConstructor {
        new(other?: GetParameterTypes_Response): GetParameterTypes_Response;
      }
      export interface GetParametersConstructor extends ROSService {
        readonly Request: GetParameters_RequestConstructor;
        readonly Response: GetParameters_ResponseConstructor;
      }
      export interface GetParameters_Request {
        names: string[];
      }
      export interface GetParameters_RequestConstructor {
        new(other?: GetParameters_Request): GetParameters_Request;
      }
      export interface GetParameters_Response {
        values: rcl_interfaces.msg.ParameterValue[];
      }
      export interface GetParameters_ResponseConstructor {
        new(other?: GetParameters_Response): GetParameters_Response;
      }
      export interface ListParametersConstructor extends ROSService {
        readonly Request: ListParameters_RequestConstructor;
        readonly Response: ListParameters_ResponseConstructor;
      }
      export interface ListParameters_Request {
        prefixes: string[];
        depth: number;
      }
      export interface ListParameters_RequestConstructor {
        readonly DEPTH_RECURSIVE: number;
        new(other?: ListParameters_Request): ListParameters_Request;
      }
      export interface ListParameters_Response {
        result: rcl_interfaces.msg.ListParametersResult;
      }
      export interface ListParameters_ResponseConstructor {
        new(other?: ListParameters_Response): ListParameters_Response;
      }
      export interface SetParametersConstructor extends ROSService {
        readonly Request: SetParameters_RequestConstructor;
        readonly Response: SetParameters_ResponseConstructor;
      }
      export interface SetParametersAtomicallyConstructor extends ROSService {
        readonly Request: SetParametersAtomically_RequestConstructor;
        readonly Response: SetParametersAtomically_ResponseConstructor;
      }
      export interface SetParametersAtomically_Request {
        parameters: rcl_interfaces.msg.Parameter[];
      }
      export interface SetParametersAtomically_RequestConstructor {
        new(other?: SetParametersAtomically_Request): SetParametersAtomically_Request;
      }
      export interface SetParametersAtomically_Response {
        result: rcl_interfaces.msg.SetParametersResult;
      }
      export interface SetParametersAtomically_ResponseConstructor {
        new(other?: SetParametersAtomically_Response): SetParametersAtomically_Response;
      }
      export interface SetParameters_Request {
        parameters: rcl_interfaces.msg.Parameter[];
      }
      export interface SetParameters_RequestConstructor {
        new(other?: SetParameters_Request): SetParameters_Request;
      }
      export interface SetParameters_Response {
        results: rcl_interfaces.msg.SetParametersResult[];
      }
      export interface SetParameters_ResponseConstructor {
        new(other?: SetParameters_Response): SetParameters_Response;
      }
    }
  }

  namespace rmw_dds_common {
    namespace msg {
      export interface Gid {
        data: number[] | Int8Array;
      }
      export interface GidConstructor {
        new(other?: Gid): Gid;
      }
      export interface NodeEntitiesInfo {
        node_namespace: string;
        node_name: string;
        reader_gid_seq: rmw_dds_common.msg.Gid[];
        writer_gid_seq: rmw_dds_common.msg.Gid[];
      }
      export interface NodeEntitiesInfoConstructor {
        new(other?: NodeEntitiesInfo): NodeEntitiesInfo;
      }
      export interface ParticipantEntitiesInfo {
        gid: rmw_dds_common.msg.Gid;
        node_entities_info_seq: rmw_dds_common.msg.NodeEntitiesInfo[];
      }
      export interface ParticipantEntitiesInfoConstructor {
        new(other?: ParticipantEntitiesInfo): ParticipantEntitiesInfo;
      }
    }
  }

  namespace rosgraph_msgs {
    namespace msg {
      export interface Clock {
        clock: builtin_interfaces.msg.Time;
      }
      export interface ClockConstructor {
        new(other?: Clock): Clock;
      }
    }
  }

  namespace sensor_msgs {
    namespace msg {
      export interface BatteryState {
        header: std_msgs.msg.Header;
        voltage: number;
        temperature: number;
        current: number;
        charge: number;
        capacity: number;
        design_capacity: number;
        percentage: number;
        power_supply_status: number;
        power_supply_health: number;
        power_supply_technology: number;
        present: boolean;
        cell_voltage: number[] | Float32Array;
        cell_temperature: number[] | Float32Array;
        location: string;
        serial_number: string;
      }
      export interface BatteryStateConstructor {
        readonly POWER_SUPPLY_STATUS_UNKNOWN: number;
        readonly POWER_SUPPLY_STATUS_CHARGING: number;
        readonly POWER_SUPPLY_STATUS_DISCHARGING: number;
        readonly POWER_SUPPLY_STATUS_NOT_CHARGING: number;
        readonly POWER_SUPPLY_STATUS_FULL: number;
        readonly POWER_SUPPLY_HEALTH_UNKNOWN: number;
        readonly POWER_SUPPLY_HEALTH_GOOD: number;
        readonly POWER_SUPPLY_HEALTH_OVERHEAT: number;
        readonly POWER_SUPPLY_HEALTH_DEAD: number;
        readonly POWER_SUPPLY_HEALTH_OVERVOLTAGE: number;
        readonly POWER_SUPPLY_HEALTH_UNSPEC_FAILURE: number;
        readonly POWER_SUPPLY_HEALTH_COLD: number;
        readonly POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE: number;
        readonly POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE: number;
        readonly POWER_SUPPLY_TECHNOLOGY_UNKNOWN: number;
        readonly POWER_SUPPLY_TECHNOLOGY_NIMH: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LION: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LIPO: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LIFE: number;
        readonly POWER_SUPPLY_TECHNOLOGY_NICD: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LIMN: number;
        new(other?: BatteryState): BatteryState;
      }
      export interface CameraInfo {
        header: std_msgs.msg.Header;
        height: number;
        width: number;
        distortion_model: string;
        d: number[] | Float64Array;
        k: number[] | Float64Array;
        r: number[] | Float64Array;
        p: number[] | Float64Array;
        binning_x: number;
        binning_y: number;
        roi: sensor_msgs.msg.RegionOfInterest;
      }
      export interface CameraInfoConstructor {
        new(other?: CameraInfo): CameraInfo;
      }
      export interface ChannelFloat32 {
        name: string;
        values: number[] | Float32Array;
      }
      export interface ChannelFloat32Constructor {
        new(other?: ChannelFloat32): ChannelFloat32;
      }
      export interface CompressedImage {
        header: std_msgs.msg.Header;
        format: string;
        data: number[] | Uint8Array;
      }
      export interface CompressedImageConstructor {
        new(other?: CompressedImage): CompressedImage;
      }
      export interface FluidPressure {
        header: std_msgs.msg.Header;
        fluid_pressure: number;
        variance: number;
      }
      export interface FluidPressureConstructor {
        new(other?: FluidPressure): FluidPressure;
      }
      export interface Illuminance {
        header: std_msgs.msg.Header;
        illuminance: number;
        variance: number;
      }
      export interface IlluminanceConstructor {
        new(other?: Illuminance): Illuminance;
      }
      export interface Image {
        header: std_msgs.msg.Header;
        height: number;
        width: number;
        encoding: string;
        is_bigendian: number;
        step: number;
        data: number[] | Uint8Array;
      }
      export interface ImageConstructor {
        new(other?: Image): Image;
      }
      export interface Imu {
        header: std_msgs.msg.Header;
        orientation: geometry_msgs.msg.Quaternion;
        orientation_covariance: number[] | Float64Array;
        angular_velocity: geometry_msgs.msg.Vector3;
        angular_velocity_covariance: number[] | Float64Array;
        linear_acceleration: geometry_msgs.msg.Vector3;
        linear_acceleration_covariance: number[] | Float64Array;
      }
      export interface ImuConstructor {
        new(other?: Imu): Imu;
      }
      export interface JointState {
        header: std_msgs.msg.Header;
        name: string[];
        position: number[] | Float64Array;
        velocity: number[] | Float64Array;
        effort: number[] | Float64Array;
      }
      export interface JointStateConstructor {
        new(other?: JointState): JointState;
      }
      export interface Joy {
        header: std_msgs.msg.Header;
        axes: number[] | Float32Array;
        buttons: number[] | Int32Array;
      }
      export interface JoyConstructor {
        new(other?: Joy): Joy;
      }
      export interface JoyFeedback {
        type: number;
        id: number;
        intensity: number;
      }
      export interface JoyFeedbackConstructor {
        readonly TYPE_LED: number;
        readonly TYPE_RUMBLE: number;
        readonly TYPE_BUZZER: number;
        new(other?: JoyFeedback): JoyFeedback;
      }
      export interface JoyFeedbackArray {
        array: sensor_msgs.msg.JoyFeedback[];
      }
      export interface JoyFeedbackArrayConstructor {
        new(other?: JoyFeedbackArray): JoyFeedbackArray;
      }
      export interface LaserEcho {
        echoes: number[] | Float32Array;
      }
      export interface LaserEchoConstructor {
        new(other?: LaserEcho): LaserEcho;
      }
      export interface LaserScan {
        header: std_msgs.msg.Header;
        angle_min: number;
        angle_max: number;
        angle_increment: number;
        time_increment: number;
        scan_time: number;
        range_min: number;
        range_max: number;
        ranges: number[] | Float32Array;
        intensities: number[] | Float32Array;
      }
      export interface LaserScanConstructor {
        new(other?: LaserScan): LaserScan;
      }
      export interface MagneticField {
        header: std_msgs.msg.Header;
        magnetic_field: geometry_msgs.msg.Vector3;
        magnetic_field_covariance: number[] | Float64Array;
      }
      export interface MagneticFieldConstructor {
        new(other?: MagneticField): MagneticField;
      }
      export interface MultiDOFJointState {
        header: std_msgs.msg.Header;
        joint_names: string[];
        transforms: geometry_msgs.msg.Transform[];
        twist: geometry_msgs.msg.Twist[];
        wrench: geometry_msgs.msg.Wrench[];
      }
      export interface MultiDOFJointStateConstructor {
        new(other?: MultiDOFJointState): MultiDOFJointState;
      }
      export interface MultiEchoLaserScan {
        header: std_msgs.msg.Header;
        angle_min: number;
        angle_max: number;
        angle_increment: number;
        time_increment: number;
        scan_time: number;
        range_min: number;
        range_max: number;
        ranges: sensor_msgs.msg.LaserEcho[];
        intensities: sensor_msgs.msg.LaserEcho[];
      }
      export interface MultiEchoLaserScanConstructor {
        new(other?: MultiEchoLaserScan): MultiEchoLaserScan;
      }
      export interface NavSatFix {
        header: std_msgs.msg.Header;
        status: sensor_msgs.msg.NavSatStatus;
        latitude: number;
        longitude: number;
        altitude: number;
        position_covariance: number[] | Float64Array;
        position_covariance_type: number;
      }
      export interface NavSatFixConstructor {
        readonly COVARIANCE_TYPE_UNKNOWN: number;
        readonly COVARIANCE_TYPE_APPROXIMATED: number;
        readonly COVARIANCE_TYPE_DIAGONAL_KNOWN: number;
        readonly COVARIANCE_TYPE_KNOWN: number;
        new(other?: NavSatFix): NavSatFix;
      }
      export interface NavSatStatus {
        status: number;
        service: number;
      }
      export interface NavSatStatusConstructor {
        readonly STATUS_NO_FIX: number;
        readonly STATUS_FIX: number;
        readonly STATUS_SBAS_FIX: number;
        readonly STATUS_GBAS_FIX: number;
        readonly SERVICE_GPS: number;
        readonly SERVICE_GLONASS: number;
        readonly SERVICE_COMPASS: number;
        readonly SERVICE_GALILEO: number;
        new(other?: NavSatStatus): NavSatStatus;
      }
      export interface PointCloud {
        header: std_msgs.msg.Header;
        points: geometry_msgs.msg.Point32[];
        channels: sensor_msgs.msg.ChannelFloat32[];
      }
      export interface PointCloudConstructor {
        new(other?: PointCloud): PointCloud;
      }
      export interface PointCloud2 {
        header: std_msgs.msg.Header;
        height: number;
        width: number;
        fields: sensor_msgs.msg.PointField[];
        is_bigendian: boolean;
        point_step: number;
        row_step: number;
        data: number[] | Uint8Array;
        is_dense: boolean;
      }
      export interface PointCloud2Constructor {
        new(other?: PointCloud2): PointCloud2;
      }
      export interface PointField {
        name: string;
        offset: number;
        datatype: number;
        count: number;
      }
      export interface PointFieldConstructor {
        readonly INT8: number;
        readonly UINT8: number;
        readonly INT16: number;
        readonly UINT16: number;
        readonly INT32: number;
        readonly UINT32: number;
        readonly FLOAT32: number;
        readonly FLOAT64: number;
        new(other?: PointField): PointField;
      }
      export interface Range {
        header: std_msgs.msg.Header;
        radiation_type: number;
        field_of_view: number;
        min_range: number;
        max_range: number;
        range: number;
      }
      export interface RangeConstructor {
        readonly ULTRASOUND: number;
        readonly INFRARED: number;
        new(other?: Range): Range;
      }
      export interface RegionOfInterest {
        x_offset: number;
        y_offset: number;
        height: number;
        width: number;
        do_rectify: boolean;
      }
      export interface RegionOfInterestConstructor {
        new(other?: RegionOfInterest): RegionOfInterest;
      }
      export interface RelativeHumidity {
        header: std_msgs.msg.Header;
        relative_humidity: number;
        variance: number;
      }
      export interface RelativeHumidityConstructor {
        new(other?: RelativeHumidity): RelativeHumidity;
      }
      export interface Temperature {
        header: std_msgs.msg.Header;
        temperature: number;
        variance: number;
      }
      export interface TemperatureConstructor {
        new(other?: Temperature): Temperature;
      }
      export interface TimeReference {
        header: std_msgs.msg.Header;
        time_ref: builtin_interfaces.msg.Time;
        source: string;
      }
      export interface TimeReferenceConstructor {
        new(other?: TimeReference): TimeReference;
      }
    }
    namespace srv {
      export interface SetCameraInfoConstructor extends ROSService {
        readonly Request: SetCameraInfo_RequestConstructor;
        readonly Response: SetCameraInfo_ResponseConstructor;
      }
      export interface SetCameraInfo_Request {
        camera_info: sensor_msgs.msg.CameraInfo;
      }
      export interface SetCameraInfo_RequestConstructor {
        new(other?: SetCameraInfo_Request): SetCameraInfo_Request;
      }
      export interface SetCameraInfo_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetCameraInfo_ResponseConstructor {
        new(other?: SetCameraInfo_Response): SetCameraInfo_Response;
      }
    }
  }

  namespace shape_msgs {
    namespace msg {
      export interface Mesh {
        triangles: shape_msgs.msg.MeshTriangle[];
        vertices: geometry_msgs.msg.Point[];
      }
      export interface MeshConstructor {
        new(other?: Mesh): Mesh;
      }
      export interface MeshTriangle {
        vertex_indices: number[] | Uint32Array;
      }
      export interface MeshTriangleConstructor {
        new(other?: MeshTriangle): MeshTriangle;
      }
      export interface Plane {
        coef: number[] | Float64Array;
      }
      export interface PlaneConstructor {
        new(other?: Plane): Plane;
      }
      export interface SolidPrimitive {
        type: number;
        dimensions: number[] | Float64Array;
      }
      export interface SolidPrimitiveConstructor {
        readonly BOX: number;
        readonly SPHERE: number;
        readonly CYLINDER: number;
        readonly CONE: number;
        readonly BOX_X: number;
        readonly BOX_Y: number;
        readonly BOX_Z: number;
        readonly SPHERE_RADIUS: number;
        readonly CYLINDER_HEIGHT: number;
        readonly CYLINDER_RADIUS: number;
        readonly CONE_HEIGHT: number;
        readonly CONE_RADIUS: number;
        new(other?: SolidPrimitive): SolidPrimitive;
      }
    }
  }

  namespace statistics_msgs {
    namespace msg {
      export interface MetricsMessage {
        measurement_source_name: string;
        metrics_source: string;
        unit: string;
        window_start: builtin_interfaces.msg.Time;
        window_stop: builtin_interfaces.msg.Time;
        statistics: statistics_msgs.msg.StatisticDataPoint[];
      }
      export interface MetricsMessageConstructor {
        new(other?: MetricsMessage): MetricsMessage;
      }
      export interface StatisticDataPoint {
        data_type: number;
        data: number;
      }
      export interface StatisticDataPointConstructor {
        new(other?: StatisticDataPoint): StatisticDataPoint;
      }
      export interface StatisticDataType {
      }
      export interface StatisticDataTypeConstructor {
        readonly STATISTICS_DATA_TYPE_UNINITIALIZED: number;
        readonly STATISTICS_DATA_TYPE_AVERAGE: number;
        readonly STATISTICS_DATA_TYPE_MINIMUM: number;
        readonly STATISTICS_DATA_TYPE_MAXIMUM: number;
        readonly STATISTICS_DATA_TYPE_STDDEV: number;
        readonly STATISTICS_DATA_TYPE_SAMPLE_COUNT: number;
        new(other?: StatisticDataType): StatisticDataType;
      }
    }
  }

  namespace std_msgs {
    namespace msg {
      export interface Bool {
        data: boolean;
      }
      export interface BoolConstructor {
        new(other?: Bool): Bool;
      }
      export interface Byte {
        data: number;
      }
      export interface ByteConstructor {
        new(other?: Byte): Byte;
      }
      export interface ByteMultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface ByteMultiArrayConstructor {
        new(other?: ByteMultiArray): ByteMultiArray;
      }
      export interface Char {
        data: number;
      }
      export interface CharConstructor {
        new(other?: Char): Char;
      }
      export interface ColorRGBA {
        r: number;
        g: number;
        b: number;
        a: number;
      }
      export interface ColorRGBAConstructor {
        new(other?: ColorRGBA): ColorRGBA;
      }
      export interface Empty {
      }
      export interface EmptyConstructor {
        new(other?: Empty): Empty;
      }
      export interface Float32 {
        data: number;
      }
      export interface Float32Constructor {
        new(other?: Float32): Float32;
      }
      export interface Float32MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Float32Array;
      }
      export interface Float32MultiArrayConstructor {
        new(other?: Float32MultiArray): Float32MultiArray;
      }
      export interface Float64 {
        data: number;
      }
      export interface Float64Constructor {
        new(other?: Float64): Float64;
      }
      export interface Float64MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Float64Array;
      }
      export interface Float64MultiArrayConstructor {
        new(other?: Float64MultiArray): Float64MultiArray;
      }
      export interface Header {
        stamp: builtin_interfaces.msg.Time;
        frame_id: string;
      }
      export interface HeaderConstructor {
        new(other?: Header): Header;
      }
      export interface Int16 {
        data: number;
      }
      export interface Int16Constructor {
        new(other?: Int16): Int16;
      }
      export interface Int16MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Int16Array;
      }
      export interface Int16MultiArrayConstructor {
        new(other?: Int16MultiArray): Int16MultiArray;
      }
      export interface Int32 {
        data: number;
      }
      export interface Int32Constructor {
        new(other?: Int32): Int32;
      }
      export interface Int32MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Int32Array;
      }
      export interface Int32MultiArrayConstructor {
        new(other?: Int32MultiArray): Int32MultiArray;
      }
      export interface Int64 {
        data: number;
      }
      export interface Int64Constructor {
        new(other?: Int64): Int64;
      }
      export interface Int64MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[];
      }
      export interface Int64MultiArrayConstructor {
        new(other?: Int64MultiArray): Int64MultiArray;
      }
      export interface Int8 {
        data: number;
      }
      export interface Int8Constructor {
        new(other?: Int8): Int8;
      }
      export interface Int8MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Int8Array;
      }
      export interface Int8MultiArrayConstructor {
        new(other?: Int8MultiArray): Int8MultiArray;
      }
      export interface MultiArrayDimension {
        label: string;
        size: number;
        stride: number;
      }
      export interface MultiArrayDimensionConstructor {
        new(other?: MultiArrayDimension): MultiArrayDimension;
      }
      export interface MultiArrayLayout {
        dim: std_msgs.msg.MultiArrayDimension[];
        data_offset: number;
      }
      export interface MultiArrayLayoutConstructor {
        new(other?: MultiArrayLayout): MultiArrayLayout;
      }
      export interface String {
        data: string;
      }
      export interface StringConstructor {
        new(other?: String): String;
      }
      export interface UInt16 {
        data: number;
      }
      export interface UInt16Constructor {
        new(other?: UInt16): UInt16;
      }
      export interface UInt16MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint16Array;
      }
      export interface UInt16MultiArrayConstructor {
        new(other?: UInt16MultiArray): UInt16MultiArray;
      }
      export interface UInt32 {
        data: number;
      }
      export interface UInt32Constructor {
        new(other?: UInt32): UInt32;
      }
      export interface UInt32MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint32Array;
      }
      export interface UInt32MultiArrayConstructor {
        new(other?: UInt32MultiArray): UInt32MultiArray;
      }
      export interface UInt64 {
        data: number;
      }
      export interface UInt64Constructor {
        new(other?: UInt64): UInt64;
      }
      export interface UInt64MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[];
      }
      export interface UInt64MultiArrayConstructor {
        new(other?: UInt64MultiArray): UInt64MultiArray;
      }
      export interface UInt8 {
        data: number;
      }
      export interface UInt8Constructor {
        new(other?: UInt8): UInt8;
      }
      export interface UInt8MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface UInt8MultiArrayConstructor {
        new(other?: UInt8MultiArray): UInt8MultiArray;
      }
    }
  }

  namespace std_srvs {
    namespace srv {
      export interface EmptyConstructor extends ROSService {
        readonly Request: Empty_RequestConstructor;
        readonly Response: Empty_ResponseConstructor;
      }
      export interface Empty_Request {
      }
      export interface Empty_RequestConstructor {
        new(other?: Empty_Request): Empty_Request;
      }
      export interface Empty_Response {
      }
      export interface Empty_ResponseConstructor {
        new(other?: Empty_Response): Empty_Response;
      }
      export interface SetBoolConstructor extends ROSService {
        readonly Request: SetBool_RequestConstructor;
        readonly Response: SetBool_ResponseConstructor;
      }
      export interface SetBool_Request {
        data: boolean;
      }
      export interface SetBool_RequestConstructor {
        new(other?: SetBool_Request): SetBool_Request;
      }
      export interface SetBool_Response {
        success: boolean;
        message: string;
      }
      export interface SetBool_ResponseConstructor {
        new(other?: SetBool_Response): SetBool_Response;
      }
      export interface TriggerConstructor extends ROSService {
        readonly Request: Trigger_RequestConstructor;
        readonly Response: Trigger_ResponseConstructor;
      }
      export interface Trigger_Request {
      }
      export interface Trigger_RequestConstructor {
        new(other?: Trigger_Request): Trigger_Request;
      }
      export interface Trigger_Response {
        success: boolean;
        message: string;
      }
      export interface Trigger_ResponseConstructor {
        new(other?: Trigger_Response): Trigger_Response;
      }
    }
  }

  namespace stereo_msgs {
    namespace msg {
      export interface DisparityImage {
        header: std_msgs.msg.Header;
        image: sensor_msgs.msg.Image;
        f: number;
        t: number;
        valid_window: sensor_msgs.msg.RegionOfInterest;
        min_disparity: number;
        max_disparity: number;
        delta_d: number;
      }
      export interface DisparityImageConstructor {
        new(other?: DisparityImage): DisparityImage;
      }
    }
  }

  namespace tf2_msgs {
    namespace action {
      export interface LookupTransformConstructor {
        readonly Goal: LookupTransform_GoalConstructor;
        readonly Result: LookupTransform_ResultConstructor;
        readonly Feedback: LookupTransform_FeedbackConstructor;
      }
      export interface LookupTransform_Feedback {
      }
      export interface LookupTransform_FeedbackConstructor {
        new(other?: LookupTransform_Feedback): LookupTransform_Feedback;
      }
      export interface LookupTransform_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: tf2_msgs.action.LookupTransform_Feedback;
      }
      export interface LookupTransform_FeedbackMessageConstructor {
        new(other?: LookupTransform_FeedbackMessage): LookupTransform_FeedbackMessage;
      }
      export interface LookupTransform_GetResultConstructor extends ROSService {
        readonly Request: LookupTransform_GetResult_RequestConstructor;
        readonly Response: LookupTransform_GetResult_ResponseConstructor;
      }
      export interface LookupTransform_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface LookupTransform_GetResult_RequestConstructor {
        new(other?: LookupTransform_GetResult_Request): LookupTransform_GetResult_Request;
      }
      export interface LookupTransform_GetResult_Response {
        status: number;
        result: tf2_msgs.action.LookupTransform_Result;
      }
      export interface LookupTransform_GetResult_ResponseConstructor {
        new(other?: LookupTransform_GetResult_Response): LookupTransform_GetResult_Response;
      }
      export interface LookupTransform_Goal {
        target_frame: string;
        source_frame: string;
        source_time: builtin_interfaces.msg.Time;
        timeout: builtin_interfaces.msg.Duration;
        target_time: builtin_interfaces.msg.Time;
        fixed_frame: string;
        advanced: boolean;
      }
      export interface LookupTransform_GoalConstructor {
        new(other?: LookupTransform_Goal): LookupTransform_Goal;
      }
      export interface LookupTransform_Result {
        transform: geometry_msgs.msg.TransformStamped;
        error: tf2_msgs.msg.TF2Error;
      }
      export interface LookupTransform_ResultConstructor {
        new(other?: LookupTransform_Result): LookupTransform_Result;
      }
      export interface LookupTransform_SendGoalConstructor extends ROSService {
        readonly Request: LookupTransform_SendGoal_RequestConstructor;
        readonly Response: LookupTransform_SendGoal_ResponseConstructor;
      }
      export interface LookupTransform_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: tf2_msgs.action.LookupTransform_Goal;
      }
      export interface LookupTransform_SendGoal_RequestConstructor {
        new(other?: LookupTransform_SendGoal_Request): LookupTransform_SendGoal_Request;
      }
      export interface LookupTransform_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface LookupTransform_SendGoal_ResponseConstructor {
        new(other?: LookupTransform_SendGoal_Response): LookupTransform_SendGoal_Response;
      }
    }
    namespace msg {
      export interface TF2Error {
        error: number;
        error_string: string;
      }
      export interface TF2ErrorConstructor {
        readonly NO_ERROR: number;
        readonly LOOKUP_ERROR: number;
        readonly CONNECTIVITY_ERROR: number;
        readonly EXTRAPOLATION_ERROR: number;
        readonly INVALID_ARGUMENT_ERROR: number;
        readonly TIMEOUT_ERROR: number;
        readonly TRANSFORM_ERROR: number;
        new(other?: TF2Error): TF2Error;
      }
      export interface TFMessage {
        transforms: geometry_msgs.msg.TransformStamped[];
      }
      export interface TFMessageConstructor {
        new(other?: TFMessage): TFMessage;
      }
    }
    namespace srv {
      export interface FrameGraphConstructor extends ROSService {
        readonly Request: FrameGraph_RequestConstructor;
        readonly Response: FrameGraph_ResponseConstructor;
      }
      export interface FrameGraph_Request {
      }
      export interface FrameGraph_RequestConstructor {
        new(other?: FrameGraph_Request): FrameGraph_Request;
      }
      export interface FrameGraph_Response {
        frame_yaml: string;
      }
      export interface FrameGraph_ResponseConstructor {
        new(other?: FrameGraph_Response): FrameGraph_Response;
      }
    }
  }

  namespace trajectory_msgs {
    namespace msg {
      export interface JointTrajectory {
        header: std_msgs.msg.Header;
        joint_names: string[];
        points: trajectory_msgs.msg.JointTrajectoryPoint[];
      }
      export interface JointTrajectoryConstructor {
        new(other?: JointTrajectory): JointTrajectory;
      }
      export interface JointTrajectoryPoint {
        positions: number[] | Float64Array;
        velocities: number[] | Float64Array;
        accelerations: number[] | Float64Array;
        effort: number[] | Float64Array;
        time_from_start: builtin_interfaces.msg.Duration;
      }
      export interface JointTrajectoryPointConstructor {
        new(other?: JointTrajectoryPoint): JointTrajectoryPoint;
      }
      export interface MultiDOFJointTrajectory {
        header: std_msgs.msg.Header;
        joint_names: string[];
        points: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint[];
      }
      export interface MultiDOFJointTrajectoryConstructor {
        new(other?: MultiDOFJointTrajectory): MultiDOFJointTrajectory;
      }
      export interface MultiDOFJointTrajectoryPoint {
        transforms: geometry_msgs.msg.Transform[];
        velocities: geometry_msgs.msg.Twist[];
        accelerations: geometry_msgs.msg.Twist[];
        time_from_start: builtin_interfaces.msg.Duration;
      }
      export interface MultiDOFJointTrajectoryPointConstructor {
        new(other?: MultiDOFJointTrajectoryPoint): MultiDOFJointTrajectoryPoint;
      }
    }
  }

  namespace turtlesim {
    namespace action {
      export interface RotateAbsoluteConstructor {
        readonly Goal: RotateAbsolute_GoalConstructor;
        readonly Result: RotateAbsolute_ResultConstructor;
        readonly Feedback: RotateAbsolute_FeedbackConstructor;
      }
      export interface RotateAbsolute_Feedback {
        remaining: number;
      }
      export interface RotateAbsolute_FeedbackConstructor {
        new(other?: RotateAbsolute_Feedback): RotateAbsolute_Feedback;
      }
      export interface RotateAbsolute_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: turtlesim.action.RotateAbsolute_Feedback;
      }
      export interface RotateAbsolute_FeedbackMessageConstructor {
        new(other?: RotateAbsolute_FeedbackMessage): RotateAbsolute_FeedbackMessage;
      }
      export interface RotateAbsolute_GetResultConstructor extends ROSService {
        readonly Request: RotateAbsolute_GetResult_RequestConstructor;
        readonly Response: RotateAbsolute_GetResult_ResponseConstructor;
      }
      export interface RotateAbsolute_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface RotateAbsolute_GetResult_RequestConstructor {
        new(other?: RotateAbsolute_GetResult_Request): RotateAbsolute_GetResult_Request;
      }
      export interface RotateAbsolute_GetResult_Response {
        status: number;
        result: turtlesim.action.RotateAbsolute_Result;
      }
      export interface RotateAbsolute_GetResult_ResponseConstructor {
        new(other?: RotateAbsolute_GetResult_Response): RotateAbsolute_GetResult_Response;
      }
      export interface RotateAbsolute_Goal {
        theta: number;
      }
      export interface RotateAbsolute_GoalConstructor {
        new(other?: RotateAbsolute_Goal): RotateAbsolute_Goal;
      }
      export interface RotateAbsolute_Result {
        delta: number;
      }
      export interface RotateAbsolute_ResultConstructor {
        new(other?: RotateAbsolute_Result): RotateAbsolute_Result;
      }
      export interface RotateAbsolute_SendGoalConstructor extends ROSService {
        readonly Request: RotateAbsolute_SendGoal_RequestConstructor;
        readonly Response: RotateAbsolute_SendGoal_ResponseConstructor;
      }
      export interface RotateAbsolute_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: turtlesim.action.RotateAbsolute_Goal;
      }
      export interface RotateAbsolute_SendGoal_RequestConstructor {
        new(other?: RotateAbsolute_SendGoal_Request): RotateAbsolute_SendGoal_Request;
      }
      export interface RotateAbsolute_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface RotateAbsolute_SendGoal_ResponseConstructor {
        new(other?: RotateAbsolute_SendGoal_Response): RotateAbsolute_SendGoal_Response;
      }
    }
    namespace msg {
      export interface Color {
        r: number;
        g: number;
        b: number;
      }
      export interface ColorConstructor {
        new(other?: Color): Color;
      }
      export interface Pose {
        x: number;
        y: number;
        theta: number;
        linear_velocity: number;
        angular_velocity: number;
      }
      export interface PoseConstructor {
        new(other?: Pose): Pose;
      }
    }
    namespace srv {
      export interface KillConstructor extends ROSService {
        readonly Request: Kill_RequestConstructor;
        readonly Response: Kill_ResponseConstructor;
      }
      export interface Kill_Request {
        name: string;
      }
      export interface Kill_RequestConstructor {
        new(other?: Kill_Request): Kill_Request;
      }
      export interface Kill_Response {
      }
      export interface Kill_ResponseConstructor {
        new(other?: Kill_Response): Kill_Response;
      }
      export interface SetPenConstructor extends ROSService {
        readonly Request: SetPen_RequestConstructor;
        readonly Response: SetPen_ResponseConstructor;
      }
      export interface SetPen_Request {
        r: number;
        g: number;
        b: number;
        width: number;
        off: number;
      }
      export interface SetPen_RequestConstructor {
        new(other?: SetPen_Request): SetPen_Request;
      }
      export interface SetPen_Response {
      }
      export interface SetPen_ResponseConstructor {
        new(other?: SetPen_Response): SetPen_Response;
      }
      export interface SpawnConstructor extends ROSService {
        readonly Request: Spawn_RequestConstructor;
        readonly Response: Spawn_ResponseConstructor;
      }
      export interface Spawn_Request {
        x: number;
        y: number;
        theta: number;
        name: string;
      }
      export interface Spawn_RequestConstructor {
        new(other?: Spawn_Request): Spawn_Request;
      }
      export interface Spawn_Response {
        name: string;
      }
      export interface Spawn_ResponseConstructor {
        new(other?: Spawn_Response): Spawn_Response;
      }
      export interface TeleportAbsoluteConstructor extends ROSService {
        readonly Request: TeleportAbsolute_RequestConstructor;
        readonly Response: TeleportAbsolute_ResponseConstructor;
      }
      export interface TeleportAbsolute_Request {
        x: number;
        y: number;
        theta: number;
      }
      export interface TeleportAbsolute_RequestConstructor {
        new(other?: TeleportAbsolute_Request): TeleportAbsolute_Request;
      }
      export interface TeleportAbsolute_Response {
      }
      export interface TeleportAbsolute_ResponseConstructor {
        new(other?: TeleportAbsolute_Response): TeleportAbsolute_Response;
      }
      export interface TeleportRelativeConstructor extends ROSService {
        readonly Request: TeleportRelative_RequestConstructor;
        readonly Response: TeleportRelative_ResponseConstructor;
      }
      export interface TeleportRelative_Request {
        linear: number;
        angular: number;
      }
      export interface TeleportRelative_RequestConstructor {
        new(other?: TeleportRelative_Request): TeleportRelative_Request;
      }
      export interface TeleportRelative_Response {
      }
      export interface TeleportRelative_ResponseConstructor {
        new(other?: TeleportRelative_Response): TeleportRelative_Response;
      }
    }
  }

  namespace unique_identifier_msgs {
    namespace msg {
      export interface UUID {
        uuid: number[] | Uint8Array;
      }
      export interface UUIDConstructor {
        new(other?: UUID): UUID;
      }
    }
  }

  namespace visualization_msgs {
    namespace msg {
      export interface ImageMarker {
        header: std_msgs.msg.Header;
        ns: string;
        id: number;
        type: number;
        action: number;
        position: geometry_msgs.msg.Point;
        scale: number;
        outline_color: std_msgs.msg.ColorRGBA;
        filled: number;
        fill_color: std_msgs.msg.ColorRGBA;
        lifetime: builtin_interfaces.msg.Duration;
        points: geometry_msgs.msg.Point[];
        outline_colors: std_msgs.msg.ColorRGBA[];
      }
      export interface ImageMarkerConstructor {
        readonly CIRCLE: number;
        readonly LINE_STRIP: number;
        readonly LINE_LIST: number;
        readonly POLYGON: number;
        readonly POINTS: number;
        readonly ADD: number;
        readonly REMOVE: number;
        new(other?: ImageMarker): ImageMarker;
      }
      export interface InteractiveMarker {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
        name: string;
        description: string;
        scale: number;
        menu_entries: visualization_msgs.msg.MenuEntry[];
        controls: visualization_msgs.msg.InteractiveMarkerControl[];
      }
      export interface InteractiveMarkerConstructor {
        new(other?: InteractiveMarker): InteractiveMarker;
      }
      export interface InteractiveMarkerControl {
        name: string;
        orientation: geometry_msgs.msg.Quaternion;
        orientation_mode: number;
        interaction_mode: number;
        always_visible: boolean;
        markers: visualization_msgs.msg.Marker[];
        independent_marker_orientation: boolean;
        description: string;
      }
      export interface InteractiveMarkerControlConstructor {
        readonly INHERIT: number;
        readonly FIXED: number;
        readonly VIEW_FACING: number;
        readonly NONE: number;
        readonly MENU: number;
        readonly BUTTON: number;
        readonly MOVE_AXIS: number;
        readonly MOVE_PLANE: number;
        readonly ROTATE_AXIS: number;
        readonly MOVE_ROTATE: number;
        readonly MOVE_3D: number;
        readonly ROTATE_3D: number;
        readonly MOVE_ROTATE_3D: number;
        new(other?: InteractiveMarkerControl): InteractiveMarkerControl;
      }
      export interface InteractiveMarkerFeedback {
        header: std_msgs.msg.Header;
        client_id: string;
        marker_name: string;
        control_name: string;
        event_type: number;
        pose: geometry_msgs.msg.Pose;
        menu_entry_id: number;
        mouse_point: geometry_msgs.msg.Point;
        mouse_point_valid: boolean;
      }
      export interface InteractiveMarkerFeedbackConstructor {
        readonly KEEP_ALIVE: number;
        readonly POSE_UPDATE: number;
        readonly MENU_SELECT: number;
        readonly BUTTON_CLICK: number;
        readonly MOUSE_DOWN: number;
        readonly MOUSE_UP: number;
        new(other?: InteractiveMarkerFeedback): InteractiveMarkerFeedback;
      }
      export interface InteractiveMarkerInit {
        server_id: string;
        seq_num: number;
        markers: visualization_msgs.msg.InteractiveMarker[];
      }
      export interface InteractiveMarkerInitConstructor {
        new(other?: InteractiveMarkerInit): InteractiveMarkerInit;
      }
      export interface InteractiveMarkerPose {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
        name: string;
      }
      export interface InteractiveMarkerPoseConstructor {
        new(other?: InteractiveMarkerPose): InteractiveMarkerPose;
      }
      export interface InteractiveMarkerUpdate {
        server_id: string;
        seq_num: number;
        type: number;
        markers: visualization_msgs.msg.InteractiveMarker[];
        poses: visualization_msgs.msg.InteractiveMarkerPose[];
        erases: string[];
      }
      export interface InteractiveMarkerUpdateConstructor {
        readonly KEEP_ALIVE: number;
        readonly UPDATE: number;
        new(other?: InteractiveMarkerUpdate): InteractiveMarkerUpdate;
      }
      export interface Marker {
        header: std_msgs.msg.Header;
        ns: string;
        id: number;
        type: number;
        action: number;
        pose: geometry_msgs.msg.Pose;
        scale: geometry_msgs.msg.Vector3;
        color: std_msgs.msg.ColorRGBA;
        lifetime: builtin_interfaces.msg.Duration;
        frame_locked: boolean;
        points: geometry_msgs.msg.Point[];
        colors: std_msgs.msg.ColorRGBA[];
        text: string;
        mesh_resource: string;
        mesh_use_embedded_materials: boolean;
      }
      export interface MarkerConstructor {
        readonly ARROW: number;
        readonly CUBE: number;
        readonly SPHERE: number;
        readonly CYLINDER: number;
        readonly LINE_STRIP: number;
        readonly LINE_LIST: number;
        readonly CUBE_LIST: number;
        readonly SPHERE_LIST: number;
        readonly POINTS: number;
        readonly TEXT_VIEW_FACING: number;
        readonly MESH_RESOURCE: number;
        readonly TRIANGLE_LIST: number;
        readonly ADD: number;
        readonly MODIFY: number;
        readonly DELETE: number;
        readonly DELETEALL: number;
        new(other?: Marker): Marker;
      }
      export interface MarkerArray {
        markers: visualization_msgs.msg.Marker[];
      }
      export interface MarkerArrayConstructor {
        new(other?: MarkerArray): MarkerArray;
      }
      export interface MenuEntry {
        id: number;
        parent_id: number;
        title: string;
        command: string;
        command_type: number;
      }
      export interface MenuEntryConstructor {
        readonly FEEDBACK: number;
        readonly ROSRUN: number;
        readonly ROSLAUNCH: number;
        new(other?: MenuEntry): MenuEntry;
      }
    }
    namespace srv {
      export interface GetInteractiveMarkersConstructor extends ROSService {
        readonly Request: GetInteractiveMarkers_RequestConstructor;
        readonly Response: GetInteractiveMarkers_ResponseConstructor;
      }
      export interface GetInteractiveMarkers_Request {
      }
      export interface GetInteractiveMarkers_RequestConstructor {
        new(other?: GetInteractiveMarkers_Request): GetInteractiveMarkers_Request;
      }
      export interface GetInteractiveMarkers_Response {
        sequence_number: number;
        markers: visualization_msgs.msg.InteractiveMarker[];
      }
      export interface GetInteractiveMarkers_ResponseConstructor {
        new(other?: GetInteractiveMarkers_Response): GetInteractiveMarkers_Response;
      }
    }
  }

  type MessagesMap = {
    'string': string,
    'action_msgs/msg/GoalInfo': action_msgs.msg.GoalInfo,
    'action_msgs/msg/GoalStatus': action_msgs.msg.GoalStatus,
    'action_msgs/msg/GoalStatusArray': action_msgs.msg.GoalStatusArray,
    'action_msgs/srv/CancelGoal_Request': action_msgs.srv.CancelGoal_Request,
    'action_msgs/srv/CancelGoal_Response': action_msgs.srv.CancelGoal_Response,
    'action_tutorials_interfaces/action/Fibonacci_Feedback': action_tutorials_interfaces.action.Fibonacci_Feedback,
    'action_tutorials_interfaces/action/Fibonacci_FeedbackMessage': action_tutorials_interfaces.action.Fibonacci_FeedbackMessage,
    'action_tutorials_interfaces/action/Fibonacci_GetResult_Request': action_tutorials_interfaces.action.Fibonacci_GetResult_Request,
    'action_tutorials_interfaces/action/Fibonacci_GetResult_Response': action_tutorials_interfaces.action.Fibonacci_GetResult_Response,
    'action_tutorials_interfaces/action/Fibonacci_Goal': action_tutorials_interfaces.action.Fibonacci_Goal,
    'action_tutorials_interfaces/action/Fibonacci_Result': action_tutorials_interfaces.action.Fibonacci_Result,
    'action_tutorials_interfaces/action/Fibonacci_SendGoal_Request': action_tutorials_interfaces.action.Fibonacci_SendGoal_Request,
    'action_tutorials_interfaces/action/Fibonacci_SendGoal_Response': action_tutorials_interfaces.action.Fibonacci_SendGoal_Response,
    'actionlib_msgs/msg/GoalID': actionlib_msgs.msg.GoalID,
    'actionlib_msgs/msg/GoalStatus': actionlib_msgs.msg.GoalStatus,
    'actionlib_msgs/msg/GoalStatusArray': actionlib_msgs.msg.GoalStatusArray,
    'builtin_interfaces/msg/Duration': builtin_interfaces.msg.Duration,
    'builtin_interfaces/msg/Time': builtin_interfaces.msg.Time,
    'composition_interfaces/srv/ListNodes_Request': composition_interfaces.srv.ListNodes_Request,
    'composition_interfaces/srv/ListNodes_Response': composition_interfaces.srv.ListNodes_Response,
    'composition_interfaces/srv/LoadNode_Request': composition_interfaces.srv.LoadNode_Request,
    'composition_interfaces/srv/LoadNode_Response': composition_interfaces.srv.LoadNode_Response,
    'composition_interfaces/srv/UnloadNode_Request': composition_interfaces.srv.UnloadNode_Request,
    'composition_interfaces/srv/UnloadNode_Response': composition_interfaces.srv.UnloadNode_Response,
    'diagnostic_msgs/msg/DiagnosticArray': diagnostic_msgs.msg.DiagnosticArray,
    'diagnostic_msgs/msg/DiagnosticStatus': diagnostic_msgs.msg.DiagnosticStatus,
    'diagnostic_msgs/msg/KeyValue': diagnostic_msgs.msg.KeyValue,
    'diagnostic_msgs/srv/AddDiagnostics_Request': diagnostic_msgs.srv.AddDiagnostics_Request,
    'diagnostic_msgs/srv/AddDiagnostics_Response': diagnostic_msgs.srv.AddDiagnostics_Response,
    'diagnostic_msgs/srv/SelfTest_Request': diagnostic_msgs.srv.SelfTest_Request,
    'diagnostic_msgs/srv/SelfTest_Response': diagnostic_msgs.srv.SelfTest_Response,
    'example_interfaces/action/Fibonacci_Feedback': example_interfaces.action.Fibonacci_Feedback,
    'example_interfaces/action/Fibonacci_FeedbackMessage': example_interfaces.action.Fibonacci_FeedbackMessage,
    'example_interfaces/action/Fibonacci_GetResult_Request': example_interfaces.action.Fibonacci_GetResult_Request,
    'example_interfaces/action/Fibonacci_GetResult_Response': example_interfaces.action.Fibonacci_GetResult_Response,
    'example_interfaces/action/Fibonacci_Goal': example_interfaces.action.Fibonacci_Goal,
    'example_interfaces/action/Fibonacci_Result': example_interfaces.action.Fibonacci_Result,
    'example_interfaces/action/Fibonacci_SendGoal_Request': example_interfaces.action.Fibonacci_SendGoal_Request,
    'example_interfaces/action/Fibonacci_SendGoal_Response': example_interfaces.action.Fibonacci_SendGoal_Response,
    'example_interfaces/msg/Bool': example_interfaces.msg.Bool,
    'example_interfaces/msg/Byte': example_interfaces.msg.Byte,
    'example_interfaces/msg/ByteMultiArray': example_interfaces.msg.ByteMultiArray,
    'example_interfaces/msg/Char': example_interfaces.msg.Char,
    'example_interfaces/msg/Empty': example_interfaces.msg.Empty,
    'example_interfaces/msg/Float32': example_interfaces.msg.Float32,
    'example_interfaces/msg/Float32MultiArray': example_interfaces.msg.Float32MultiArray,
    'example_interfaces/msg/Float64': example_interfaces.msg.Float64,
    'example_interfaces/msg/Float64MultiArray': example_interfaces.msg.Float64MultiArray,
    'example_interfaces/msg/Int16': example_interfaces.msg.Int16,
    'example_interfaces/msg/Int16MultiArray': example_interfaces.msg.Int16MultiArray,
    'example_interfaces/msg/Int32': example_interfaces.msg.Int32,
    'example_interfaces/msg/Int32MultiArray': example_interfaces.msg.Int32MultiArray,
    'example_interfaces/msg/Int64': example_interfaces.msg.Int64,
    'example_interfaces/msg/Int64MultiArray': example_interfaces.msg.Int64MultiArray,
    'example_interfaces/msg/Int8': example_interfaces.msg.Int8,
    'example_interfaces/msg/Int8MultiArray': example_interfaces.msg.Int8MultiArray,
    'example_interfaces/msg/MultiArrayDimension': example_interfaces.msg.MultiArrayDimension,
    'example_interfaces/msg/MultiArrayLayout': example_interfaces.msg.MultiArrayLayout,
    'example_interfaces/msg/String': example_interfaces.msg.String,
    'example_interfaces/msg/UInt16': example_interfaces.msg.UInt16,
    'example_interfaces/msg/UInt16MultiArray': example_interfaces.msg.UInt16MultiArray,
    'example_interfaces/msg/UInt32': example_interfaces.msg.UInt32,
    'example_interfaces/msg/UInt32MultiArray': example_interfaces.msg.UInt32MultiArray,
    'example_interfaces/msg/UInt64': example_interfaces.msg.UInt64,
    'example_interfaces/msg/UInt64MultiArray': example_interfaces.msg.UInt64MultiArray,
    'example_interfaces/msg/UInt8': example_interfaces.msg.UInt8,
    'example_interfaces/msg/UInt8MultiArray': example_interfaces.msg.UInt8MultiArray,
    'example_interfaces/msg/WString': example_interfaces.msg.WString,
    'example_interfaces/srv/AddTwoInts_Request': example_interfaces.srv.AddTwoInts_Request,
    'example_interfaces/srv/AddTwoInts_Response': example_interfaces.srv.AddTwoInts_Response,
    'example_interfaces/srv/SetBool_Request': example_interfaces.srv.SetBool_Request,
    'example_interfaces/srv/SetBool_Response': example_interfaces.srv.SetBool_Response,
    'example_interfaces/srv/Trigger_Request': example_interfaces.srv.Trigger_Request,
    'example_interfaces/srv/Trigger_Response': example_interfaces.srv.Trigger_Response,
    'gazebo_msgs/msg/ContactState': gazebo_msgs.msg.ContactState,
    'gazebo_msgs/msg/ContactsState': gazebo_msgs.msg.ContactsState,
    'gazebo_msgs/msg/EntityState': gazebo_msgs.msg.EntityState,
    'gazebo_msgs/msg/LinkState': gazebo_msgs.msg.LinkState,
    'gazebo_msgs/msg/LinkStates': gazebo_msgs.msg.LinkStates,
    'gazebo_msgs/msg/ModelState': gazebo_msgs.msg.ModelState,
    'gazebo_msgs/msg/ModelStates': gazebo_msgs.msg.ModelStates,
    'gazebo_msgs/msg/ODEJointProperties': gazebo_msgs.msg.ODEJointProperties,
    'gazebo_msgs/msg/ODEPhysics': gazebo_msgs.msg.ODEPhysics,
    'gazebo_msgs/msg/PerformanceMetrics': gazebo_msgs.msg.PerformanceMetrics,
    'gazebo_msgs/msg/SensorPerformanceMetric': gazebo_msgs.msg.SensorPerformanceMetric,
    'gazebo_msgs/msg/WorldState': gazebo_msgs.msg.WorldState,
    'gazebo_msgs/srv/ApplyBodyWrench_Request': gazebo_msgs.srv.ApplyBodyWrench_Request,
    'gazebo_msgs/srv/ApplyBodyWrench_Response': gazebo_msgs.srv.ApplyBodyWrench_Response,
    'gazebo_msgs/srv/ApplyJointEffort_Request': gazebo_msgs.srv.ApplyJointEffort_Request,
    'gazebo_msgs/srv/ApplyJointEffort_Response': gazebo_msgs.srv.ApplyJointEffort_Response,
    'gazebo_msgs/srv/ApplyLinkWrench_Request': gazebo_msgs.srv.ApplyLinkWrench_Request,
    'gazebo_msgs/srv/ApplyLinkWrench_Response': gazebo_msgs.srv.ApplyLinkWrench_Response,
    'gazebo_msgs/srv/BodyRequest_Request': gazebo_msgs.srv.BodyRequest_Request,
    'gazebo_msgs/srv/BodyRequest_Response': gazebo_msgs.srv.BodyRequest_Response,
    'gazebo_msgs/srv/DeleteEntity_Request': gazebo_msgs.srv.DeleteEntity_Request,
    'gazebo_msgs/srv/DeleteEntity_Response': gazebo_msgs.srv.DeleteEntity_Response,
    'gazebo_msgs/srv/DeleteLight_Request': gazebo_msgs.srv.DeleteLight_Request,
    'gazebo_msgs/srv/DeleteLight_Response': gazebo_msgs.srv.DeleteLight_Response,
    'gazebo_msgs/srv/DeleteModel_Request': gazebo_msgs.srv.DeleteModel_Request,
    'gazebo_msgs/srv/DeleteModel_Response': gazebo_msgs.srv.DeleteModel_Response,
    'gazebo_msgs/srv/GetEntityState_Request': gazebo_msgs.srv.GetEntityState_Request,
    'gazebo_msgs/srv/GetEntityState_Response': gazebo_msgs.srv.GetEntityState_Response,
    'gazebo_msgs/srv/GetJointProperties_Request': gazebo_msgs.srv.GetJointProperties_Request,
    'gazebo_msgs/srv/GetJointProperties_Response': gazebo_msgs.srv.GetJointProperties_Response,
    'gazebo_msgs/srv/GetLightProperties_Request': gazebo_msgs.srv.GetLightProperties_Request,
    'gazebo_msgs/srv/GetLightProperties_Response': gazebo_msgs.srv.GetLightProperties_Response,
    'gazebo_msgs/srv/GetLinkProperties_Request': gazebo_msgs.srv.GetLinkProperties_Request,
    'gazebo_msgs/srv/GetLinkProperties_Response': gazebo_msgs.srv.GetLinkProperties_Response,
    'gazebo_msgs/srv/GetLinkState_Request': gazebo_msgs.srv.GetLinkState_Request,
    'gazebo_msgs/srv/GetLinkState_Response': gazebo_msgs.srv.GetLinkState_Response,
    'gazebo_msgs/srv/GetModelList_Request': gazebo_msgs.srv.GetModelList_Request,
    'gazebo_msgs/srv/GetModelList_Response': gazebo_msgs.srv.GetModelList_Response,
    'gazebo_msgs/srv/GetModelProperties_Request': gazebo_msgs.srv.GetModelProperties_Request,
    'gazebo_msgs/srv/GetModelProperties_Response': gazebo_msgs.srv.GetModelProperties_Response,
    'gazebo_msgs/srv/GetModelState_Request': gazebo_msgs.srv.GetModelState_Request,
    'gazebo_msgs/srv/GetModelState_Response': gazebo_msgs.srv.GetModelState_Response,
    'gazebo_msgs/srv/GetPhysicsProperties_Request': gazebo_msgs.srv.GetPhysicsProperties_Request,
    'gazebo_msgs/srv/GetPhysicsProperties_Response': gazebo_msgs.srv.GetPhysicsProperties_Response,
    'gazebo_msgs/srv/GetWorldProperties_Request': gazebo_msgs.srv.GetWorldProperties_Request,
    'gazebo_msgs/srv/GetWorldProperties_Response': gazebo_msgs.srv.GetWorldProperties_Response,
    'gazebo_msgs/srv/JointRequest_Request': gazebo_msgs.srv.JointRequest_Request,
    'gazebo_msgs/srv/JointRequest_Response': gazebo_msgs.srv.JointRequest_Response,
    'gazebo_msgs/srv/LinkRequest_Request': gazebo_msgs.srv.LinkRequest_Request,
    'gazebo_msgs/srv/LinkRequest_Response': gazebo_msgs.srv.LinkRequest_Response,
    'gazebo_msgs/srv/SetEntityState_Request': gazebo_msgs.srv.SetEntityState_Request,
    'gazebo_msgs/srv/SetEntityState_Response': gazebo_msgs.srv.SetEntityState_Response,
    'gazebo_msgs/srv/SetJointProperties_Request': gazebo_msgs.srv.SetJointProperties_Request,
    'gazebo_msgs/srv/SetJointProperties_Response': gazebo_msgs.srv.SetJointProperties_Response,
    'gazebo_msgs/srv/SetJointTrajectory_Request': gazebo_msgs.srv.SetJointTrajectory_Request,
    'gazebo_msgs/srv/SetJointTrajectory_Response': gazebo_msgs.srv.SetJointTrajectory_Response,
    'gazebo_msgs/srv/SetLightProperties_Request': gazebo_msgs.srv.SetLightProperties_Request,
    'gazebo_msgs/srv/SetLightProperties_Response': gazebo_msgs.srv.SetLightProperties_Response,
    'gazebo_msgs/srv/SetLinkProperties_Request': gazebo_msgs.srv.SetLinkProperties_Request,
    'gazebo_msgs/srv/SetLinkProperties_Response': gazebo_msgs.srv.SetLinkProperties_Response,
    'gazebo_msgs/srv/SetLinkState_Request': gazebo_msgs.srv.SetLinkState_Request,
    'gazebo_msgs/srv/SetLinkState_Response': gazebo_msgs.srv.SetLinkState_Response,
    'gazebo_msgs/srv/SetModelConfiguration_Request': gazebo_msgs.srv.SetModelConfiguration_Request,
    'gazebo_msgs/srv/SetModelConfiguration_Response': gazebo_msgs.srv.SetModelConfiguration_Response,
    'gazebo_msgs/srv/SetModelState_Request': gazebo_msgs.srv.SetModelState_Request,
    'gazebo_msgs/srv/SetModelState_Response': gazebo_msgs.srv.SetModelState_Response,
    'gazebo_msgs/srv/SetPhysicsProperties_Request': gazebo_msgs.srv.SetPhysicsProperties_Request,
    'gazebo_msgs/srv/SetPhysicsProperties_Response': gazebo_msgs.srv.SetPhysicsProperties_Response,
    'gazebo_msgs/srv/SpawnEntity_Request': gazebo_msgs.srv.SpawnEntity_Request,
    'gazebo_msgs/srv/SpawnEntity_Response': gazebo_msgs.srv.SpawnEntity_Response,
    'gazebo_msgs/srv/SpawnModel_Request': gazebo_msgs.srv.SpawnModel_Request,
    'gazebo_msgs/srv/SpawnModel_Response': gazebo_msgs.srv.SpawnModel_Response,
    'geometry_msgs/msg/Accel': geometry_msgs.msg.Accel,
    'geometry_msgs/msg/AccelStamped': geometry_msgs.msg.AccelStamped,
    'geometry_msgs/msg/AccelWithCovariance': geometry_msgs.msg.AccelWithCovariance,
    'geometry_msgs/msg/AccelWithCovarianceStamped': geometry_msgs.msg.AccelWithCovarianceStamped,
    'geometry_msgs/msg/Inertia': geometry_msgs.msg.Inertia,
    'geometry_msgs/msg/InertiaStamped': geometry_msgs.msg.InertiaStamped,
    'geometry_msgs/msg/Point': geometry_msgs.msg.Point,
    'geometry_msgs/msg/Point32': geometry_msgs.msg.Point32,
    'geometry_msgs/msg/PointStamped': geometry_msgs.msg.PointStamped,
    'geometry_msgs/msg/Polygon': geometry_msgs.msg.Polygon,
    'geometry_msgs/msg/PolygonStamped': geometry_msgs.msg.PolygonStamped,
    'geometry_msgs/msg/Pose': geometry_msgs.msg.Pose,
    'geometry_msgs/msg/Pose2D': geometry_msgs.msg.Pose2D,
    'geometry_msgs/msg/PoseArray': geometry_msgs.msg.PoseArray,
    'geometry_msgs/msg/PoseStamped': geometry_msgs.msg.PoseStamped,
    'geometry_msgs/msg/PoseWithCovariance': geometry_msgs.msg.PoseWithCovariance,
    'geometry_msgs/msg/PoseWithCovarianceStamped': geometry_msgs.msg.PoseWithCovarianceStamped,
    'geometry_msgs/msg/Quaternion': geometry_msgs.msg.Quaternion,
    'geometry_msgs/msg/QuaternionStamped': geometry_msgs.msg.QuaternionStamped,
    'geometry_msgs/msg/Transform': geometry_msgs.msg.Transform,
    'geometry_msgs/msg/TransformStamped': geometry_msgs.msg.TransformStamped,
    'geometry_msgs/msg/Twist': geometry_msgs.msg.Twist,
    'geometry_msgs/msg/TwistStamped': geometry_msgs.msg.TwistStamped,
    'geometry_msgs/msg/TwistWithCovariance': geometry_msgs.msg.TwistWithCovariance,
    'geometry_msgs/msg/TwistWithCovarianceStamped': geometry_msgs.msg.TwistWithCovarianceStamped,
    'geometry_msgs/msg/Vector3': geometry_msgs.msg.Vector3,
    'geometry_msgs/msg/Vector3Stamped': geometry_msgs.msg.Vector3Stamped,
    'geometry_msgs/msg/Wrench': geometry_msgs.msg.Wrench,
    'geometry_msgs/msg/WrenchStamped': geometry_msgs.msg.WrenchStamped,
    'libstatistics_collector/msg/DummyMessage': libstatistics_collector.msg.DummyMessage,
    'lifecycle_msgs/msg/State': lifecycle_msgs.msg.State,
    'lifecycle_msgs/msg/Transition': lifecycle_msgs.msg.Transition,
    'lifecycle_msgs/msg/TransitionDescription': lifecycle_msgs.msg.TransitionDescription,
    'lifecycle_msgs/msg/TransitionEvent': lifecycle_msgs.msg.TransitionEvent,
    'lifecycle_msgs/srv/ChangeState_Request': lifecycle_msgs.srv.ChangeState_Request,
    'lifecycle_msgs/srv/ChangeState_Response': lifecycle_msgs.srv.ChangeState_Response,
    'lifecycle_msgs/srv/GetAvailableStates_Request': lifecycle_msgs.srv.GetAvailableStates_Request,
    'lifecycle_msgs/srv/GetAvailableStates_Response': lifecycle_msgs.srv.GetAvailableStates_Response,
    'lifecycle_msgs/srv/GetAvailableTransitions_Request': lifecycle_msgs.srv.GetAvailableTransitions_Request,
    'lifecycle_msgs/srv/GetAvailableTransitions_Response': lifecycle_msgs.srv.GetAvailableTransitions_Response,
    'lifecycle_msgs/srv/GetState_Request': lifecycle_msgs.srv.GetState_Request,
    'lifecycle_msgs/srv/GetState_Response': lifecycle_msgs.srv.GetState_Response,
    'logging_demo/srv/ConfigLogger_Request': logging_demo.srv.ConfigLogger_Request,
    'logging_demo/srv/ConfigLogger_Response': logging_demo.srv.ConfigLogger_Response,
    'map_msgs/msg/OccupancyGridUpdate': map_msgs.msg.OccupancyGridUpdate,
    'map_msgs/msg/PointCloud2Update': map_msgs.msg.PointCloud2Update,
    'map_msgs/msg/ProjectedMap': map_msgs.msg.ProjectedMap,
    'map_msgs/msg/ProjectedMapInfo': map_msgs.msg.ProjectedMapInfo,
    'map_msgs/srv/GetMapROI_Request': map_msgs.srv.GetMapROI_Request,
    'map_msgs/srv/GetMapROI_Response': map_msgs.srv.GetMapROI_Response,
    'map_msgs/srv/GetPointMapROI_Request': map_msgs.srv.GetPointMapROI_Request,
    'map_msgs/srv/GetPointMapROI_Response': map_msgs.srv.GetPointMapROI_Response,
    'map_msgs/srv/GetPointMap_Request': map_msgs.srv.GetPointMap_Request,
    'map_msgs/srv/GetPointMap_Response': map_msgs.srv.GetPointMap_Response,
    'map_msgs/srv/ProjectedMapsInfo_Request': map_msgs.srv.ProjectedMapsInfo_Request,
    'map_msgs/srv/ProjectedMapsInfo_Response': map_msgs.srv.ProjectedMapsInfo_Response,
    'map_msgs/srv/SaveMap_Request': map_msgs.srv.SaveMap_Request,
    'map_msgs/srv/SaveMap_Response': map_msgs.srv.SaveMap_Response,
    'map_msgs/srv/SetMapProjections_Request': map_msgs.srv.SetMapProjections_Request,
    'map_msgs/srv/SetMapProjections_Response': map_msgs.srv.SetMapProjections_Response,
    'nav_msgs/msg/GridCells': nav_msgs.msg.GridCells,
    'nav_msgs/msg/MapMetaData': nav_msgs.msg.MapMetaData,
    'nav_msgs/msg/OccupancyGrid': nav_msgs.msg.OccupancyGrid,
    'nav_msgs/msg/Odometry': nav_msgs.msg.Odometry,
    'nav_msgs/msg/Path': nav_msgs.msg.Path,
    'nav_msgs/srv/GetMap_Request': nav_msgs.srv.GetMap_Request,
    'nav_msgs/srv/GetMap_Response': nav_msgs.srv.GetMap_Response,
    'nav_msgs/srv/GetPlan_Request': nav_msgs.srv.GetPlan_Request,
    'nav_msgs/srv/GetPlan_Response': nav_msgs.srv.GetPlan_Response,
    'nav_msgs/srv/SetMap_Request': nav_msgs.srv.SetMap_Request,
    'nav_msgs/srv/SetMap_Response': nav_msgs.srv.SetMap_Response,
    'pcl_msgs/msg/ModelCoefficients': pcl_msgs.msg.ModelCoefficients,
    'pcl_msgs/msg/PointIndices': pcl_msgs.msg.PointIndices,
    'pcl_msgs/msg/PolygonMesh': pcl_msgs.msg.PolygonMesh,
    'pcl_msgs/msg/Vertices': pcl_msgs.msg.Vertices,
    'pcl_msgs/srv/UpdateFilename_Request': pcl_msgs.srv.UpdateFilename_Request,
    'pcl_msgs/srv/UpdateFilename_Response': pcl_msgs.srv.UpdateFilename_Response,
    'pendulum_msgs/msg/JointCommand': pendulum_msgs.msg.JointCommand,
    'pendulum_msgs/msg/JointState': pendulum_msgs.msg.JointState,
    'pendulum_msgs/msg/RttestResults': pendulum_msgs.msg.RttestResults,
    'rcl_interfaces/msg/FloatingPointRange': rcl_interfaces.msg.FloatingPointRange,
    'rcl_interfaces/msg/IntegerRange': rcl_interfaces.msg.IntegerRange,
    'rcl_interfaces/msg/ListParametersResult': rcl_interfaces.msg.ListParametersResult,
    'rcl_interfaces/msg/Log': rcl_interfaces.msg.Log,
    'rcl_interfaces/msg/Parameter': rcl_interfaces.msg.Parameter,
    'rcl_interfaces/msg/ParameterDescriptor': rcl_interfaces.msg.ParameterDescriptor,
    'rcl_interfaces/msg/ParameterEvent': rcl_interfaces.msg.ParameterEvent,
    'rcl_interfaces/msg/ParameterEventDescriptors': rcl_interfaces.msg.ParameterEventDescriptors,
    'rcl_interfaces/msg/ParameterType': rcl_interfaces.msg.ParameterType,
    'rcl_interfaces/msg/ParameterValue': rcl_interfaces.msg.ParameterValue,
    'rcl_interfaces/msg/SetParametersResult': rcl_interfaces.msg.SetParametersResult,
    'rcl_interfaces/srv/DescribeParameters_Request': rcl_interfaces.srv.DescribeParameters_Request,
    'rcl_interfaces/srv/DescribeParameters_Response': rcl_interfaces.srv.DescribeParameters_Response,
    'rcl_interfaces/srv/GetParameterTypes_Request': rcl_interfaces.srv.GetParameterTypes_Request,
    'rcl_interfaces/srv/GetParameterTypes_Response': rcl_interfaces.srv.GetParameterTypes_Response,
    'rcl_interfaces/srv/GetParameters_Request': rcl_interfaces.srv.GetParameters_Request,
    'rcl_interfaces/srv/GetParameters_Response': rcl_interfaces.srv.GetParameters_Response,
    'rcl_interfaces/srv/ListParameters_Request': rcl_interfaces.srv.ListParameters_Request,
    'rcl_interfaces/srv/ListParameters_Response': rcl_interfaces.srv.ListParameters_Response,
    'rcl_interfaces/srv/SetParametersAtomically_Request': rcl_interfaces.srv.SetParametersAtomically_Request,
    'rcl_interfaces/srv/SetParametersAtomically_Response': rcl_interfaces.srv.SetParametersAtomically_Response,
    'rcl_interfaces/srv/SetParameters_Request': rcl_interfaces.srv.SetParameters_Request,
    'rcl_interfaces/srv/SetParameters_Response': rcl_interfaces.srv.SetParameters_Response,
    'rmw_dds_common/msg/Gid': rmw_dds_common.msg.Gid,
    'rmw_dds_common/msg/NodeEntitiesInfo': rmw_dds_common.msg.NodeEntitiesInfo,
    'rmw_dds_common/msg/ParticipantEntitiesInfo': rmw_dds_common.msg.ParticipantEntitiesInfo,
    'rosgraph_msgs/msg/Clock': rosgraph_msgs.msg.Clock,
    'sensor_msgs/msg/BatteryState': sensor_msgs.msg.BatteryState,
    'sensor_msgs/msg/CameraInfo': sensor_msgs.msg.CameraInfo,
    'sensor_msgs/msg/ChannelFloat32': sensor_msgs.msg.ChannelFloat32,
    'sensor_msgs/msg/CompressedImage': sensor_msgs.msg.CompressedImage,
    'sensor_msgs/msg/FluidPressure': sensor_msgs.msg.FluidPressure,
    'sensor_msgs/msg/Illuminance': sensor_msgs.msg.Illuminance,
    'sensor_msgs/msg/Image': sensor_msgs.msg.Image,
    'sensor_msgs/msg/Imu': sensor_msgs.msg.Imu,
    'sensor_msgs/msg/JointState': sensor_msgs.msg.JointState,
    'sensor_msgs/msg/Joy': sensor_msgs.msg.Joy,
    'sensor_msgs/msg/JoyFeedback': sensor_msgs.msg.JoyFeedback,
    'sensor_msgs/msg/JoyFeedbackArray': sensor_msgs.msg.JoyFeedbackArray,
    'sensor_msgs/msg/LaserEcho': sensor_msgs.msg.LaserEcho,
    'sensor_msgs/msg/LaserScan': sensor_msgs.msg.LaserScan,
    'sensor_msgs/msg/MagneticField': sensor_msgs.msg.MagneticField,
    'sensor_msgs/msg/MultiDOFJointState': sensor_msgs.msg.MultiDOFJointState,
    'sensor_msgs/msg/MultiEchoLaserScan': sensor_msgs.msg.MultiEchoLaserScan,
    'sensor_msgs/msg/NavSatFix': sensor_msgs.msg.NavSatFix,
    'sensor_msgs/msg/NavSatStatus': sensor_msgs.msg.NavSatStatus,
    'sensor_msgs/msg/PointCloud': sensor_msgs.msg.PointCloud,
    'sensor_msgs/msg/PointCloud2': sensor_msgs.msg.PointCloud2,
    'sensor_msgs/msg/PointField': sensor_msgs.msg.PointField,
    'sensor_msgs/msg/Range': sensor_msgs.msg.Range,
    'sensor_msgs/msg/RegionOfInterest': sensor_msgs.msg.RegionOfInterest,
    'sensor_msgs/msg/RelativeHumidity': sensor_msgs.msg.RelativeHumidity,
    'sensor_msgs/msg/Temperature': sensor_msgs.msg.Temperature,
    'sensor_msgs/msg/TimeReference': sensor_msgs.msg.TimeReference,
    'sensor_msgs/srv/SetCameraInfo_Request': sensor_msgs.srv.SetCameraInfo_Request,
    'sensor_msgs/srv/SetCameraInfo_Response': sensor_msgs.srv.SetCameraInfo_Response,
    'shape_msgs/msg/Mesh': shape_msgs.msg.Mesh,
    'shape_msgs/msg/MeshTriangle': shape_msgs.msg.MeshTriangle,
    'shape_msgs/msg/Plane': shape_msgs.msg.Plane,
    'shape_msgs/msg/SolidPrimitive': shape_msgs.msg.SolidPrimitive,
    'statistics_msgs/msg/MetricsMessage': statistics_msgs.msg.MetricsMessage,
    'statistics_msgs/msg/StatisticDataPoint': statistics_msgs.msg.StatisticDataPoint,
    'statistics_msgs/msg/StatisticDataType': statistics_msgs.msg.StatisticDataType,
    'std_msgs/msg/Bool': std_msgs.msg.Bool,
    'std_msgs/msg/Byte': std_msgs.msg.Byte,
    'std_msgs/msg/ByteMultiArray': std_msgs.msg.ByteMultiArray,
    'std_msgs/msg/Char': std_msgs.msg.Char,
    'std_msgs/msg/ColorRGBA': std_msgs.msg.ColorRGBA,
    'std_msgs/msg/Empty': std_msgs.msg.Empty,
    'std_msgs/msg/Float32': std_msgs.msg.Float32,
    'std_msgs/msg/Float32MultiArray': std_msgs.msg.Float32MultiArray,
    'std_msgs/msg/Float64': std_msgs.msg.Float64,
    'std_msgs/msg/Float64MultiArray': std_msgs.msg.Float64MultiArray,
    'std_msgs/msg/Header': std_msgs.msg.Header,
    'std_msgs/msg/Int16': std_msgs.msg.Int16,
    'std_msgs/msg/Int16MultiArray': std_msgs.msg.Int16MultiArray,
    'std_msgs/msg/Int32': std_msgs.msg.Int32,
    'std_msgs/msg/Int32MultiArray': std_msgs.msg.Int32MultiArray,
    'std_msgs/msg/Int64': std_msgs.msg.Int64,
    'std_msgs/msg/Int64MultiArray': std_msgs.msg.Int64MultiArray,
    'std_msgs/msg/Int8': std_msgs.msg.Int8,
    'std_msgs/msg/Int8MultiArray': std_msgs.msg.Int8MultiArray,
    'std_msgs/msg/MultiArrayDimension': std_msgs.msg.MultiArrayDimension,
    'std_msgs/msg/MultiArrayLayout': std_msgs.msg.MultiArrayLayout,
    'std_msgs/msg/String': std_msgs.msg.String,
    'std_msgs/msg/UInt16': std_msgs.msg.UInt16,
    'std_msgs/msg/UInt16MultiArray': std_msgs.msg.UInt16MultiArray,
    'std_msgs/msg/UInt32': std_msgs.msg.UInt32,
    'std_msgs/msg/UInt32MultiArray': std_msgs.msg.UInt32MultiArray,
    'std_msgs/msg/UInt64': std_msgs.msg.UInt64,
    'std_msgs/msg/UInt64MultiArray': std_msgs.msg.UInt64MultiArray,
    'std_msgs/msg/UInt8': std_msgs.msg.UInt8,
    'std_msgs/msg/UInt8MultiArray': std_msgs.msg.UInt8MultiArray,
    'std_srvs/srv/Empty_Request': std_srvs.srv.Empty_Request,
    'std_srvs/srv/Empty_Response': std_srvs.srv.Empty_Response,
    'std_srvs/srv/SetBool_Request': std_srvs.srv.SetBool_Request,
    'std_srvs/srv/SetBool_Response': std_srvs.srv.SetBool_Response,
    'std_srvs/srv/Trigger_Request': std_srvs.srv.Trigger_Request,
    'std_srvs/srv/Trigger_Response': std_srvs.srv.Trigger_Response,
    'stereo_msgs/msg/DisparityImage': stereo_msgs.msg.DisparityImage,
    'tf2_msgs/action/LookupTransform_Feedback': tf2_msgs.action.LookupTransform_Feedback,
    'tf2_msgs/action/LookupTransform_FeedbackMessage': tf2_msgs.action.LookupTransform_FeedbackMessage,
    'tf2_msgs/action/LookupTransform_GetResult_Request': tf2_msgs.action.LookupTransform_GetResult_Request,
    'tf2_msgs/action/LookupTransform_GetResult_Response': tf2_msgs.action.LookupTransform_GetResult_Response,
    'tf2_msgs/action/LookupTransform_Goal': tf2_msgs.action.LookupTransform_Goal,
    'tf2_msgs/action/LookupTransform_Result': tf2_msgs.action.LookupTransform_Result,
    'tf2_msgs/action/LookupTransform_SendGoal_Request': tf2_msgs.action.LookupTransform_SendGoal_Request,
    'tf2_msgs/action/LookupTransform_SendGoal_Response': tf2_msgs.action.LookupTransform_SendGoal_Response,
    'tf2_msgs/msg/TF2Error': tf2_msgs.msg.TF2Error,
    'tf2_msgs/msg/TFMessage': tf2_msgs.msg.TFMessage,
    'tf2_msgs/srv/FrameGraph_Request': tf2_msgs.srv.FrameGraph_Request,
    'tf2_msgs/srv/FrameGraph_Response': tf2_msgs.srv.FrameGraph_Response,
    'trajectory_msgs/msg/JointTrajectory': trajectory_msgs.msg.JointTrajectory,
    'trajectory_msgs/msg/JointTrajectoryPoint': trajectory_msgs.msg.JointTrajectoryPoint,
    'trajectory_msgs/msg/MultiDOFJointTrajectory': trajectory_msgs.msg.MultiDOFJointTrajectory,
    'trajectory_msgs/msg/MultiDOFJointTrajectoryPoint': trajectory_msgs.msg.MultiDOFJointTrajectoryPoint,
    'turtlesim/action/RotateAbsolute_Feedback': turtlesim.action.RotateAbsolute_Feedback,
    'turtlesim/action/RotateAbsolute_FeedbackMessage': turtlesim.action.RotateAbsolute_FeedbackMessage,
    'turtlesim/action/RotateAbsolute_GetResult_Request': turtlesim.action.RotateAbsolute_GetResult_Request,
    'turtlesim/action/RotateAbsolute_GetResult_Response': turtlesim.action.RotateAbsolute_GetResult_Response,
    'turtlesim/action/RotateAbsolute_Goal': turtlesim.action.RotateAbsolute_Goal,
    'turtlesim/action/RotateAbsolute_Result': turtlesim.action.RotateAbsolute_Result,
    'turtlesim/action/RotateAbsolute_SendGoal_Request': turtlesim.action.RotateAbsolute_SendGoal_Request,
    'turtlesim/action/RotateAbsolute_SendGoal_Response': turtlesim.action.RotateAbsolute_SendGoal_Response,
    'turtlesim/msg/Color': turtlesim.msg.Color,
    'turtlesim/msg/Pose': turtlesim.msg.Pose,
    'turtlesim/srv/Kill_Request': turtlesim.srv.Kill_Request,
    'turtlesim/srv/Kill_Response': turtlesim.srv.Kill_Response,
    'turtlesim/srv/SetPen_Request': turtlesim.srv.SetPen_Request,
    'turtlesim/srv/SetPen_Response': turtlesim.srv.SetPen_Response,
    'turtlesim/srv/Spawn_Request': turtlesim.srv.Spawn_Request,
    'turtlesim/srv/Spawn_Response': turtlesim.srv.Spawn_Response,
    'turtlesim/srv/TeleportAbsolute_Request': turtlesim.srv.TeleportAbsolute_Request,
    'turtlesim/srv/TeleportAbsolute_Response': turtlesim.srv.TeleportAbsolute_Response,
    'turtlesim/srv/TeleportRelative_Request': turtlesim.srv.TeleportRelative_Request,
    'turtlesim/srv/TeleportRelative_Response': turtlesim.srv.TeleportRelative_Response,
    'unique_identifier_msgs/msg/UUID': unique_identifier_msgs.msg.UUID,
    'visualization_msgs/msg/ImageMarker': visualization_msgs.msg.ImageMarker,
    'visualization_msgs/msg/InteractiveMarker': visualization_msgs.msg.InteractiveMarker,
    'visualization_msgs/msg/InteractiveMarkerControl': visualization_msgs.msg.InteractiveMarkerControl,
    'visualization_msgs/msg/InteractiveMarkerFeedback': visualization_msgs.msg.InteractiveMarkerFeedback,
    'visualization_msgs/msg/InteractiveMarkerInit': visualization_msgs.msg.InteractiveMarkerInit,
    'visualization_msgs/msg/InteractiveMarkerPose': visualization_msgs.msg.InteractiveMarkerPose,
    'visualization_msgs/msg/InteractiveMarkerUpdate': visualization_msgs.msg.InteractiveMarkerUpdate,
    'visualization_msgs/msg/Marker': visualization_msgs.msg.Marker,
    'visualization_msgs/msg/MarkerArray': visualization_msgs.msg.MarkerArray,
    'visualization_msgs/msg/MenuEntry': visualization_msgs.msg.MenuEntry,
    'visualization_msgs/srv/GetInteractiveMarkers_Request': visualization_msgs.srv.GetInteractiveMarkers_Request,
    'visualization_msgs/srv/GetInteractiveMarkers_Response': visualization_msgs.srv.GetInteractiveMarkers_Response,
  };
  type MessageTypeClassName = keyof MessagesMap;
  type Message = MessagesMap[MessageTypeClassName];
  type MessageType<T> = T extends MessageTypeClassName ? MessagesMap[T] : object;

  type MessageTypeClassConstructorMap = {
    'string': never,
    'action_msgs/msg/GoalInfo': action_msgs.msg.GoalInfoConstructor,
    'action_msgs/msg/GoalStatus': action_msgs.msg.GoalStatusConstructor,
    'action_msgs/msg/GoalStatusArray': action_msgs.msg.GoalStatusArrayConstructor,
    'action_msgs/srv/CancelGoal_Request': action_msgs.srv.CancelGoal_RequestConstructor,
    'action_msgs/srv/CancelGoal_Response': action_msgs.srv.CancelGoal_ResponseConstructor,
    'action_tutorials_interfaces/action/Fibonacci_Feedback': action_tutorials_interfaces.action.Fibonacci_FeedbackConstructor,
    'action_tutorials_interfaces/action/Fibonacci_FeedbackMessage': action_tutorials_interfaces.action.Fibonacci_FeedbackMessageConstructor,
    'action_tutorials_interfaces/action/Fibonacci_GetResult_Request': action_tutorials_interfaces.action.Fibonacci_GetResult_RequestConstructor,
    'action_tutorials_interfaces/action/Fibonacci_GetResult_Response': action_tutorials_interfaces.action.Fibonacci_GetResult_ResponseConstructor,
    'action_tutorials_interfaces/action/Fibonacci_Goal': action_tutorials_interfaces.action.Fibonacci_GoalConstructor,
    'action_tutorials_interfaces/action/Fibonacci_Result': action_tutorials_interfaces.action.Fibonacci_ResultConstructor,
    'action_tutorials_interfaces/action/Fibonacci_SendGoal_Request': action_tutorials_interfaces.action.Fibonacci_SendGoal_RequestConstructor,
    'action_tutorials_interfaces/action/Fibonacci_SendGoal_Response': action_tutorials_interfaces.action.Fibonacci_SendGoal_ResponseConstructor,
    'actionlib_msgs/msg/GoalID': actionlib_msgs.msg.GoalIDConstructor,
    'actionlib_msgs/msg/GoalStatus': actionlib_msgs.msg.GoalStatusConstructor,
    'actionlib_msgs/msg/GoalStatusArray': actionlib_msgs.msg.GoalStatusArrayConstructor,
    'builtin_interfaces/msg/Duration': builtin_interfaces.msg.DurationConstructor,
    'builtin_interfaces/msg/Time': builtin_interfaces.msg.TimeConstructor,
    'composition_interfaces/srv/ListNodes_Request': composition_interfaces.srv.ListNodes_RequestConstructor,
    'composition_interfaces/srv/ListNodes_Response': composition_interfaces.srv.ListNodes_ResponseConstructor,
    'composition_interfaces/srv/LoadNode_Request': composition_interfaces.srv.LoadNode_RequestConstructor,
    'composition_interfaces/srv/LoadNode_Response': composition_interfaces.srv.LoadNode_ResponseConstructor,
    'composition_interfaces/srv/UnloadNode_Request': composition_interfaces.srv.UnloadNode_RequestConstructor,
    'composition_interfaces/srv/UnloadNode_Response': composition_interfaces.srv.UnloadNode_ResponseConstructor,
    'diagnostic_msgs/msg/DiagnosticArray': diagnostic_msgs.msg.DiagnosticArrayConstructor,
    'diagnostic_msgs/msg/DiagnosticStatus': diagnostic_msgs.msg.DiagnosticStatusConstructor,
    'diagnostic_msgs/msg/KeyValue': diagnostic_msgs.msg.KeyValueConstructor,
    'diagnostic_msgs/srv/AddDiagnostics_Request': diagnostic_msgs.srv.AddDiagnostics_RequestConstructor,
    'diagnostic_msgs/srv/AddDiagnostics_Response': diagnostic_msgs.srv.AddDiagnostics_ResponseConstructor,
    'diagnostic_msgs/srv/SelfTest_Request': diagnostic_msgs.srv.SelfTest_RequestConstructor,
    'diagnostic_msgs/srv/SelfTest_Response': diagnostic_msgs.srv.SelfTest_ResponseConstructor,
    'example_interfaces/action/Fibonacci_Feedback': example_interfaces.action.Fibonacci_FeedbackConstructor,
    'example_interfaces/action/Fibonacci_FeedbackMessage': example_interfaces.action.Fibonacci_FeedbackMessageConstructor,
    'example_interfaces/action/Fibonacci_GetResult_Request': example_interfaces.action.Fibonacci_GetResult_RequestConstructor,
    'example_interfaces/action/Fibonacci_GetResult_Response': example_interfaces.action.Fibonacci_GetResult_ResponseConstructor,
    'example_interfaces/action/Fibonacci_Goal': example_interfaces.action.Fibonacci_GoalConstructor,
    'example_interfaces/action/Fibonacci_Result': example_interfaces.action.Fibonacci_ResultConstructor,
    'example_interfaces/action/Fibonacci_SendGoal_Request': example_interfaces.action.Fibonacci_SendGoal_RequestConstructor,
    'example_interfaces/action/Fibonacci_SendGoal_Response': example_interfaces.action.Fibonacci_SendGoal_ResponseConstructor,
    'example_interfaces/msg/Bool': example_interfaces.msg.BoolConstructor,
    'example_interfaces/msg/Byte': example_interfaces.msg.ByteConstructor,
    'example_interfaces/msg/ByteMultiArray': example_interfaces.msg.ByteMultiArrayConstructor,
    'example_interfaces/msg/Char': example_interfaces.msg.CharConstructor,
    'example_interfaces/msg/Empty': example_interfaces.msg.EmptyConstructor,
    'example_interfaces/msg/Float32': example_interfaces.msg.Float32Constructor,
    'example_interfaces/msg/Float32MultiArray': example_interfaces.msg.Float32MultiArrayConstructor,
    'example_interfaces/msg/Float64': example_interfaces.msg.Float64Constructor,
    'example_interfaces/msg/Float64MultiArray': example_interfaces.msg.Float64MultiArrayConstructor,
    'example_interfaces/msg/Int16': example_interfaces.msg.Int16Constructor,
    'example_interfaces/msg/Int16MultiArray': example_interfaces.msg.Int16MultiArrayConstructor,
    'example_interfaces/msg/Int32': example_interfaces.msg.Int32Constructor,
    'example_interfaces/msg/Int32MultiArray': example_interfaces.msg.Int32MultiArrayConstructor,
    'example_interfaces/msg/Int64': example_interfaces.msg.Int64Constructor,
    'example_interfaces/msg/Int64MultiArray': example_interfaces.msg.Int64MultiArrayConstructor,
    'example_interfaces/msg/Int8': example_interfaces.msg.Int8Constructor,
    'example_interfaces/msg/Int8MultiArray': example_interfaces.msg.Int8MultiArrayConstructor,
    'example_interfaces/msg/MultiArrayDimension': example_interfaces.msg.MultiArrayDimensionConstructor,
    'example_interfaces/msg/MultiArrayLayout': example_interfaces.msg.MultiArrayLayoutConstructor,
    'example_interfaces/msg/String': example_interfaces.msg.StringConstructor,
    'example_interfaces/msg/UInt16': example_interfaces.msg.UInt16Constructor,
    'example_interfaces/msg/UInt16MultiArray': example_interfaces.msg.UInt16MultiArrayConstructor,
    'example_interfaces/msg/UInt32': example_interfaces.msg.UInt32Constructor,
    'example_interfaces/msg/UInt32MultiArray': example_interfaces.msg.UInt32MultiArrayConstructor,
    'example_interfaces/msg/UInt64': example_interfaces.msg.UInt64Constructor,
    'example_interfaces/msg/UInt64MultiArray': example_interfaces.msg.UInt64MultiArrayConstructor,
    'example_interfaces/msg/UInt8': example_interfaces.msg.UInt8Constructor,
    'example_interfaces/msg/UInt8MultiArray': example_interfaces.msg.UInt8MultiArrayConstructor,
    'example_interfaces/msg/WString': example_interfaces.msg.WStringConstructor,
    'example_interfaces/srv/AddTwoInts_Request': example_interfaces.srv.AddTwoInts_RequestConstructor,
    'example_interfaces/srv/AddTwoInts_Response': example_interfaces.srv.AddTwoInts_ResponseConstructor,
    'example_interfaces/srv/SetBool_Request': example_interfaces.srv.SetBool_RequestConstructor,
    'example_interfaces/srv/SetBool_Response': example_interfaces.srv.SetBool_ResponseConstructor,
    'example_interfaces/srv/Trigger_Request': example_interfaces.srv.Trigger_RequestConstructor,
    'example_interfaces/srv/Trigger_Response': example_interfaces.srv.Trigger_ResponseConstructor,
    'gazebo_msgs/msg/ContactState': gazebo_msgs.msg.ContactStateConstructor,
    'gazebo_msgs/msg/ContactsState': gazebo_msgs.msg.ContactsStateConstructor,
    'gazebo_msgs/msg/EntityState': gazebo_msgs.msg.EntityStateConstructor,
    'gazebo_msgs/msg/LinkState': gazebo_msgs.msg.LinkStateConstructor,
    'gazebo_msgs/msg/LinkStates': gazebo_msgs.msg.LinkStatesConstructor,
    'gazebo_msgs/msg/ModelState': gazebo_msgs.msg.ModelStateConstructor,
    'gazebo_msgs/msg/ModelStates': gazebo_msgs.msg.ModelStatesConstructor,
    'gazebo_msgs/msg/ODEJointProperties': gazebo_msgs.msg.ODEJointPropertiesConstructor,
    'gazebo_msgs/msg/ODEPhysics': gazebo_msgs.msg.ODEPhysicsConstructor,
    'gazebo_msgs/msg/PerformanceMetrics': gazebo_msgs.msg.PerformanceMetricsConstructor,
    'gazebo_msgs/msg/SensorPerformanceMetric': gazebo_msgs.msg.SensorPerformanceMetricConstructor,
    'gazebo_msgs/msg/WorldState': gazebo_msgs.msg.WorldStateConstructor,
    'gazebo_msgs/srv/ApplyBodyWrench_Request': gazebo_msgs.srv.ApplyBodyWrench_RequestConstructor,
    'gazebo_msgs/srv/ApplyBodyWrench_Response': gazebo_msgs.srv.ApplyBodyWrench_ResponseConstructor,
    'gazebo_msgs/srv/ApplyJointEffort_Request': gazebo_msgs.srv.ApplyJointEffort_RequestConstructor,
    'gazebo_msgs/srv/ApplyJointEffort_Response': gazebo_msgs.srv.ApplyJointEffort_ResponseConstructor,
    'gazebo_msgs/srv/ApplyLinkWrench_Request': gazebo_msgs.srv.ApplyLinkWrench_RequestConstructor,
    'gazebo_msgs/srv/ApplyLinkWrench_Response': gazebo_msgs.srv.ApplyLinkWrench_ResponseConstructor,
    'gazebo_msgs/srv/BodyRequest_Request': gazebo_msgs.srv.BodyRequest_RequestConstructor,
    'gazebo_msgs/srv/BodyRequest_Response': gazebo_msgs.srv.BodyRequest_ResponseConstructor,
    'gazebo_msgs/srv/DeleteEntity_Request': gazebo_msgs.srv.DeleteEntity_RequestConstructor,
    'gazebo_msgs/srv/DeleteEntity_Response': gazebo_msgs.srv.DeleteEntity_ResponseConstructor,
    'gazebo_msgs/srv/DeleteLight_Request': gazebo_msgs.srv.DeleteLight_RequestConstructor,
    'gazebo_msgs/srv/DeleteLight_Response': gazebo_msgs.srv.DeleteLight_ResponseConstructor,
    'gazebo_msgs/srv/DeleteModel_Request': gazebo_msgs.srv.DeleteModel_RequestConstructor,
    'gazebo_msgs/srv/DeleteModel_Response': gazebo_msgs.srv.DeleteModel_ResponseConstructor,
    'gazebo_msgs/srv/GetEntityState_Request': gazebo_msgs.srv.GetEntityState_RequestConstructor,
    'gazebo_msgs/srv/GetEntityState_Response': gazebo_msgs.srv.GetEntityState_ResponseConstructor,
    'gazebo_msgs/srv/GetJointProperties_Request': gazebo_msgs.srv.GetJointProperties_RequestConstructor,
    'gazebo_msgs/srv/GetJointProperties_Response': gazebo_msgs.srv.GetJointProperties_ResponseConstructor,
    'gazebo_msgs/srv/GetLightProperties_Request': gazebo_msgs.srv.GetLightProperties_RequestConstructor,
    'gazebo_msgs/srv/GetLightProperties_Response': gazebo_msgs.srv.GetLightProperties_ResponseConstructor,
    'gazebo_msgs/srv/GetLinkProperties_Request': gazebo_msgs.srv.GetLinkProperties_RequestConstructor,
    'gazebo_msgs/srv/GetLinkProperties_Response': gazebo_msgs.srv.GetLinkProperties_ResponseConstructor,
    'gazebo_msgs/srv/GetLinkState_Request': gazebo_msgs.srv.GetLinkState_RequestConstructor,
    'gazebo_msgs/srv/GetLinkState_Response': gazebo_msgs.srv.GetLinkState_ResponseConstructor,
    'gazebo_msgs/srv/GetModelList_Request': gazebo_msgs.srv.GetModelList_RequestConstructor,
    'gazebo_msgs/srv/GetModelList_Response': gazebo_msgs.srv.GetModelList_ResponseConstructor,
    'gazebo_msgs/srv/GetModelProperties_Request': gazebo_msgs.srv.GetModelProperties_RequestConstructor,
    'gazebo_msgs/srv/GetModelProperties_Response': gazebo_msgs.srv.GetModelProperties_ResponseConstructor,
    'gazebo_msgs/srv/GetModelState_Request': gazebo_msgs.srv.GetModelState_RequestConstructor,
    'gazebo_msgs/srv/GetModelState_Response': gazebo_msgs.srv.GetModelState_ResponseConstructor,
    'gazebo_msgs/srv/GetPhysicsProperties_Request': gazebo_msgs.srv.GetPhysicsProperties_RequestConstructor,
    'gazebo_msgs/srv/GetPhysicsProperties_Response': gazebo_msgs.srv.GetPhysicsProperties_ResponseConstructor,
    'gazebo_msgs/srv/GetWorldProperties_Request': gazebo_msgs.srv.GetWorldProperties_RequestConstructor,
    'gazebo_msgs/srv/GetWorldProperties_Response': gazebo_msgs.srv.GetWorldProperties_ResponseConstructor,
    'gazebo_msgs/srv/JointRequest_Request': gazebo_msgs.srv.JointRequest_RequestConstructor,
    'gazebo_msgs/srv/JointRequest_Response': gazebo_msgs.srv.JointRequest_ResponseConstructor,
    'gazebo_msgs/srv/LinkRequest_Request': gazebo_msgs.srv.LinkRequest_RequestConstructor,
    'gazebo_msgs/srv/LinkRequest_Response': gazebo_msgs.srv.LinkRequest_ResponseConstructor,
    'gazebo_msgs/srv/SetEntityState_Request': gazebo_msgs.srv.SetEntityState_RequestConstructor,
    'gazebo_msgs/srv/SetEntityState_Response': gazebo_msgs.srv.SetEntityState_ResponseConstructor,
    'gazebo_msgs/srv/SetJointProperties_Request': gazebo_msgs.srv.SetJointProperties_RequestConstructor,
    'gazebo_msgs/srv/SetJointProperties_Response': gazebo_msgs.srv.SetJointProperties_ResponseConstructor,
    'gazebo_msgs/srv/SetJointTrajectory_Request': gazebo_msgs.srv.SetJointTrajectory_RequestConstructor,
    'gazebo_msgs/srv/SetJointTrajectory_Response': gazebo_msgs.srv.SetJointTrajectory_ResponseConstructor,
    'gazebo_msgs/srv/SetLightProperties_Request': gazebo_msgs.srv.SetLightProperties_RequestConstructor,
    'gazebo_msgs/srv/SetLightProperties_Response': gazebo_msgs.srv.SetLightProperties_ResponseConstructor,
    'gazebo_msgs/srv/SetLinkProperties_Request': gazebo_msgs.srv.SetLinkProperties_RequestConstructor,
    'gazebo_msgs/srv/SetLinkProperties_Response': gazebo_msgs.srv.SetLinkProperties_ResponseConstructor,
    'gazebo_msgs/srv/SetLinkState_Request': gazebo_msgs.srv.SetLinkState_RequestConstructor,
    'gazebo_msgs/srv/SetLinkState_Response': gazebo_msgs.srv.SetLinkState_ResponseConstructor,
    'gazebo_msgs/srv/SetModelConfiguration_Request': gazebo_msgs.srv.SetModelConfiguration_RequestConstructor,
    'gazebo_msgs/srv/SetModelConfiguration_Response': gazebo_msgs.srv.SetModelConfiguration_ResponseConstructor,
    'gazebo_msgs/srv/SetModelState_Request': gazebo_msgs.srv.SetModelState_RequestConstructor,
    'gazebo_msgs/srv/SetModelState_Response': gazebo_msgs.srv.SetModelState_ResponseConstructor,
    'gazebo_msgs/srv/SetPhysicsProperties_Request': gazebo_msgs.srv.SetPhysicsProperties_RequestConstructor,
    'gazebo_msgs/srv/SetPhysicsProperties_Response': gazebo_msgs.srv.SetPhysicsProperties_ResponseConstructor,
    'gazebo_msgs/srv/SpawnEntity_Request': gazebo_msgs.srv.SpawnEntity_RequestConstructor,
    'gazebo_msgs/srv/SpawnEntity_Response': gazebo_msgs.srv.SpawnEntity_ResponseConstructor,
    'gazebo_msgs/srv/SpawnModel_Request': gazebo_msgs.srv.SpawnModel_RequestConstructor,
    'gazebo_msgs/srv/SpawnModel_Response': gazebo_msgs.srv.SpawnModel_ResponseConstructor,
    'geometry_msgs/msg/Accel': geometry_msgs.msg.AccelConstructor,
    'geometry_msgs/msg/AccelStamped': geometry_msgs.msg.AccelStampedConstructor,
    'geometry_msgs/msg/AccelWithCovariance': geometry_msgs.msg.AccelWithCovarianceConstructor,
    'geometry_msgs/msg/AccelWithCovarianceStamped': geometry_msgs.msg.AccelWithCovarianceStampedConstructor,
    'geometry_msgs/msg/Inertia': geometry_msgs.msg.InertiaConstructor,
    'geometry_msgs/msg/InertiaStamped': geometry_msgs.msg.InertiaStampedConstructor,
    'geometry_msgs/msg/Point': geometry_msgs.msg.PointConstructor,
    'geometry_msgs/msg/Point32': geometry_msgs.msg.Point32Constructor,
    'geometry_msgs/msg/PointStamped': geometry_msgs.msg.PointStampedConstructor,
    'geometry_msgs/msg/Polygon': geometry_msgs.msg.PolygonConstructor,
    'geometry_msgs/msg/PolygonStamped': geometry_msgs.msg.PolygonStampedConstructor,
    'geometry_msgs/msg/Pose': geometry_msgs.msg.PoseConstructor,
    'geometry_msgs/msg/Pose2D': geometry_msgs.msg.Pose2DConstructor,
    'geometry_msgs/msg/PoseArray': geometry_msgs.msg.PoseArrayConstructor,
    'geometry_msgs/msg/PoseStamped': geometry_msgs.msg.PoseStampedConstructor,
    'geometry_msgs/msg/PoseWithCovariance': geometry_msgs.msg.PoseWithCovarianceConstructor,
    'geometry_msgs/msg/PoseWithCovarianceStamped': geometry_msgs.msg.PoseWithCovarianceStampedConstructor,
    'geometry_msgs/msg/Quaternion': geometry_msgs.msg.QuaternionConstructor,
    'geometry_msgs/msg/QuaternionStamped': geometry_msgs.msg.QuaternionStampedConstructor,
    'geometry_msgs/msg/Transform': geometry_msgs.msg.TransformConstructor,
    'geometry_msgs/msg/TransformStamped': geometry_msgs.msg.TransformStampedConstructor,
    'geometry_msgs/msg/Twist': geometry_msgs.msg.TwistConstructor,
    'geometry_msgs/msg/TwistStamped': geometry_msgs.msg.TwistStampedConstructor,
    'geometry_msgs/msg/TwistWithCovariance': geometry_msgs.msg.TwistWithCovarianceConstructor,
    'geometry_msgs/msg/TwistWithCovarianceStamped': geometry_msgs.msg.TwistWithCovarianceStampedConstructor,
    'geometry_msgs/msg/Vector3': geometry_msgs.msg.Vector3Constructor,
    'geometry_msgs/msg/Vector3Stamped': geometry_msgs.msg.Vector3StampedConstructor,
    'geometry_msgs/msg/Wrench': geometry_msgs.msg.WrenchConstructor,
    'geometry_msgs/msg/WrenchStamped': geometry_msgs.msg.WrenchStampedConstructor,
    'libstatistics_collector/msg/DummyMessage': libstatistics_collector.msg.DummyMessageConstructor,
    'lifecycle_msgs/msg/State': lifecycle_msgs.msg.StateConstructor,
    'lifecycle_msgs/msg/Transition': lifecycle_msgs.msg.TransitionConstructor,
    'lifecycle_msgs/msg/TransitionDescription': lifecycle_msgs.msg.TransitionDescriptionConstructor,
    'lifecycle_msgs/msg/TransitionEvent': lifecycle_msgs.msg.TransitionEventConstructor,
    'lifecycle_msgs/srv/ChangeState_Request': lifecycle_msgs.srv.ChangeState_RequestConstructor,
    'lifecycle_msgs/srv/ChangeState_Response': lifecycle_msgs.srv.ChangeState_ResponseConstructor,
    'lifecycle_msgs/srv/GetAvailableStates_Request': lifecycle_msgs.srv.GetAvailableStates_RequestConstructor,
    'lifecycle_msgs/srv/GetAvailableStates_Response': lifecycle_msgs.srv.GetAvailableStates_ResponseConstructor,
    'lifecycle_msgs/srv/GetAvailableTransitions_Request': lifecycle_msgs.srv.GetAvailableTransitions_RequestConstructor,
    'lifecycle_msgs/srv/GetAvailableTransitions_Response': lifecycle_msgs.srv.GetAvailableTransitions_ResponseConstructor,
    'lifecycle_msgs/srv/GetState_Request': lifecycle_msgs.srv.GetState_RequestConstructor,
    'lifecycle_msgs/srv/GetState_Response': lifecycle_msgs.srv.GetState_ResponseConstructor,
    'logging_demo/srv/ConfigLogger_Request': logging_demo.srv.ConfigLogger_RequestConstructor,
    'logging_demo/srv/ConfigLogger_Response': logging_demo.srv.ConfigLogger_ResponseConstructor,
    'map_msgs/msg/OccupancyGridUpdate': map_msgs.msg.OccupancyGridUpdateConstructor,
    'map_msgs/msg/PointCloud2Update': map_msgs.msg.PointCloud2UpdateConstructor,
    'map_msgs/msg/ProjectedMap': map_msgs.msg.ProjectedMapConstructor,
    'map_msgs/msg/ProjectedMapInfo': map_msgs.msg.ProjectedMapInfoConstructor,
    'map_msgs/srv/GetMapROI_Request': map_msgs.srv.GetMapROI_RequestConstructor,
    'map_msgs/srv/GetMapROI_Response': map_msgs.srv.GetMapROI_ResponseConstructor,
    'map_msgs/srv/GetPointMapROI_Request': map_msgs.srv.GetPointMapROI_RequestConstructor,
    'map_msgs/srv/GetPointMapROI_Response': map_msgs.srv.GetPointMapROI_ResponseConstructor,
    'map_msgs/srv/GetPointMap_Request': map_msgs.srv.GetPointMap_RequestConstructor,
    'map_msgs/srv/GetPointMap_Response': map_msgs.srv.GetPointMap_ResponseConstructor,
    'map_msgs/srv/ProjectedMapsInfo_Request': map_msgs.srv.ProjectedMapsInfo_RequestConstructor,
    'map_msgs/srv/ProjectedMapsInfo_Response': map_msgs.srv.ProjectedMapsInfo_ResponseConstructor,
    'map_msgs/srv/SaveMap_Request': map_msgs.srv.SaveMap_RequestConstructor,
    'map_msgs/srv/SaveMap_Response': map_msgs.srv.SaveMap_ResponseConstructor,
    'map_msgs/srv/SetMapProjections_Request': map_msgs.srv.SetMapProjections_RequestConstructor,
    'map_msgs/srv/SetMapProjections_Response': map_msgs.srv.SetMapProjections_ResponseConstructor,
    'nav_msgs/msg/GridCells': nav_msgs.msg.GridCellsConstructor,
    'nav_msgs/msg/MapMetaData': nav_msgs.msg.MapMetaDataConstructor,
    'nav_msgs/msg/OccupancyGrid': nav_msgs.msg.OccupancyGridConstructor,
    'nav_msgs/msg/Odometry': nav_msgs.msg.OdometryConstructor,
    'nav_msgs/msg/Path': nav_msgs.msg.PathConstructor,
    'nav_msgs/srv/GetMap_Request': nav_msgs.srv.GetMap_RequestConstructor,
    'nav_msgs/srv/GetMap_Response': nav_msgs.srv.GetMap_ResponseConstructor,
    'nav_msgs/srv/GetPlan_Request': nav_msgs.srv.GetPlan_RequestConstructor,
    'nav_msgs/srv/GetPlan_Response': nav_msgs.srv.GetPlan_ResponseConstructor,
    'nav_msgs/srv/SetMap_Request': nav_msgs.srv.SetMap_RequestConstructor,
    'nav_msgs/srv/SetMap_Response': nav_msgs.srv.SetMap_ResponseConstructor,
    'pcl_msgs/msg/ModelCoefficients': pcl_msgs.msg.ModelCoefficientsConstructor,
    'pcl_msgs/msg/PointIndices': pcl_msgs.msg.PointIndicesConstructor,
    'pcl_msgs/msg/PolygonMesh': pcl_msgs.msg.PolygonMeshConstructor,
    'pcl_msgs/msg/Vertices': pcl_msgs.msg.VerticesConstructor,
    'pcl_msgs/srv/UpdateFilename_Request': pcl_msgs.srv.UpdateFilename_RequestConstructor,
    'pcl_msgs/srv/UpdateFilename_Response': pcl_msgs.srv.UpdateFilename_ResponseConstructor,
    'pendulum_msgs/msg/JointCommand': pendulum_msgs.msg.JointCommandConstructor,
    'pendulum_msgs/msg/JointState': pendulum_msgs.msg.JointStateConstructor,
    'pendulum_msgs/msg/RttestResults': pendulum_msgs.msg.RttestResultsConstructor,
    'rcl_interfaces/msg/FloatingPointRange': rcl_interfaces.msg.FloatingPointRangeConstructor,
    'rcl_interfaces/msg/IntegerRange': rcl_interfaces.msg.IntegerRangeConstructor,
    'rcl_interfaces/msg/ListParametersResult': rcl_interfaces.msg.ListParametersResultConstructor,
    'rcl_interfaces/msg/Log': rcl_interfaces.msg.LogConstructor,
    'rcl_interfaces/msg/Parameter': rcl_interfaces.msg.ParameterConstructor,
    'rcl_interfaces/msg/ParameterDescriptor': rcl_interfaces.msg.ParameterDescriptorConstructor,
    'rcl_interfaces/msg/ParameterEvent': rcl_interfaces.msg.ParameterEventConstructor,
    'rcl_interfaces/msg/ParameterEventDescriptors': rcl_interfaces.msg.ParameterEventDescriptorsConstructor,
    'rcl_interfaces/msg/ParameterType': rcl_interfaces.msg.ParameterTypeConstructor,
    'rcl_interfaces/msg/ParameterValue': rcl_interfaces.msg.ParameterValueConstructor,
    'rcl_interfaces/msg/SetParametersResult': rcl_interfaces.msg.SetParametersResultConstructor,
    'rcl_interfaces/srv/DescribeParameters_Request': rcl_interfaces.srv.DescribeParameters_RequestConstructor,
    'rcl_interfaces/srv/DescribeParameters_Response': rcl_interfaces.srv.DescribeParameters_ResponseConstructor,
    'rcl_interfaces/srv/GetParameterTypes_Request': rcl_interfaces.srv.GetParameterTypes_RequestConstructor,
    'rcl_interfaces/srv/GetParameterTypes_Response': rcl_interfaces.srv.GetParameterTypes_ResponseConstructor,
    'rcl_interfaces/srv/GetParameters_Request': rcl_interfaces.srv.GetParameters_RequestConstructor,
    'rcl_interfaces/srv/GetParameters_Response': rcl_interfaces.srv.GetParameters_ResponseConstructor,
    'rcl_interfaces/srv/ListParameters_Request': rcl_interfaces.srv.ListParameters_RequestConstructor,
    'rcl_interfaces/srv/ListParameters_Response': rcl_interfaces.srv.ListParameters_ResponseConstructor,
    'rcl_interfaces/srv/SetParametersAtomically_Request': rcl_interfaces.srv.SetParametersAtomically_RequestConstructor,
    'rcl_interfaces/srv/SetParametersAtomically_Response': rcl_interfaces.srv.SetParametersAtomically_ResponseConstructor,
    'rcl_interfaces/srv/SetParameters_Request': rcl_interfaces.srv.SetParameters_RequestConstructor,
    'rcl_interfaces/srv/SetParameters_Response': rcl_interfaces.srv.SetParameters_ResponseConstructor,
    'rmw_dds_common/msg/Gid': rmw_dds_common.msg.GidConstructor,
    'rmw_dds_common/msg/NodeEntitiesInfo': rmw_dds_common.msg.NodeEntitiesInfoConstructor,
    'rmw_dds_common/msg/ParticipantEntitiesInfo': rmw_dds_common.msg.ParticipantEntitiesInfoConstructor,
    'rosgraph_msgs/msg/Clock': rosgraph_msgs.msg.ClockConstructor,
    'sensor_msgs/msg/BatteryState': sensor_msgs.msg.BatteryStateConstructor,
    'sensor_msgs/msg/CameraInfo': sensor_msgs.msg.CameraInfoConstructor,
    'sensor_msgs/msg/ChannelFloat32': sensor_msgs.msg.ChannelFloat32Constructor,
    'sensor_msgs/msg/CompressedImage': sensor_msgs.msg.CompressedImageConstructor,
    'sensor_msgs/msg/FluidPressure': sensor_msgs.msg.FluidPressureConstructor,
    'sensor_msgs/msg/Illuminance': sensor_msgs.msg.IlluminanceConstructor,
    'sensor_msgs/msg/Image': sensor_msgs.msg.ImageConstructor,
    'sensor_msgs/msg/Imu': sensor_msgs.msg.ImuConstructor,
    'sensor_msgs/msg/JointState': sensor_msgs.msg.JointStateConstructor,
    'sensor_msgs/msg/Joy': sensor_msgs.msg.JoyConstructor,
    'sensor_msgs/msg/JoyFeedback': sensor_msgs.msg.JoyFeedbackConstructor,
    'sensor_msgs/msg/JoyFeedbackArray': sensor_msgs.msg.JoyFeedbackArrayConstructor,
    'sensor_msgs/msg/LaserEcho': sensor_msgs.msg.LaserEchoConstructor,
    'sensor_msgs/msg/LaserScan': sensor_msgs.msg.LaserScanConstructor,
    'sensor_msgs/msg/MagneticField': sensor_msgs.msg.MagneticFieldConstructor,
    'sensor_msgs/msg/MultiDOFJointState': sensor_msgs.msg.MultiDOFJointStateConstructor,
    'sensor_msgs/msg/MultiEchoLaserScan': sensor_msgs.msg.MultiEchoLaserScanConstructor,
    'sensor_msgs/msg/NavSatFix': sensor_msgs.msg.NavSatFixConstructor,
    'sensor_msgs/msg/NavSatStatus': sensor_msgs.msg.NavSatStatusConstructor,
    'sensor_msgs/msg/PointCloud': sensor_msgs.msg.PointCloudConstructor,
    'sensor_msgs/msg/PointCloud2': sensor_msgs.msg.PointCloud2Constructor,
    'sensor_msgs/msg/PointField': sensor_msgs.msg.PointFieldConstructor,
    'sensor_msgs/msg/Range': sensor_msgs.msg.RangeConstructor,
    'sensor_msgs/msg/RegionOfInterest': sensor_msgs.msg.RegionOfInterestConstructor,
    'sensor_msgs/msg/RelativeHumidity': sensor_msgs.msg.RelativeHumidityConstructor,
    'sensor_msgs/msg/Temperature': sensor_msgs.msg.TemperatureConstructor,
    'sensor_msgs/msg/TimeReference': sensor_msgs.msg.TimeReferenceConstructor,
    'sensor_msgs/srv/SetCameraInfo_Request': sensor_msgs.srv.SetCameraInfo_RequestConstructor,
    'sensor_msgs/srv/SetCameraInfo_Response': sensor_msgs.srv.SetCameraInfo_ResponseConstructor,
    'shape_msgs/msg/Mesh': shape_msgs.msg.MeshConstructor,
    'shape_msgs/msg/MeshTriangle': shape_msgs.msg.MeshTriangleConstructor,
    'shape_msgs/msg/Plane': shape_msgs.msg.PlaneConstructor,
    'shape_msgs/msg/SolidPrimitive': shape_msgs.msg.SolidPrimitiveConstructor,
    'statistics_msgs/msg/MetricsMessage': statistics_msgs.msg.MetricsMessageConstructor,
    'statistics_msgs/msg/StatisticDataPoint': statistics_msgs.msg.StatisticDataPointConstructor,
    'statistics_msgs/msg/StatisticDataType': statistics_msgs.msg.StatisticDataTypeConstructor,
    'std_msgs/msg/Bool': std_msgs.msg.BoolConstructor,
    'std_msgs/msg/Byte': std_msgs.msg.ByteConstructor,
    'std_msgs/msg/ByteMultiArray': std_msgs.msg.ByteMultiArrayConstructor,
    'std_msgs/msg/Char': std_msgs.msg.CharConstructor,
    'std_msgs/msg/ColorRGBA': std_msgs.msg.ColorRGBAConstructor,
    'std_msgs/msg/Empty': std_msgs.msg.EmptyConstructor,
    'std_msgs/msg/Float32': std_msgs.msg.Float32Constructor,
    'std_msgs/msg/Float32MultiArray': std_msgs.msg.Float32MultiArrayConstructor,
    'std_msgs/msg/Float64': std_msgs.msg.Float64Constructor,
    'std_msgs/msg/Float64MultiArray': std_msgs.msg.Float64MultiArrayConstructor,
    'std_msgs/msg/Header': std_msgs.msg.HeaderConstructor,
    'std_msgs/msg/Int16': std_msgs.msg.Int16Constructor,
    'std_msgs/msg/Int16MultiArray': std_msgs.msg.Int16MultiArrayConstructor,
    'std_msgs/msg/Int32': std_msgs.msg.Int32Constructor,
    'std_msgs/msg/Int32MultiArray': std_msgs.msg.Int32MultiArrayConstructor,
    'std_msgs/msg/Int64': std_msgs.msg.Int64Constructor,
    'std_msgs/msg/Int64MultiArray': std_msgs.msg.Int64MultiArrayConstructor,
    'std_msgs/msg/Int8': std_msgs.msg.Int8Constructor,
    'std_msgs/msg/Int8MultiArray': std_msgs.msg.Int8MultiArrayConstructor,
    'std_msgs/msg/MultiArrayDimension': std_msgs.msg.MultiArrayDimensionConstructor,
    'std_msgs/msg/MultiArrayLayout': std_msgs.msg.MultiArrayLayoutConstructor,
    'std_msgs/msg/String': std_msgs.msg.StringConstructor,
    'std_msgs/msg/UInt16': std_msgs.msg.UInt16Constructor,
    'std_msgs/msg/UInt16MultiArray': std_msgs.msg.UInt16MultiArrayConstructor,
    'std_msgs/msg/UInt32': std_msgs.msg.UInt32Constructor,
    'std_msgs/msg/UInt32MultiArray': std_msgs.msg.UInt32MultiArrayConstructor,
    'std_msgs/msg/UInt64': std_msgs.msg.UInt64Constructor,
    'std_msgs/msg/UInt64MultiArray': std_msgs.msg.UInt64MultiArrayConstructor,
    'std_msgs/msg/UInt8': std_msgs.msg.UInt8Constructor,
    'std_msgs/msg/UInt8MultiArray': std_msgs.msg.UInt8MultiArrayConstructor,
    'std_srvs/srv/Empty_Request': std_srvs.srv.Empty_RequestConstructor,
    'std_srvs/srv/Empty_Response': std_srvs.srv.Empty_ResponseConstructor,
    'std_srvs/srv/SetBool_Request': std_srvs.srv.SetBool_RequestConstructor,
    'std_srvs/srv/SetBool_Response': std_srvs.srv.SetBool_ResponseConstructor,
    'std_srvs/srv/Trigger_Request': std_srvs.srv.Trigger_RequestConstructor,
    'std_srvs/srv/Trigger_Response': std_srvs.srv.Trigger_ResponseConstructor,
    'stereo_msgs/msg/DisparityImage': stereo_msgs.msg.DisparityImageConstructor,
    'tf2_msgs/action/LookupTransform_Feedback': tf2_msgs.action.LookupTransform_FeedbackConstructor,
    'tf2_msgs/action/LookupTransform_FeedbackMessage': tf2_msgs.action.LookupTransform_FeedbackMessageConstructor,
    'tf2_msgs/action/LookupTransform_GetResult_Request': tf2_msgs.action.LookupTransform_GetResult_RequestConstructor,
    'tf2_msgs/action/LookupTransform_GetResult_Response': tf2_msgs.action.LookupTransform_GetResult_ResponseConstructor,
    'tf2_msgs/action/LookupTransform_Goal': tf2_msgs.action.LookupTransform_GoalConstructor,
    'tf2_msgs/action/LookupTransform_Result': tf2_msgs.action.LookupTransform_ResultConstructor,
    'tf2_msgs/action/LookupTransform_SendGoal_Request': tf2_msgs.action.LookupTransform_SendGoal_RequestConstructor,
    'tf2_msgs/action/LookupTransform_SendGoal_Response': tf2_msgs.action.LookupTransform_SendGoal_ResponseConstructor,
    'tf2_msgs/msg/TF2Error': tf2_msgs.msg.TF2ErrorConstructor,
    'tf2_msgs/msg/TFMessage': tf2_msgs.msg.TFMessageConstructor,
    'tf2_msgs/srv/FrameGraph_Request': tf2_msgs.srv.FrameGraph_RequestConstructor,
    'tf2_msgs/srv/FrameGraph_Response': tf2_msgs.srv.FrameGraph_ResponseConstructor,
    'trajectory_msgs/msg/JointTrajectory': trajectory_msgs.msg.JointTrajectoryConstructor,
    'trajectory_msgs/msg/JointTrajectoryPoint': trajectory_msgs.msg.JointTrajectoryPointConstructor,
    'trajectory_msgs/msg/MultiDOFJointTrajectory': trajectory_msgs.msg.MultiDOFJointTrajectoryConstructor,
    'trajectory_msgs/msg/MultiDOFJointTrajectoryPoint': trajectory_msgs.msg.MultiDOFJointTrajectoryPointConstructor,
    'turtlesim/action/RotateAbsolute_Feedback': turtlesim.action.RotateAbsolute_FeedbackConstructor,
    'turtlesim/action/RotateAbsolute_FeedbackMessage': turtlesim.action.RotateAbsolute_FeedbackMessageConstructor,
    'turtlesim/action/RotateAbsolute_GetResult_Request': turtlesim.action.RotateAbsolute_GetResult_RequestConstructor,
    'turtlesim/action/RotateAbsolute_GetResult_Response': turtlesim.action.RotateAbsolute_GetResult_ResponseConstructor,
    'turtlesim/action/RotateAbsolute_Goal': turtlesim.action.RotateAbsolute_GoalConstructor,
    'turtlesim/action/RotateAbsolute_Result': turtlesim.action.RotateAbsolute_ResultConstructor,
    'turtlesim/action/RotateAbsolute_SendGoal_Request': turtlesim.action.RotateAbsolute_SendGoal_RequestConstructor,
    'turtlesim/action/RotateAbsolute_SendGoal_Response': turtlesim.action.RotateAbsolute_SendGoal_ResponseConstructor,
    'turtlesim/msg/Color': turtlesim.msg.ColorConstructor,
    'turtlesim/msg/Pose': turtlesim.msg.PoseConstructor,
    'turtlesim/srv/Kill_Request': turtlesim.srv.Kill_RequestConstructor,
    'turtlesim/srv/Kill_Response': turtlesim.srv.Kill_ResponseConstructor,
    'turtlesim/srv/SetPen_Request': turtlesim.srv.SetPen_RequestConstructor,
    'turtlesim/srv/SetPen_Response': turtlesim.srv.SetPen_ResponseConstructor,
    'turtlesim/srv/Spawn_Request': turtlesim.srv.Spawn_RequestConstructor,
    'turtlesim/srv/Spawn_Response': turtlesim.srv.Spawn_ResponseConstructor,
    'turtlesim/srv/TeleportAbsolute_Request': turtlesim.srv.TeleportAbsolute_RequestConstructor,
    'turtlesim/srv/TeleportAbsolute_Response': turtlesim.srv.TeleportAbsolute_ResponseConstructor,
    'turtlesim/srv/TeleportRelative_Request': turtlesim.srv.TeleportRelative_RequestConstructor,
    'turtlesim/srv/TeleportRelative_Response': turtlesim.srv.TeleportRelative_ResponseConstructor,
    'unique_identifier_msgs/msg/UUID': unique_identifier_msgs.msg.UUIDConstructor,
    'visualization_msgs/msg/ImageMarker': visualization_msgs.msg.ImageMarkerConstructor,
    'visualization_msgs/msg/InteractiveMarker': visualization_msgs.msg.InteractiveMarkerConstructor,
    'visualization_msgs/msg/InteractiveMarkerControl': visualization_msgs.msg.InteractiveMarkerControlConstructor,
    'visualization_msgs/msg/InteractiveMarkerFeedback': visualization_msgs.msg.InteractiveMarkerFeedbackConstructor,
    'visualization_msgs/msg/InteractiveMarkerInit': visualization_msgs.msg.InteractiveMarkerInitConstructor,
    'visualization_msgs/msg/InteractiveMarkerPose': visualization_msgs.msg.InteractiveMarkerPoseConstructor,
    'visualization_msgs/msg/InteractiveMarkerUpdate': visualization_msgs.msg.InteractiveMarkerUpdateConstructor,
    'visualization_msgs/msg/Marker': visualization_msgs.msg.MarkerConstructor,
    'visualization_msgs/msg/MarkerArray': visualization_msgs.msg.MarkerArrayConstructor,
    'visualization_msgs/msg/MenuEntry': visualization_msgs.msg.MenuEntryConstructor,
    'visualization_msgs/srv/GetInteractiveMarkers_Request': visualization_msgs.srv.GetInteractiveMarkers_RequestConstructor,
    'visualization_msgs/srv/GetInteractiveMarkers_Response': visualization_msgs.srv.GetInteractiveMarkers_ResponseConstructor,
  };
  type MessageConstructorType<T> = T extends MessageTypeClassName ? MessageTypeClassConstructorMap[T] : object;

  type ServicesMap = {
    'action_msgs/srv/CancelGoal': action_msgs.srv.CancelGoalConstructor,
    'composition_interfaces/srv/ListNodes': composition_interfaces.srv.ListNodesConstructor,
    'composition_interfaces/srv/LoadNode': composition_interfaces.srv.LoadNodeConstructor,
    'composition_interfaces/srv/UnloadNode': composition_interfaces.srv.UnloadNodeConstructor,
    'diagnostic_msgs/srv/AddDiagnostics': diagnostic_msgs.srv.AddDiagnosticsConstructor,
    'diagnostic_msgs/srv/SelfTest': diagnostic_msgs.srv.SelfTestConstructor,
    'example_interfaces/srv/AddTwoInts': example_interfaces.srv.AddTwoIntsConstructor,
    'example_interfaces/srv/SetBool': example_interfaces.srv.SetBoolConstructor,
    'example_interfaces/srv/Trigger': example_interfaces.srv.TriggerConstructor,
    'gazebo_msgs/srv/ApplyBodyWrench': gazebo_msgs.srv.ApplyBodyWrenchConstructor,
    'gazebo_msgs/srv/ApplyJointEffort': gazebo_msgs.srv.ApplyJointEffortConstructor,
    'gazebo_msgs/srv/ApplyLinkWrench': gazebo_msgs.srv.ApplyLinkWrenchConstructor,
    'gazebo_msgs/srv/BodyRequest': gazebo_msgs.srv.BodyRequestConstructor,
    'gazebo_msgs/srv/DeleteEntity': gazebo_msgs.srv.DeleteEntityConstructor,
    'gazebo_msgs/srv/DeleteLight': gazebo_msgs.srv.DeleteLightConstructor,
    'gazebo_msgs/srv/DeleteModel': gazebo_msgs.srv.DeleteModelConstructor,
    'gazebo_msgs/srv/GetEntityState': gazebo_msgs.srv.GetEntityStateConstructor,
    'gazebo_msgs/srv/GetJointProperties': gazebo_msgs.srv.GetJointPropertiesConstructor,
    'gazebo_msgs/srv/GetLightProperties': gazebo_msgs.srv.GetLightPropertiesConstructor,
    'gazebo_msgs/srv/GetLinkProperties': gazebo_msgs.srv.GetLinkPropertiesConstructor,
    'gazebo_msgs/srv/GetLinkState': gazebo_msgs.srv.GetLinkStateConstructor,
    'gazebo_msgs/srv/GetModelList': gazebo_msgs.srv.GetModelListConstructor,
    'gazebo_msgs/srv/GetModelProperties': gazebo_msgs.srv.GetModelPropertiesConstructor,
    'gazebo_msgs/srv/GetModelState': gazebo_msgs.srv.GetModelStateConstructor,
    'gazebo_msgs/srv/GetPhysicsProperties': gazebo_msgs.srv.GetPhysicsPropertiesConstructor,
    'gazebo_msgs/srv/GetWorldProperties': gazebo_msgs.srv.GetWorldPropertiesConstructor,
    'gazebo_msgs/srv/JointRequest': gazebo_msgs.srv.JointRequestConstructor,
    'gazebo_msgs/srv/LinkRequest': gazebo_msgs.srv.LinkRequestConstructor,
    'gazebo_msgs/srv/SetEntityState': gazebo_msgs.srv.SetEntityStateConstructor,
    'gazebo_msgs/srv/SetJointProperties': gazebo_msgs.srv.SetJointPropertiesConstructor,
    'gazebo_msgs/srv/SetJointTrajectory': gazebo_msgs.srv.SetJointTrajectoryConstructor,
    'gazebo_msgs/srv/SetLightProperties': gazebo_msgs.srv.SetLightPropertiesConstructor,
    'gazebo_msgs/srv/SetLinkProperties': gazebo_msgs.srv.SetLinkPropertiesConstructor,
    'gazebo_msgs/srv/SetLinkState': gazebo_msgs.srv.SetLinkStateConstructor,
    'gazebo_msgs/srv/SetModelConfiguration': gazebo_msgs.srv.SetModelConfigurationConstructor,
    'gazebo_msgs/srv/SetModelState': gazebo_msgs.srv.SetModelStateConstructor,
    'gazebo_msgs/srv/SetPhysicsProperties': gazebo_msgs.srv.SetPhysicsPropertiesConstructor,
    'gazebo_msgs/srv/SpawnEntity': gazebo_msgs.srv.SpawnEntityConstructor,
    'gazebo_msgs/srv/SpawnModel': gazebo_msgs.srv.SpawnModelConstructor,
    'lifecycle_msgs/srv/ChangeState': lifecycle_msgs.srv.ChangeStateConstructor,
    'lifecycle_msgs/srv/GetAvailableStates': lifecycle_msgs.srv.GetAvailableStatesConstructor,
    'lifecycle_msgs/srv/GetAvailableTransitions': lifecycle_msgs.srv.GetAvailableTransitionsConstructor,
    'lifecycle_msgs/srv/GetState': lifecycle_msgs.srv.GetStateConstructor,
    'logging_demo/srv/ConfigLogger': logging_demo.srv.ConfigLoggerConstructor,
    'map_msgs/srv/GetMapROI': map_msgs.srv.GetMapROIConstructor,
    'map_msgs/srv/GetPointMap': map_msgs.srv.GetPointMapConstructor,
    'map_msgs/srv/GetPointMapROI': map_msgs.srv.GetPointMapROIConstructor,
    'map_msgs/srv/ProjectedMapsInfo': map_msgs.srv.ProjectedMapsInfoConstructor,
    'map_msgs/srv/SaveMap': map_msgs.srv.SaveMapConstructor,
    'map_msgs/srv/SetMapProjections': map_msgs.srv.SetMapProjectionsConstructor,
    'nav_msgs/srv/GetMap': nav_msgs.srv.GetMapConstructor,
    'nav_msgs/srv/GetPlan': nav_msgs.srv.GetPlanConstructor,
    'nav_msgs/srv/SetMap': nav_msgs.srv.SetMapConstructor,
    'pcl_msgs/srv/UpdateFilename': pcl_msgs.srv.UpdateFilenameConstructor,
    'rcl_interfaces/srv/DescribeParameters': rcl_interfaces.srv.DescribeParametersConstructor,
    'rcl_interfaces/srv/GetParameterTypes': rcl_interfaces.srv.GetParameterTypesConstructor,
    'rcl_interfaces/srv/GetParameters': rcl_interfaces.srv.GetParametersConstructor,
    'rcl_interfaces/srv/ListParameters': rcl_interfaces.srv.ListParametersConstructor,
    'rcl_interfaces/srv/SetParameters': rcl_interfaces.srv.SetParametersConstructor,
    'rcl_interfaces/srv/SetParametersAtomically': rcl_interfaces.srv.SetParametersAtomicallyConstructor,
    'sensor_msgs/srv/SetCameraInfo': sensor_msgs.srv.SetCameraInfoConstructor,
    'std_srvs/srv/Empty': std_srvs.srv.EmptyConstructor,
    'std_srvs/srv/SetBool': std_srvs.srv.SetBoolConstructor,
    'std_srvs/srv/Trigger': std_srvs.srv.TriggerConstructor,
    'tf2_msgs/srv/FrameGraph': tf2_msgs.srv.FrameGraphConstructor,
    'turtlesim/srv/Kill': turtlesim.srv.KillConstructor,
    'turtlesim/srv/SetPen': turtlesim.srv.SetPenConstructor,
    'turtlesim/srv/Spawn': turtlesim.srv.SpawnConstructor,
    'turtlesim/srv/TeleportAbsolute': turtlesim.srv.TeleportAbsoluteConstructor,
    'turtlesim/srv/TeleportRelative': turtlesim.srv.TeleportRelativeConstructor,
    'visualization_msgs/srv/GetInteractiveMarkers': visualization_msgs.srv.GetInteractiveMarkersConstructor,
  };
  type ServiceTypeClassName = keyof ServicesMap;
  type Service = ServicesMap[ServiceTypeClassName];
  type ServiceType<T> = T extends ServiceTypeClassName ? ServicesMap[T] : object;

  type ActionsMap = {
    'action_tutorials_interfaces/action/Fibonacci': action_tutorials_interfaces.action.FibonacciConstructor,
    'example_interfaces/action/Fibonacci': example_interfaces.action.FibonacciConstructor,
    'tf2_msgs/action/LookupTransform': tf2_msgs.action.LookupTransformConstructor,
    'turtlesim/action/RotateAbsolute': turtlesim.action.RotateAbsoluteConstructor,
  };
  type ActionTypeClassName = keyof ActionsMap;
  type Action = ActionsMap[ActionTypeClassName];
  type ActionType<T> = T extends ActionTypeClassName ? ActionsMap[T] : object;

  type TypeClassName = MessageTypeClassName | ServiceTypeClassName | ActionTypeClassName;
  type InterfaceType<T> = T extends TypeClassName ? (MessageTypeClassConstructorMap & ServicesMap & ActionsMap)[T] : object;
}
