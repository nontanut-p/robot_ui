{"ast":null,"code":"import _slicedToArray from\"/home/pat/robot_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import io from\"socket.io-client\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket=io();function Socket(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];//const [receivedMessagess, setReceivedMessagess] = useState([]);\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),displayName=_useState4[0],setDisplayName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),displayNameInput=_useState6[0],setDisplayNameInput=_useState6[1];/*\n  useEffect(() => {\n    socket.on(\"send-message\", message => {\n      console.log(receivedMessagess)\n      setReceivedMessagess(prevState => [...prevState, message]);\n    });\n  }, []); */var sendMessage=function sendMessage(){socket.emit(\"message\",\"\".concat(new Date().toLocaleString(),\" : \").concat(message));setMessage(\"\");};var onUpdateMessage=function onUpdateMessage(event){setMessage(event.target.value);};var onUpdateDisplayNameInput=function onUpdateDisplayNameInput(event){setDisplayNameInput(event.target.value);};var updateDisplayName=function updateDisplayName(){setDisplayName(displayNameInput);};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:displayName?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"ul\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:onUpdateMessage}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"SEND\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{for:\"display-name\",children:\"Display Name\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:displayNameInput,onChange:onUpdateDisplayNameInput}),/*#__PURE__*/_jsx(\"button\",{onClick:updateDisplayName,children:\"SUBMIT\"})]})});}export default Socket;","map":{"version":3,"sources":["/home/pat/robot_ui/src/components/pages/Socket.js"],"names":["React","useState","useEffect","io","socket","Socket","message","setMessage","displayName","setDisplayName","displayNameInput","setDisplayNameInput","sendMessage","emit","Date","toLocaleString","onUpdateMessage","event","target","value","onUpdateDisplayNameInput","updateDisplayName"],"mappings":"qGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,C,6IAEA,GAAMC,CAAAA,MAAM,CAAGD,EAAE,EAAjB,CAEA,QAASE,CAAAA,MAAT,EAAkB,CAChB,cAA8BJ,QAAQ,CAAC,EAAD,CAAtC,wCAAOK,OAAP,eAAgBC,UAAhB,eACA;AACA,eAAsCN,QAAQ,CAAC,IAAD,CAA9C,yCAAOO,WAAP,eAAoBC,cAApB,eACA,eAAgDR,QAAQ,CAAC,EAAD,CAAxD,yCAAOS,gBAAP,eAAyBC,mBAAzB,eACF;AACA;AACA;AACA;AACA;AACA;AACA,YAEE,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBR,MAAM,CAACS,IAAP,CAAY,SAAZ,WAA0B,GAAIC,CAAAA,IAAJ,GAAWC,cAAX,EAA1B,eAA2DT,OAA3D,GACAC,UAAU,CAAC,EAAD,CAAV,CACD,CAHD,CAKA,GAAMS,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC/BV,UAAU,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CACD,CAFD,CAIA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAAH,KAAK,CAAI,CACxCN,mBAAmB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB,CACD,CAFD,CAIA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BZ,cAAc,CAACC,gBAAD,CAAd,CACD,CAFD,CAIA,mBACE,YAAK,SAAS,CAAC,WAAf,UACGF,WAAW,cACV,wCACE,aADF,cAME,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEF,OAA1B,CAAmC,QAAQ,CAAEU,eAA7C,EANF,cAOE,eAAQ,OAAO,CAAEJ,WAAjB,kBAPF,GADU,cAWV,wCACE,cAAO,GAAG,CAAC,cAAX,0BADF,cAEE,aAFF,cAGE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEF,gBAFT,CAGE,QAAQ,CAAEU,wBAHZ,EAHF,cAQE,eAAQ,OAAO,CAAEC,iBAAjB,oBARF,GAZJ,EADF,CA0BD,CAED,cAAehB,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport io from \"socket.io-client\";\n\nconst socket = io();\n\nfunction Socket() {\n  const [message, setMessage] = useState(\"\");\n  //const [receivedMessagess, setReceivedMessagess] = useState([]);\n  const [displayName, setDisplayName] = useState(null);\n  const [displayNameInput, setDisplayNameInput] = useState(\"\");\n/*\n  useEffect(() => {\n    socket.on(\"send-message\", message => {\n      console.log(receivedMessagess)\n      setReceivedMessagess(prevState => [...prevState, message]);\n    });\n  }, []); */\n\n  const sendMessage = () => {\n    socket.emit(\"message\", `${new Date().toLocaleString()} : ${message}`);\n    setMessage(\"\");\n  };\n\n  const onUpdateMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  const onUpdateDisplayNameInput = event => {\n    setDisplayNameInput(event.target.value);\n  };\n\n  const updateDisplayName = () => {\n    setDisplayName(displayNameInput);\n  };\n\n  return (\n    <div className=\"container\">\n      {displayName ? (\n        <>\n          <ul>\n            {/*receivedMessagess.map((item, index) => (\n              <li key={index}>{item}</li>\n            ))*/}\n          </ul>\n          <input type=\"text\" value={message} onChange={onUpdateMessage} />\n          <button onClick={sendMessage}>SEND</button>\n        </>\n      ) : (\n        <>\n          <label for=\"display-name\">Display Name</label>\n          <br />\n          <input\n            type=\"text\"\n            value={displayNameInput}\n            onChange={onUpdateDisplayNameInput}\n          />\n          <button onClick={updateDisplayName}>SUBMIT</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Socket;\n"]},"metadata":{},"sourceType":"module"}