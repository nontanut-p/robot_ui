{"ast":null,"code":"import _classCallCheck from \"/home/pat/robot_ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pat/robot_ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/pat/robot_ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/pat/robot_ui/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/pat/robot_ui/src/components/pages/Socket.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Socket = /*#__PURE__*/function (_Component) {\n  _inherits(Socket, _Component);\n\n  var _super = _createSuper(Socket);\n\n  function Socket() {\n    var _this;\n\n    _classCallCheck(this, Socket);\n\n    _this = _super.call(this);\n\n    _this.componentDidMount = function () {\n      _this.response();\n    };\n\n    _this.send = function (message) {\n      var _this$state = _this.state,\n          endpoint = _this$state.endpoint,\n          input = _this$state.input;\n      var socket = socketIOClient(endpoint);\n      socket.emit('sent-message', input);\n\n      _this.setState({\n        input: ''\n      });\n    };\n\n    _this.response = function () {\n      var _this$state2 = _this.state,\n          endpoint = _this$state2.endpoint,\n          message = _this$state2.message;\n      var temp = message;\n      var socket = socketIOClient(endpoint);\n      socket.on('new-message', function (messageNew) {\n        temp.push(messageNew);\n\n        _this.setState({\n          message: temp\n        });\n      });\n    };\n\n    _this.changeInput = function (e) {\n      _this.setState({\n        input: e.target.value\n      });\n    };\n\n    _this.state = {\n      input: '',\n      message: [],\n      endpoint: \"http://localhost:4545\" // เชื่อมต่อไปยัง url ของ realtime server\n\n    };\n    return _this;\n  }\n\n  _createClass(Socket, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          input = _this$state3.input,\n          message = _this$state3.message;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: style,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: this.changeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              return _this2.send();\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), message.map(function (data, i) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: style,\n            children: [i + 1, \" : \", data]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this2);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Socket;\n}(Component);\n\nvar style = {\n  marginTop: 20,\n  paddingLeft: 50\n};\nexport default Socket;","map":{"version":3,"sources":["/home/pat/robot_ui/src/components/pages/Socket.js"],"names":["React","Component","socketIOClient","Socket","componentDidMount","response","send","message","state","endpoint","input","socket","emit","setState","temp","on","messageNew","push","changeInput","e","target","value","style","map","data","i","marginTop","paddingLeft"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;IAEMC,M;;;;;AACJ,oBAAc;AAAA;;AAAA;;AACZ;;AADY,UAUdC,iBAVc,GAUM,YAAM;AACxB,YAAKC,QAAL;AACD,KAZa;;AAAA,UAedC,IAfc,GAeP,UAACC,OAAD,EAAa;AAClB,wBAA4B,MAAKC,KAAjC;AAAA,UAAQC,QAAR,eAAQA,QAAR;AAAA,UAAkBC,KAAlB,eAAkBA,KAAlB;AACA,UAAMC,MAAM,GAAGT,cAAc,CAACO,QAAD,CAA7B;AACAE,MAAAA,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4BF,KAA5B;;AACA,YAAKG,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KApBa;;AAAA,UAuBdL,QAvBc,GAuBH,YAAM;AACf,yBAA8B,MAAKG,KAAnC;AAAA,UAAQC,QAAR,gBAAQA,QAAR;AAAA,UAAkBF,OAAlB,gBAAkBA,OAAlB;AACA,UAAMO,IAAI,GAAGP,OAAb;AACA,UAAMI,MAAM,GAAGT,cAAc,CAACO,QAAD,CAA7B;AACAE,MAAAA,MAAM,CAACI,EAAP,CAAU,aAAV,EAAyB,UAACC,UAAD,EAAgB;AACvCF,QAAAA,IAAI,CAACG,IAAL,CAAUD,UAAV;;AACA,cAAKH,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAEO;AAAX,SAAd;AACD,OAHD;AAID,KA/Ba;;AAAA,UAiCdI,WAjCc,GAiCA,UAACC,CAAD,EAAO;AACnB,YAAKN,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAES,CAAC,CAACC,MAAF,CAASC;AAAlB,OAAd;AACD,KAnCa;;AAGZ,UAAKb,KAAL,GAAa;AACXE,MAAAA,KAAK,EAAE,EADI;AAEXH,MAAAA,OAAO,EAAE,EAFE;AAGXE,MAAAA,QAAQ,EAAE,uBAHC,CAGuB;;AAHvB,KAAb;AAHY;AAQb;;;;WA6BD,kBAAS;AAAA;;AACP,yBAA2B,KAAKD,KAAhC;AAAA,UAAQE,KAAR,gBAAQA,KAAR;AAAA,UAAeH,OAAf,gBAAeA,OAAf;AACA,0BACE;AAAA,gCACE;AAAK,UAAA,KAAK,EAAEe,KAAZ;AAAA,kCACE;AAAO,YAAA,KAAK,EAAEZ,KAAd;AAAqB,YAAA,QAAQ,EAAE,KAAKQ;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACZ,IAAL,EAAN;AAAA,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAMIC,OAAO,CAACgB,GAAR,CAAY,UAACC,IAAD,EAAOC,CAAP;AAAA,8BACV;AAAa,YAAA,KAAK,EAAEH,KAApB;AAAA,uBACGG,CAAC,GAAG,CADP,SACaD,IADb;AAAA,aAAUC,CAAV;AAAA;AAAA;AAAA;AAAA,oBADU;AAAA,SAAZ,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAeD;;;;EAvDkBxB,S;;AA0DrB,IAAMqB,KAAK,GAAG;AAAEI,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,WAAW,EAAE;AAA9B,CAAd;AAEA,eAAexB,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport socketIOClient from 'socket.io-client'\n\nclass Socket extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      input: '',\n      message: [],\n      endpoint: \"http://localhost:4545\" // เชื่อมต่อไปยัง url ของ realtime server\n    }\n  }\n\n  componentDidMount = () => {\n    this.response()\n  }\n\n  // เมื่อมีการส่งข้อมูลไปยัง server\n  send = (message) => {\n    const { endpoint, input } = this.state\n    const socket = socketIOClient(endpoint)\n    socket.emit('sent-message', input)\n    this.setState({ input: '' })\n  }\n\n  // รอรับข้อมูลเมื่อ server มีการ update\n  response = () => {\n    const { endpoint, message } = this.state\n    const temp = message\n    const socket = socketIOClient(endpoint)\n    socket.on('new-message', (messageNew) => {\n      temp.push(messageNew)\n      this.setState({ message: temp })\n    })\n  }\n\n  changeInput = (e) => {\n    this.setState({ input: e.target.value })\n  }\n\n  render() {\n    const { input, message } = this.state\n    return (\n      <div>\n        <div style={style}>\n          <input value={input} onChange={this.changeInput} />\n          <button onClick={() => this.send()}>Send</button>\n        </div>\n        {\n          message.map((data, i) =>\n            <div key={i} style={style} >\n              {i + 1} : {data}\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst style = { marginTop: 20, paddingLeft: 50 }\n\nexport default Socket"]},"metadata":{},"sourceType":"module"}