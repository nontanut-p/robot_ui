{"ast":null,"code":"import _slicedToArray from \"/home/pat/robot_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/pat/robot_ui/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar';\nimport Home from './components/pages/Home';\nimport Socket from './components/pages/Socket';\nimport Header from './components/components/Header';\nimport Maps from './components/components/Maps';\nimport Footer from './components/components/Footer';\nimport { useState, useEffect } from 'react';\nimport SimplePeer from 'simple-peer';\nimport Peer from './Peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _useState = useState([{\n    cpuUsage: 0,\n    ramUsage: 0,\n    battery: 0,\n    temp: 0\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      computerStatus = _useState2[0],\n      setcomputerStatus = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      connectStatus = _useState4[0],\n      setConnectStatus = _useState4[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      console.log('Peer[1]', Peer[0]);\n      setcomputerStatus([{\n        cpuUsage: Peer[0].cpuUsage,\n        ramUsage: Peer[0].ramUsage,\n        battery: Peer[0].battery,\n        temp: Peer[0].temp\n      }]);\n      setConnectStatus(Peer[1]);\n    }, 3000);\n  }, 0);\n  console.log(computerStatus, 'computerStatus');\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          hardwareStatus: computerStatus,\n          connectStatus: connectStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/map\",\n        children: /*#__PURE__*/_jsxDEV(Maps, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/test\",\n        children: /*#__PURE__*/_jsxDEV(Socket, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"RJUNHQ+FKHMxu/CFuaqCxCxA004=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pat/robot_ui/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Link","Navbar","Home","Socket","Header","Maps","Footer","useState","useEffect","SimplePeer","Peer","App","cpuUsage","ramUsage","battery","temp","computerStatus","setcomputerStatus","connectStatus","setConnectStatus","setInterval","console","log"],"mappings":";;;;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACd,kBAA4CJ,QAAQ,CAAC,CAAC;AACrDK,IAAAA,QAAQ,EAAE,CAD2C;AAErDC,IAAAA,QAAQ,EAAE,CAF2C;AAGrDC,IAAAA,OAAO,EAAE,CAH4C;AAIrDC,IAAAA,IAAI,EAAE;AAJ+C,GAAD,CAAD,CAApD;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,iBAAvB;;AAMA,mBAA0CV,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOW,aAAP;AAAA,MAAsBC,gBAAtB;;AACAX,EAAAA,SAAS,CAAC,YAAM;AAEfY,IAAAA,WAAW,CAAC,YAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,IAAI,CAAC,CAAD,CAA3B;AACAO,MAAAA,iBAAiB,CAAC,CAAC;AAClBL,QAAAA,QAAQ,EAAEF,IAAI,CAAC,CAAD,CAAJ,CAAQE,QADA;AAElBC,QAAAA,QAAQ,EAAEH,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAFA;AAGlBC,QAAAA,OAAO,EAAEJ,IAAI,CAAC,CAAD,CAAJ,CAAQI,OAHC;AAIlBC,QAAAA,IAAI,EAAEL,IAAI,CAAC,CAAD,CAAJ,CAAQK;AAJI,OAAD,CAAD,CAAjB;AAMAI,MAAAA,gBAAgB,CAACT,IAAI,CAAC,CAAD,CAAL,CAAhB;AAEA,KAVU,EAUR,IAVQ,CAAX;AAYA,GAdQ,EAeN,CAfM,CAAT;AAgBAW,EAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ,EAA4B,gBAA5B;AACA,sBAEC,QAAC,MAAD;AAAA,2BAEC,QAAC,MAAD;AAAA,8BACC,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,mBACE,GADF,eAEC;AAAA,iCACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFD,eAKC,QAAC,MAAD;AAAQ,UAAA,cAAc,EAAEA,cAAxB;AAAwC,UAAA,aAAa,EAAEE;AAAvD;AAAA;AAAA;AAAA;AAAA,gBALD,eAMC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAND,eAOC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAUC,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAA,+BACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAVD,eAaC,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,OAAlB;AAAA,+BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UAFD;AAwBA;;GAjDQP,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar';\nimport Home from './components/pages/Home';\nimport Socket from './components/pages/Socket';\nimport Header from './components/components/Header';\nimport Maps from './components/components/Maps';\nimport Footer from './components/components/Footer'\nimport { useState, useEffect } from 'react'\n\nimport SimplePeer from 'simple-peer'\nimport Peer from './Peer'\nfunction App() {\n\tconst [computerStatus, setcomputerStatus] = useState([{\n\t\tcpuUsage: 0,\n\t\tramUsage: 0,\n\t\tbattery: 0,\n\t\ttemp: 0\n\t}])\n\tconst [connectStatus, setConnectStatus] = useState(false)\n\tuseEffect(() => {\n\n\t\tsetInterval(() => {\n\t\t\tconsole.log('Peer[1]', Peer[0])\n\t\t\tsetcomputerStatus([{\n\t\t\t\tcpuUsage: Peer[0].cpuUsage,\n\t\t\t\tramUsage: Peer[0].ramUsage,\n\t\t\t\tbattery: Peer[0].battery,\n\t\t\t\ttemp: Peer[0].temp\n\t\t\t}])\n\t\t\tsetConnectStatus(Peer[1])\n\n\t\t}, 3000)\n\n\t}\n\t\t, 0);\n\tconsole.log(computerStatus, 'computerStatus')\n\treturn (\n\n\t\t<Router>\n\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<div >\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Header hardwareStatus={computerStatus} connectStatus={connectStatus} />\n\t\t\t\t\t<Home />\n\t\t\t\t\t<Footer />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path='/map'>\n\t\t\t\t\t<Maps />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path=\"/test\" >\n\t\t\t\t\t<Socket />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\n\t\t</Router>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}